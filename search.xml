<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title></title>
      <link href="/2025/03/03/%E8%87%AA%E4%B8%BB%E5%B7%A1%E8%88%AA%E8%B5%9B/"/>
      <url>/2025/03/03/%E8%87%AA%E4%B8%BB%E5%B7%A1%E8%88%AA%E8%B5%9B/</url>
      
        <content type="html"><![CDATA[<h1 id="中国机器人及人工智能大赛自主巡航赛道"><a href="#中国机器人及人工智能大赛自主巡航赛道" class="headerlink" title="中国机器人及人工智能大赛自主巡航赛道"></a>中国机器人及人工智能大赛自主巡航赛道</h1><p>欧耶！国一！</p><p><img src="https://pic1.imgdb.cn/item/67c45be2d0e0a243d40a28f6.png" alt=""></p><p>额。。但是感觉比赛有点水，调调代码就好了</p><h2 id="一、比赛功能介绍"><a href="#一、比赛功能介绍" class="headerlink" title="一、比赛功能介绍"></a>一、比赛功能介绍</h2><p>（1）比赛场地为 3.6m*3.6m，周围架设高为 30cm 的围栏。 如图一所示。</p><p>（2）场地设置起点、终点区域各一个，尺寸为 40cm*35cm。 </p><p>（3）比赛场地会中设置 1-8 一共 8个任务点，每个任务点为 40cm*35cm 的长方形，如上图所示：任务点2和3、4和5、6和7、 1 和8之间均有高30cm长120cm的挡板隔离。 </p><p>（4）如上图所示，在场地围栏内侧贴有四个任务信息图像，任务信息图像中心距地面高度为20cm，任务信息图像有一个任务点信息。</p><p><img src="https://pic1.imgdb.cn/item/67c45cb4d0e0a243d40a29d6.png" alt=""></p><p>识别任务信息图像，分为两种一为汉字一到八，二为Aruco码的一到八。识别完进入任务点成功语音播报算完成。</p><h2 id="二、环境配置"><a href="#二、环境配置" class="headerlink" title="二、环境配置"></a>二、环境配置</h2><p>ROS2+SLAM+激光雷达+imu姿态估计+UR码+数字匹配+以及路径规划</p><p>官方提供了相关软件包，所以我们只需要了解一些Python+初始化ROS订阅，以及相关功能包的调用的一些内容就能够完成这次项目</p><p>本次项目我视觉相关内容：AR码的相关内容，以及数字的模板匹配的相关内容，想了解的请移步我的另外两篇博客：</p><p>互联网+项目中的功能——AR码的定位</p><h2 id="三、代码编写"><a href="#三、代码编写" class="headerlink" title="三、代码编写"></a>三、代码编写</h2><p>主函数代码开源</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#coding: utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> rospy</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> actionlib</span><br><span class="line"><span class="keyword">from</span> actionlib_msgs.msg <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> move_base_msgs.msg <span class="keyword">import</span> MoveBaseAction, MoveBaseGoal</span><br><span class="line"><span class="keyword">from</span> nav_msgs.msg <span class="keyword">import</span> Path</span><br><span class="line"><span class="keyword">from</span> geometry_msgs.msg <span class="keyword">import</span> PoseWithCovarianceStamped</span><br><span class="line"><span class="keyword">from</span> tf_conversions <span class="keyword">import</span> transformations</span><br><span class="line"><span class="keyword">from</span> math <span class="keyword">import</span> pi</span><br><span class="line"><span class="keyword">from</span> std_msgs.msg <span class="keyword">import</span> String</span><br><span class="line"><span class="keyword">from</span> geometry_msgs.msg <span class="keyword">import</span> Twist</span><br><span class="line"><span class="keyword">from</span> ar_track_alvar_msgs.msg <span class="keyword">import</span> AlvarMarkers</span><br><span class="line"><span class="keyword">from</span> ar_track_alvar_msgs.msg <span class="keyword">import</span> AlvarMarker</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> geometry_msgs.msg  <span class="keyword">import</span> Point</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line">reload(sys)</span><br><span class="line">sys.setdefaultencoding(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line">music_path1= <span class="string">&quot;~/abot_ws/&#x27;target1.mp3&#x27;&quot;</span></span><br><span class="line">music_path2= <span class="string">&quot;~/abot_ws/&#x27;target2.mp3&#x27;&quot;</span></span><br><span class="line">music_path3= <span class="string">&quot;/home/abot/abot_ws/&#x27;target3.mp3&#x27;&quot;</span></span><br><span class="line">music_path4 = <span class="string">&quot;/home/abot/abot_ws/&#x27;target4.mp3&#x27;&quot;</span></span><br><span class="line">music_path5 = <span class="string">&quot;/home/abot/abot_ws/&#x27;target5.mp3&#x27;&quot;</span></span><br><span class="line">music_path6 = <span class="string">&quot;/home/abot/abot_ws/&#x27;target6.mp3&#x27;&quot;</span></span><br><span class="line">music_path7 = <span class="string">&quot;/home/abot/abot_ws/&#x27;target7.mp3&#x27;&quot;</span></span><br><span class="line">music_path8 = <span class="string">&quot;/home/abot/abot_ws/&#x27;target8.mp3&#x27;&quot;</span></span><br><span class="line">mubiao2 = <span class="string">&quot;/home/abot/abot_ws/&#x27;mubiao2.mp3&#x27;&quot;</span></span><br><span class="line">mubiao4 = <span class="string">&quot;/home/abot/abot_ws/&#x27;mubiao4.mp3&#x27;&quot;</span></span><br><span class="line">mubiao6 = <span class="string">&quot;/home/abot/abot_ws/&#x27;mubiao6.mp3&#x27;&quot;</span></span><br><span class="line">mubiao8 = <span class="string">&quot;/home/abot/abot_ws/&#x27;mubiao8.mp3&#x27;&quot;</span></span><br><span class="line">mubiao1 = <span class="string">&quot;/home/abot/abot_ws/&#x27;mubiao1.mp3&#x27;&quot;</span></span><br><span class="line">mubiao3 = <span class="string">&quot;/home/abot/abot_ws/&#x27;mubiao3.mp3&#x27;&quot;</span></span><br><span class="line">mubiao5 = <span class="string">&quot;/home/abot/abot_ws/&#x27;mubiao5.mp3&#x27;&quot;</span></span><br><span class="line">mubiao7 = <span class="string">&quot;/home/abot/abot_ws/&#x27;mubiao7.mp3&#x27;&quot;</span></span><br><span class="line">music_path_start = <span class="string">&quot;/home/abot/abot_ws/&#x27;start_dl.mp3&#x27;&quot;</span></span><br><span class="line">music_path_end = <span class="string">&quot;/home/abot/abot_ws/&#x27;end.mp3&#x27;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">id</span> = <span class="number">0</span></span><br><span class="line">find_id = <span class="number">0</span></span><br><span class="line">flog0=<span class="number">255</span></span><br><span class="line">flog1=<span class="number">255</span> </span><br><span class="line">flog2=<span class="number">255</span></span><br><span class="line">flog3=<span class="number">255</span></span><br><span class="line">flog4=<span class="number">255</span></span><br><span class="line">flog5=<span class="number">255</span></span><br><span class="line">flog6=<span class="number">255</span></span><br><span class="line">flog7=<span class="number">255</span></span><br><span class="line">count = <span class="number">0</span></span><br><span class="line">move_flog = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">navigation_demo</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="variable language_">self</span>.set_pose_pub = rospy.Publisher(<span class="string">&#x27;/initialpose&#x27;</span>, PoseWithCovarianceStamped, queue_size=<span class="number">1</span>)</span><br><span class="line">        <span class="variable language_">self</span>.arrive_pub = rospy.Publisher(<span class="string">&#x27;/voiceWords&#x27;</span>,String,queue_size=<span class="number">10</span>)</span><br><span class="line">        <span class="variable language_">self</span>.ar_sub=rospy.Subscriber(<span class="string">&#x27;/object_position&#x27;</span>,Point,<span class="variable language_">self</span>.find_cb)</span><br><span class="line">        <span class="variable language_">self</span>.ar_sub=rospy.Subscriber(<span class="string">&#x27;/ar_pose_marker&#x27;</span>,AlvarMarkers,<span class="variable language_">self</span>.ar_cb)</span><br><span class="line">        <span class="variable language_">self</span>.move_base = actionlib.SimpleActionClient(<span class="string">&quot;move_base&quot;</span>, MoveBaseAction)</span><br><span class="line">        <span class="variable language_">self</span>.move_base.wait_for_server(rospy.Duration(<span class="number">60</span>))</span><br><span class="line">        <span class="variable language_">self</span>.cmd=rospy.Publisher(<span class="string">&#x27;/cmd_vel&#x27;</span>,Twist,queue_size=<span class="number">5</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">move_forward</span>(<span class="params">self</span>):</span><br><span class="line">        cmd=Twist()</span><br><span class="line">        cmd.linear.x=<span class="number">0.107</span></span><br><span class="line">        cmd.linear.y=<span class="number">0.11</span></span><br><span class="line">        cmd.angular.z=<span class="number">0.0</span></span><br><span class="line">        <span class="variable language_">self</span>.cmd.publish(cmd)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">ar_cb</span>(<span class="params">self,data</span>):</span><br><span class="line">        <span class="keyword">global</span> <span class="built_in">id</span></span><br><span class="line">        <span class="keyword">for</span> marker <span class="keyword">in</span> data.markers:</span><br><span class="line">            <span class="built_in">id</span>= marker.<span class="built_in">id</span></span><br><span class="line">            <span class="built_in">print</span>(<span class="built_in">id</span>)</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">find_cb</span>(<span class="params">self,data</span>):</span><br><span class="line">        <span class="keyword">global</span> find_id</span><br><span class="line">        point_msg =data</span><br><span class="line">        <span class="keyword">if</span>(point_msg.z&gt;=<span class="number">1</span> <span class="keyword">and</span> point_msg.z&lt;=<span class="number">8</span>):</span><br><span class="line">            find_id=<span class="number">1</span></span><br><span class="line">            <span class="comment">#print (find_id)</span></span><br><span class="line">        <span class="keyword">if</span>(point_msg.z&gt;=<span class="number">9</span> <span class="keyword">and</span> point_msg.z&lt;=<span class="number">16</span>):</span><br><span class="line">            find_id=<span class="number">2</span></span><br><span class="line">        <span class="keyword">if</span>(point_msg.z&gt;=<span class="number">17</span> <span class="keyword">and</span> point_msg.z&lt;=<span class="number">24</span>):</span><br><span class="line">            find_id=<span class="number">3</span></span><br><span class="line">        <span class="keyword">if</span>(point_msg.z&gt;=<span class="number">25</span> <span class="keyword">and</span> point_msg.z&lt;=<span class="number">32</span>):</span><br><span class="line">            find_id=<span class="number">4</span></span><br><span class="line">        <span class="keyword">if</span>(point_msg.z&gt;=<span class="number">33</span> <span class="keyword">and</span> point_msg.z&lt;=<span class="number">40</span>):</span><br><span class="line">            find_id=<span class="number">5</span></span><br><span class="line">        <span class="keyword">if</span>(point_msg.z&gt;=<span class="number">41</span> <span class="keyword">and</span> point_msg.z&lt;=<span class="number">48</span>):</span><br><span class="line">            find_id=<span class="number">6</span></span><br><span class="line">        <span class="keyword">if</span>(point_msg.z&gt;=<span class="number">49</span> <span class="keyword">and</span> point_msg.z&lt;=<span class="number">56</span>):</span><br><span class="line">            find_id=<span class="number">7</span></span><br><span class="line">        <span class="keyword">if</span>(point_msg.z&gt;=<span class="number">57</span> <span class="keyword">and</span> point_msg.z&lt;=<span class="number">64</span>):</span><br><span class="line">            find_id=<span class="number">8</span></span><br><span class="line">    <span class="comment"># def ar_cb(self, data):</span></span><br><span class="line">    <span class="comment">#     global id  </span></span><br><span class="line">    <span class="comment">#     global flog0 , flog1 ,flog2,flog3,flog4,flog5,flog6,flog7,count,move_flog</span></span><br><span class="line">    <span class="comment">#     id =255</span></span><br><span class="line">    <span class="comment">#     point_msg = data</span></span><br><span class="line">    <span class="comment">#     # rospy.loginfo(&#x27;z = %d&#x27;, point_msg.z)</span></span><br><span class="line">    <span class="comment">#     if (point_msg.z != 255  and move_flog == 0) :</span></span><br><span class="line">    <span class="comment">#             if(point_msg.z&gt;=1 and point_msg.z&lt;=8 and flog0==255):</span></span><br><span class="line">    <span class="comment">#                 id = 1</span></span><br><span class="line">    <span class="comment">#                 flog0=1</span></span><br><span class="line">    <span class="comment">#             elif(point_msg.z&gt;=9 and point_msg.z&lt;=16 and flog1==255):</span></span><br><span class="line">    <span class="comment">#                 id = 2</span></span><br><span class="line">    <span class="comment">#                 flog1=2</span></span><br><span class="line">    <span class="comment">#             elif(point_msg.z&gt;=17 and point_msg.z&lt;=24 and flog2==255):</span></span><br><span class="line">    <span class="comment">#                 id = 3</span></span><br><span class="line">    <span class="comment">#                 flog2=3</span></span><br><span class="line">    <span class="comment">#             elif(point_msg.z&gt;=25 and point_msg.z&lt;=32 and flog3==255):</span></span><br><span class="line">    <span class="comment">#                 id = 4</span></span><br><span class="line">    <span class="comment">#                 flog3=4      </span></span><br><span class="line">    <span class="comment">#             elif(point_msg.z&gt;=33 and point_msg.z&lt;=40 and flog4==255):</span></span><br><span class="line">    <span class="comment">#                 id = 5</span></span><br><span class="line">    <span class="comment">#                 flog4=5</span></span><br><span class="line">    <span class="comment">#             elif(point_msg.z&gt;=41 and point_msg.z&lt;=48 and flog5==255):</span></span><br><span class="line">    <span class="comment">#                 id = 6</span></span><br><span class="line">    <span class="comment">#                 flog5=6     </span></span><br><span class="line">    <span class="comment">#             elif(point_msg.z&gt;=49 and point_msg.z&lt;=56 and flog6==255):</span></span><br><span class="line">    <span class="comment">#                 id = 7</span></span><br><span class="line">    <span class="comment">#                 flog6=7</span></span><br><span class="line">    <span class="comment">#             elif(point_msg.z&gt;=57 and point_msg.z&lt;=64 and flog7==255):</span></span><br><span class="line">    <span class="comment">#                 id = 8</span></span><br><span class="line">    <span class="comment">#                 flog7=8                                  </span></span><br><span class="line">    <span class="comment">#     elif (point_msg.z != 255 and move_flog == 1) :</span></span><br><span class="line">    <span class="comment">#             if(point_msg.z&gt;=1 and point_msg.z&lt;=8 and flog0==255):</span></span><br><span class="line">    <span class="comment">#                 id = 1</span></span><br><span class="line">    <span class="comment">#                 flog0=1</span></span><br><span class="line">    <span class="comment">#             elif(point_msg.z&gt;=9 and point_msg.z&lt;=16 and flog1==255):</span></span><br><span class="line">    <span class="comment">#                 id = 2</span></span><br><span class="line">    <span class="comment">#                 flog1=2</span></span><br><span class="line">    <span class="comment">#             elif(point_msg.z&gt;=17 and point_msg.z&lt;=24 and flog2==255):</span></span><br><span class="line">    <span class="comment">#                 id = 3</span></span><br><span class="line">    <span class="comment">#                 flog2=3</span></span><br><span class="line">    <span class="comment">#             elif(point_msg.z&gt;=25 and point_msg.z&lt;=32 and flog3==255):</span></span><br><span class="line">    <span class="comment">#                 id = 4</span></span><br><span class="line">    <span class="comment">#                 flog3=4      </span></span><br><span class="line">    <span class="comment">#             elif(point_msg.z&gt;=33 and point_msg.z&lt;=40 and flog4==255):</span></span><br><span class="line">    <span class="comment">#                 id = 5</span></span><br><span class="line">    <span class="comment">#                 flog4=5</span></span><br><span class="line">    <span class="comment">#             elif(point_msg.z&gt;=41 and point_msg.z&lt;=48 and flog5==255):</span></span><br><span class="line">    <span class="comment">#                 id = 6</span></span><br><span class="line">    <span class="comment">#                 flog5=6     </span></span><br><span class="line">    <span class="comment">#             elif(point_msg.z&gt;=49 and point_msg.z&lt;=56 and flog6==255):</span></span><br><span class="line">    <span class="comment">#                 id = 7</span></span><br><span class="line">    <span class="comment">#                 flog6=7</span></span><br><span class="line">    <span class="comment">#             elif(point_msg.z&gt;=57 and point_msg.z&lt;=64 and flog7==255):</span></span><br><span class="line">    <span class="comment">#                 id = 8</span></span><br><span class="line">    <span class="comment">#                 flog7=8          </span></span><br><span class="line">    <span class="comment">#     else:</span></span><br><span class="line">    <span class="comment">#             for marker in data.markers:</span></span><br><span class="line">    <span class="comment">#                 id = marker.id</span></span><br><span class="line">            <span class="comment"># print id</span></span><br><span class="line">        <span class="comment">#print flog0 , flog1 , flog2</span></span><br><span class="line">        <span class="comment"># rospy.loginfo(&#x27;id = %d&#x27;, id)</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">set_pose</span>(<span class="params">self, p</span>):</span><br><span class="line">        <span class="keyword">if</span> <span class="variable language_">self</span>.move_base <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">        x, y, th = p</span><br><span class="line"></span><br><span class="line">        pose = PoseWithCovarianceStamped()</span><br><span class="line">        pose.header.stamp = rospy.Time.now()</span><br><span class="line">        pose.header.frame_id = <span class="string">&#x27;map&#x27;</span></span><br><span class="line">        pose.pose.pose.position.x = x</span><br><span class="line">        pose.pose.pose.position.y = y</span><br><span class="line">        q = transformations.quaternion_from_euler(<span class="number">0.0</span>, <span class="number">0.0</span>, th/<span class="number">180.0</span>*pi)</span><br><span class="line">        pose.pose.pose.orientation.x = q[<span class="number">0</span>]</span><br><span class="line">        pose.pose.pose.orientation.y = q[<span class="number">1</span>]</span><br><span class="line">        pose.pose.pose.orientation.z = q[<span class="number">2</span>]</span><br><span class="line">        pose.pose.pose.orientation.w = q[<span class="number">3</span>]</span><br><span class="line"></span><br><span class="line">        <span class="variable language_">self</span>.set_pose_pub.publish(pose)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">_done_cb</span>(<span class="params">self, status, result</span>):</span><br><span class="line">        rospy.loginfo(<span class="string">&quot;navigation done! status:%d result:%s&quot;</span>%(status, result))</span><br><span class="line">        arrive_str = <span class="string">&quot;arrived to traget point&quot;</span></span><br><span class="line">        <span class="variable language_">self</span>.arrive_pub.publish(arrive_str)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">_active_cb</span>(<span class="params">self</span>):</span><br><span class="line">        rospy.loginfo(<span class="string">&quot;[Navi] navigation has be actived&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">_feedback_cb</span>(<span class="params">self, feedback</span>):</span><br><span class="line">        msg = feedback</span><br><span class="line">        <span class="comment">#rospy.loginfo(&quot;[Navi] navigation feedback\r\n%s&quot;%feedback)</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">goto</span>(<span class="params">self, p</span>):</span><br><span class="line">        rospy.loginfo(<span class="string">&quot;[Navi] goto %s&quot;</span>%p)</span><br><span class="line">        <span class="comment">#arrive_str = &quot;going to next point&quot;</span></span><br><span class="line">        <span class="comment">#self.arrive_pub.publish(arrive_str)</span></span><br><span class="line">        goal = MoveBaseGoal()</span><br><span class="line"></span><br><span class="line">        goal.target_pose.header.frame_id = <span class="string">&#x27;map&#x27;</span></span><br><span class="line">        goal.target_pose.header.stamp = rospy.Time.now()</span><br><span class="line">        goal.target_pose.pose.position.x = p[<span class="number">0</span>]</span><br><span class="line">        goal.target_pose.pose.position.y = p[<span class="number">1</span>]</span><br><span class="line">        q = transformations.quaternion_from_euler(<span class="number">0.0</span>, <span class="number">0.0</span>, p[<span class="number">2</span>]/<span class="number">180.0</span>*pi)</span><br><span class="line">        goal.target_pose.pose.orientation.x = q[<span class="number">0</span>]</span><br><span class="line">        goal.target_pose.pose.orientation.y = q[<span class="number">1</span>]</span><br><span class="line">        goal.target_pose.pose.orientation.z = q[<span class="number">2</span>]</span><br><span class="line">        goal.target_pose.pose.orientation.w = q[<span class="number">3</span>]</span><br><span class="line"></span><br><span class="line">        <span class="variable language_">self</span>.move_base.send_goal(goal, <span class="variable language_">self</span>._done_cb, <span class="variable language_">self</span>._active_cb, <span class="variable language_">self</span>._feedback_cb)</span><br><span class="line">        result = <span class="variable language_">self</span>.move_base.wait_for_result(rospy.Duration(<span class="number">60</span>))</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> result:</span><br><span class="line">            <span class="variable language_">self</span>.move_base.cancel_goal()</span><br><span class="line">            rospy.loginfo(<span class="string">&quot;Timed out achieving goal&quot;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            state = <span class="variable language_">self</span>.move_base.get_state()</span><br><span class="line">            <span class="keyword">if</span> state == GoalStatus.SUCCEEDED:</span><br><span class="line">                rospy.loginfo(<span class="string">&quot;reach goal %s succeeded!&quot;</span>%p)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">cancel</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="variable language_">self</span>.move_base.cancel_all_goals()</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    rospy.init_node(<span class="string">&#x27;navigation_move&#x27;</span>,anonymous=<span class="literal">True</span>)</span><br><span class="line">    goalListX = rospy.get_param(<span class="string">&#x27;~goalListX&#x27;</span>, <span class="string">&#x27;2.0, 2.0&#x27;</span>)</span><br><span class="line">    goalListY = rospy.get_param(<span class="string">&#x27;~goalListY&#x27;</span>, <span class="string">&#x27;2.0, 4.0&#x27;</span>)</span><br><span class="line">    goalListYaw = rospy.get_param(<span class="string">&#x27;~goalListYaw&#x27;</span>, <span class="string">&#x27;0, 90.0&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    goals = [[<span class="built_in">float</span>(x), <span class="built_in">float</span>(y), <span class="built_in">float</span>(yaw)] <span class="keyword">for</span> (x, y, yaw) <span class="keyword">in</span> <span class="built_in">zip</span>(goalListX.split(<span class="string">&quot;,&quot;</span>),goalListY.split(<span class="string">&quot;,&quot;</span>),goalListYaw.split(<span class="string">&quot;,&quot;</span>))]</span><br><span class="line">    <span class="built_in">print</span> (<span class="string">&#x27;Please call DingLiang666 to continue: &#x27;</span>)</span><br><span class="line">    <span class="built_in">input</span> = raw_input()</span><br><span class="line">    r = rospy.Rate(<span class="number">1</span>)</span><br><span class="line">    r.sleep()</span><br><span class="line">    navi = navigation_demo()</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">input</span> == <span class="string">&#x27;1&#x27;</span>):</span><br><span class="line"><span class="comment">#square1</span></span><br><span class="line"></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;1&#x27;</span>)</span><br><span class="line">        navi.goto(goals[<span class="number">0</span>])</span><br><span class="line">        rospy.sleep(<span class="number">5</span>)</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">id</span>==<span class="number">1</span> <span class="keyword">or</span> find_id==<span class="number">1</span>):</span><br><span class="line">            os.system(<span class="string">&#x27;mplayer %s&#x27;</span> % music_path1)</span><br><span class="line">            navi.goto(goals[<span class="number">1</span>])</span><br><span class="line">            os.system(<span class="string">&#x27;mplayer %s&#x27;</span> % mubiao1)</span><br><span class="line">            rospy.sleep(<span class="number">3</span>)</span><br><span class="line">        <span class="keyword">elif</span>(<span class="built_in">id</span>==<span class="number">2</span> <span class="keyword">or</span> find_id==<span class="number">2</span>):</span><br><span class="line">            os.system(<span class="string">&#x27;mplayer %s&#x27;</span> % music_path2)</span><br><span class="line">            navi.goto(goals[<span class="number">2</span>])</span><br><span class="line">            os.system(<span class="string">&#x27;mplayer %s&#x27;</span> % mubiao2)</span><br><span class="line">            rospy.sleep(<span class="number">3</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#square2</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;2&#x27;</span>)</span><br><span class="line">        navi.goto(goals[<span class="number">13</span>])</span><br><span class="line">        <span class="comment"># rospy.sleep(1)</span></span><br><span class="line">        navi.goto(goals[<span class="number">3</span>])</span><br><span class="line">        rospy.sleep(<span class="number">5</span>)</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">id</span>==<span class="number">3</span> <span class="keyword">or</span> find_id==<span class="number">3</span>):</span><br><span class="line">            os.system(<span class="string">&#x27;mplayer %s&#x27;</span> % music_path3)</span><br><span class="line">            navi.goto(goals[<span class="number">4</span>])</span><br><span class="line">            os.system(<span class="string">&#x27;mplayer %s&#x27;</span> % mubiao3)</span><br><span class="line">            rospy.sleep(<span class="number">3</span>)</span><br><span class="line">        <span class="keyword">elif</span>(<span class="built_in">id</span>==<span class="number">4</span> <span class="keyword">or</span> find_id==<span class="number">4</span>):</span><br><span class="line">            os.system(<span class="string">&#x27;mplayer %s&#x27;</span> % music_path4)</span><br><span class="line">            navi.goto(goals[<span class="number">5</span>])</span><br><span class="line">            os.system(<span class="string">&#x27;mplayer %s&#x27;</span> % mubiao4)</span><br><span class="line">            rospy.sleep(<span class="number">3</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#square3</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;3&#x27;</span>)</span><br><span class="line">        navi.goto(goals[<span class="number">14</span>])</span><br><span class="line">        navi.goto(goals[<span class="number">6</span>])</span><br><span class="line">        rospy.sleep(<span class="number">5</span>)</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">id</span>==<span class="number">5</span> <span class="keyword">or</span> find_id==<span class="number">5</span>):</span><br><span class="line">            os.system(<span class="string">&#x27;mplayer %s&#x27;</span> % music_path5)</span><br><span class="line">            navi.goto(goals[<span class="number">7</span>])</span><br><span class="line">            os.system(<span class="string">&#x27;mplayer %s&#x27;</span> % mubiao5)</span><br><span class="line">            rospy.sleep(<span class="number">3</span>)</span><br><span class="line">        <span class="keyword">elif</span>(<span class="built_in">id</span>==<span class="number">6</span> <span class="keyword">or</span> find_id==<span class="number">6</span>):</span><br><span class="line">            os.system(<span class="string">&#x27;mplayer %s&#x27;</span> % music_path6)</span><br><span class="line">            navi.goto(goals[<span class="number">8</span>])</span><br><span class="line">            os.system(<span class="string">&#x27;mplayer %s&#x27;</span> % mubiao6)</span><br><span class="line">            rospy.sleep(<span class="number">3</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#square4</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;4&#x27;</span>)</span><br><span class="line">        navi.goto(goals[<span class="number">15</span>])</span><br><span class="line">        navi.goto(goals[<span class="number">9</span>])</span><br><span class="line">        rospy.sleep(<span class="number">5</span>)</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">id</span>==<span class="number">7</span> <span class="keyword">or</span> find_id==<span class="number">7</span>):</span><br><span class="line">            os.system(<span class="string">&#x27;mplayer %s&#x27;</span> % music_path7)</span><br><span class="line">            navi.goto(goals[<span class="number">10</span>])</span><br><span class="line">            os.system(<span class="string">&#x27;mplayer %s&#x27;</span> % mubiao7)</span><br><span class="line">            rospy.sleep(<span class="number">3</span>)</span><br><span class="line">        <span class="keyword">elif</span>(<span class="built_in">id</span>==<span class="number">8</span> <span class="keyword">or</span> find_id==<span class="number">8</span>):</span><br><span class="line">            os.system(<span class="string">&#x27;mplayer %s&#x27;</span> % music_path8)</span><br><span class="line">            navi.goto(goals[<span class="number">11</span>])</span><br><span class="line">            os.system(<span class="string">&#x27;mplayer %s&#x27;</span> % mubiao8)</span><br><span class="line">            rospy.sleep(<span class="number">3</span>)</span><br><span class="line">        navi.goto(goals[<span class="number">12</span>])</span><br><span class="line">        start_time=rospy.Time.now()</span><br><span class="line">        <span class="keyword">while</span> rospy.Time.now()-start_time&lt;rospy.Duration(<span class="number">5</span>):</span><br><span class="line">            navi.move_forward()</span><br><span class="line">        os.system(<span class="string">&#x27;mplayer %s&#x27;</span> % music_path_end)</span><br><span class="line">    <span class="keyword">while</span> <span class="keyword">not</span> rospy.is_shutdown():</span><br><span class="line">          r.sleep()</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2025/03/03/%E4%B9%A6%E7%AD%BE%E4%BA%A7%E7%BA%BFUI/"/>
      <url>/2025/03/03/%E4%B9%A6%E7%AD%BE%E4%BA%A7%E7%BA%BFUI/</url>
      
        <content type="html"><![CDATA[<h1 id="书签智能产线——软件部分设计"><a href="#书签智能产线——软件部分设计" class="headerlink" title="书签智能产线——软件部分设计"></a>书签智能产线——软件部分设计</h1><h2 id="一、软件功能需求"><a href="#一、软件功能需求" class="headerlink" title="一、软件功能需求"></a>一、软件功能需求</h2><p>将所有视觉功能进行了模块化封装。这意味着本团队将每个视觉功能独立成模块，使其可以方便地被调用和组合。</p><p>为初级工程师设计一个操作界面，该界面包含了拖拽视觉模块的功能。通过简单的拖拽操作，工程师可以自由组合视觉功能模块，实现所需的功能。这样的设计使得整个系统对工程师更加友好，让工程师能够快速定制并调整视觉流程。</p><p>为操作界面编写逻辑。在操作界面的设计中，注重界面的美观与友好性，着重编写清晰的逻辑，确保操作的流程合理且易于理解。这样，初级工程师可以更轻松地掌握操作界面，快速实现各项视觉功能。</p><p>让无任何视觉基础的普通工人也能使用的本团队产品，将初级工程师搭建的功能模块进行封装，使其成为一个简单易用的.exe文件。这样，普通工人只需按照简单的指引操作，即可完成视觉任务，无需具备专业的视觉知识，提高操作的普及性和可用性。</p><p><img src="https://pic1.imgdb.cn/item/67c476c6d0e0a243d40a3430.png" alt=""></p><h2 id="二、UI设计"><a href="#二、UI设计" class="headerlink" title="二、UI设计"></a>二、UI设计</h2><p>在本次项目中，需设计一款可视化编程UI界面。其包含了导航区、指令区、程序编辑运行区、视觉区、输出区以及各种功能的实现的界面。以完成与视觉的交互。</p><p>（1）设计思路</p><p>框架中只需要对用户的操作进行判断，而对封装好的视觉算法不做处理。旨在通过判断用户对封装好的算法模块的调用来达到控制产线视觉而不用深入底层去修改操作。</p><p>本次框架选用语言及理由：</p><p>相比于Qt和Python，使用C#来开发可视化视觉编程框架有以下优点：<br> ①面向对象特性：C# 是一种面向对象的编程语言，具有丰富的面向对象特性，如封装、继承、多态等，有利于设计高内聚低耦合的程序，便于扩展和维护。<br> ②Windows 平台优化：C# 是一种 Windows 平台优先的编程语言，与 Windows 操作系统深度集成，可以直接调用 Windows 的 API 接口，便于开发 Windows 平台上的应用程序。<br> ③性能：C# 编译后可以直接在操作系统上运行，其性能较Python有很大优势。</p><p>本次项目是设计一个可视化编程框架UI，通过调研，市面上的可视化编程的UI，找到了几款出色的可视化编程的软件，比较出色的，为海康的viosonmaster，分析可知，其UI主要包括导航区、指令区、程序编辑运行区、视觉区、输出区以及各种功能的实现的界面。本次项目也将模仿visonmaster通过Csharp设计出可视化编程框架UI。</p><p>通过分析，Csharp控件库，以及外接Csharp控件库，选出tablelayoutpanel、TreeView、tabcontrol、button等多种控件进行UI的界面设计。</p><p>根据界面布局设计，设计出可视化编辑的界面，确定拖放组件的方式、布局调整的方法、属性编辑和事件编辑的界面组件等。</p><p>设计事件编辑器：设计一个事件编辑器，用于定义组件的事件处理程序。提供一个易于编辑和调试的代码编辑区域，并考虑预定义代码的片段或模板的支持。</p><p>确定如何实现实时的交互反馈，让用户在编辑过程中即时看到结果。考虑在编辑器中添加实时预览窗口或面板，并确保用户能够直观地观测视觉区输出的结果。</p><p>注：本次UI设计是基于sunnyUI控件库的设计。sunnyUI的demo。</p><p><img src="https://pic1.imgdb.cn/item/67c3f369d0e0a243d409aabe.png" alt=""></p><p><img src="https://pic1.imgdb.cn/item/67c3f38ad0e0a243d409aac2.png" alt=""></p><p>（2）设计流程</p><p>①界面分区：通过tablelayoutpanel将界面分成导航区、指令区、程序编辑运行区、视觉区等区块。</p><p>②指令区：通过TreeView在集合中将所需根、子节点列出，并通过点击事件将节点生成button进入到指令区生成指令执行，并在视觉区生成相机的实时画面。</p><p>③视觉区、参数设置等：通过tabcontrol列出多个UI界面，方便参数的调节。</p><p>④导航区：设置多个button进行界面转跳等。</p><p><img src="https://pic1.imgdb.cn/item/67c3f3c1d0e0a243d409aac6.png" alt=""></p><p>（3）设计成果展示</p><p>①调试UI设计</p><p><img src="https://pic1.imgdb.cn/item/67c3f3efd0e0a243d409aac9.png" alt=""></p><p><img src="https://pic1.imgdb.cn/item/67c3f401d0e0a243d409aacc.png" alt=""></p><p>②功能实现UI设计</p><p>​    二值化窗口设计<img src="https://pic1.imgdb.cn/item/67c3f43fd0e0a243d409aad2.png" alt=""></p><p>​    相机参数设计<img src="https://pic1.imgdb.cn/item/67c3f458d0e0a243d409aadb.png" alt=""></p><p>2、控件逻辑设计</p><p>目前主要是控件button控件的拖拽功能的实现。</p><p>主要将指令区中treeview的集合中的元素拖拽到程序编辑运行区为程序运行进行设计。如下图所示</p><p><img src="https://pic1.imgdb.cn/item/67c3f488d0e0a243d409aaf1.png" alt=""></p><p>3、与视觉部分联调</p><p>（1）整体设计思路</p><p>通过将控件输入的值传递给视觉dll里面的函数，实现相机界面参数调整的实时改变。</p><p>（2）设计流程</p><p>​     设置textbox控件，将其值进行限定数据类型为浮点数，并将值返回函数中。</p><p>通过设置全局变量，将控件返回值存入到全局变量中。</p><p>将值传给视觉dll中的函数。</p><p><img src="https://pic1.imgdb.cn/item/67c3f4e1d0e0a243d409abc6.png" alt=""></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2025/03/03/%E4%B9%A6%E7%AD%BE%E4%BA%A7%E7%BA%BF%E8%A7%86%E8%A7%89/"/>
      <url>/2025/03/03/%E4%B9%A6%E7%AD%BE%E4%BA%A7%E7%BA%BF%E8%A7%86%E8%A7%89/</url>
      
        <content type="html"><![CDATA[<h1 id="书签智能产线——视觉部分"><a href="#书签智能产线——视觉部分" class="headerlink" title="书签智能产线——视觉部分"></a>书签智能产线——视觉部分</h1><h2 id="一、设计方案"><a href="#一、设计方案" class="headerlink" title="一、设计方案"></a>一、设计方案</h2><h3 id="1图像预处理模块功能统计"><a href="#1图像预处理模块功能统计" class="headerlink" title="1图像预处理模块功能统计"></a>1图像预处理模块功能统计</h3><div class="table-container"><table><thead><tr><th><strong><em>\</em>预处理操作**</strong></th><th><strong><em>\</em>操作具体分类**</strong></th><th><strong><em>\</em>函数接口**</strong></th></tr></thead><tbody><tr><td><strong><em>\</em>数据传递**</strong></td><td>Mat类型转BYTE<em>BYTE</em>类型转Mat</td><td>MatToByteByteToMat</td></tr><tr><td><strong><em>\</em>二值化**</strong></td><td>二值化不同算法</td><td>Threshold</td></tr><tr><td><strong><em>\</em>形态学操作**</strong></td><td>闭运算开运算膨胀膨胀</td><td>MorphologicalOperation</td></tr><tr><td><strong><em>\</em>图像滤波**</strong></td><td>高斯滤波中值滤波</td><td>Filter</td></tr><tr><td><strong><em>\</em>边缘检测**</strong></td><td>Canny算子Sobl算子</td><td>EdgeDetect</td></tr></tbody></table></div><p>函数入口使用BYTE*类型传递，在函数内部使用ByteToMat将图片数据转换为Mat类型，方便使用Opencv处理，最后将处理完的图像使用MatToByte传出，这样在c#端可以接收到处理完的图片数据。</p><h3 id="2扫码模块"><a href="#2扫码模块" class="headerlink" title="2扫码模块"></a>2扫码模块</h3><p>​        可视化视觉编程框架中的扫码模块设计的主要目的是为了实现对二维码或条形码的扫描和解码操作。这个模块的设计旨在让用户能够通过简单的操作，使用摄像头或其他视觉传感器来捕捉图像中的二维码或条形码，并将其转换为可识别的文本或数据。</p><p>​        在扫码前进行图像预处理，提高扫码成功率；前期使用成熟的扫码库和算法，例如opencv_wechat和zbar库，避免重复开发和时间浪费；后期同一实现二维码和条码的快速扫描与解码算法，保证高效率和准确性；提供简单易用的接口和文档，方便其他模块的集成和使用；提供可扩展的接口和参数，以满足不同需求的用户。</p><p><img src="https://pic1.imgdb.cn/item/67c3fd05d0e0a243d409bfe0.png" alt=""></p><p>后期优化算法，使其能够同时解析二维码和条码等多种类型，降低算法复杂度，流程图如下所示：</p><p><img src="https://pic1.imgdb.cn/item/67c3fd25d0e0a243d409c044.png" alt=""></p><h3 id="3次品检测模块"><a href="#3次品检测模块" class="headerlink" title="3次品检测模块"></a>3次品检测模块</h3><p>​        此智能书签生产线书签次品检测模块的设计旨在提高书签生产线的质量控制能力，确保书签的外观质量和可读性。具体目的包括：检测书签正反面、检测书签图案及图案角度是否正确，以及检测书签上二维码及角度是否正确。</p><p>​        为了实现上述目的，本模块采用以下处理流程进行书签次品检测：首先，将书签图像进行二值化处理，将彩色图像转换为黑白图像，以便后续的图像处理操作。接下来，利用图像处理技术，通过寻找轮廓找出书签的位置，确定书签的边界。基于书签的最小外接矩形，进行透视变换，对书签进行校正，以纠正书签的倾斜和变形，提高后续处理的准确性。</p><p><img src="https://pic1.imgdb.cn/item/67c3fde6d0e0a243d409c265.png" alt=""></p><p>通过霍夫圆检测算法，对书签上的孔洞或特定形状的标记进行检测，以判断书签的正反面。使用模板匹配算法，逐个角度匹配预定义的图案模板，检测图案是否正确，并记录图案角度的偏差。借助OpenCV微信扫码库，对书签上的二维码进行解码和识别，获取二维码的内容，并检测二维码的角度偏差。</p><p>根据上述检测结果，对书签进行分类、标记或剔除次品，将检测结果输出，供后续处理或记录。</p><p><img src="https://pic1.imgdb.cn/item/67c3fe40d0e0a243d409c365.png" alt=""></p><p>通过以上设计实现，该智能书签生产线书签次品检测模块可以有效地检测书签正反、图案及图案角度、二维码及角度，并对次品进行识别和处理。这将提高书签生产线的质量控制能力，降低次品率，提高生产效率。同时，该模块的设计可以应用于实际生产环境中，为书签生产过程中的质量控制提供可靠的解决方案。</p><h3 id="4视觉定位"><a href="#4视觉定位" class="headerlink" title="4视觉定位"></a>4视觉定位</h3><p>​        本次项目中，定位部分主要负责书签定位与外壳定位，算法实现是基于轮廓发现，寻找五个书签中第三个书签的像素坐标，在标定时，通过以机器手正好抓取的坐标为原点通过世界坐标与像素坐标的转换实现定位。通过对轮廓的几何位置计算其斜率。</p><p><img src="https://pic1.imgdb.cn/item/67c3f60cd0e0a243d409afbf.png" alt=""></p><h2 id="二、识别测试以及函数接口，部分代码"><a href="#二、识别测试以及函数接口，部分代码" class="headerlink" title="二、识别测试以及函数接口，部分代码"></a>二、识别测试以及函数接口，部分代码</h2><h3 id="1函数接口"><a href="#1函数接口" class="headerlink" title="1函数接口"></a>1函数接口</h3><p>int MatToByte(Mat&amp; inMat, BYTE* outBYTE)</p><p>函数名称：MatToByte</p><p>功能描述：将cv::Mat对象中的像素值转换为BYTE类型数据，存储到指定的内存地址。</p><p>参数列表：</p><p>inMat: cv::Mat类型，输入图像数据。</p><p>outBYTE: BYTE类型指针，输出图像数据存储地址。</p><p>返回值：int类型，返回0表示转换成功，返回其他值表示转换失败。</p><p> int ByteToMat(Mat&amp; outMat, BYTE* inBYTE,  int width, int height, int channel)</p><p>函数名称：ByteToMat</p><p>功能描述：将BYTE类型数据转换为cv::Mat对象中的像素值。</p><p>参数列表：</p><p>outMat: cv::Mat类型，输出图像数据。</p><p>inBYTE: BYTE类型指针，输入图像数据存储地址。</p><p>width: int类型，图像宽度。</p><p>height: int类型，图像高度。</p><p>channel: int类型，图像通道数。</p><p>返回值：int类型，返回0表示转换成功，返回其他值表示转换失败。</p><p>int Threshold(BYTE* inData,BYTE* outData,int width, int height, int channel, double thresh, double maxval, int type)</p><p>函数名称：Threshold</p><p>功能描述：对输入的图像数据进行阈值化处理。</p><p>参数列表：</p><p>inData: BYTE类型指针，输入图像数据存储地址。</p><p>outData: BYTE类型指针，输出图像数据存储地址。</p><p>width: int类型，图像宽度。</p><p>height: int类型，图像高度。</p><p>channel: int类型，图像通道数。</p><p>thresh: double类型，阈值。</p><p>maxval: double类型，最大值。</p><p>type: int类型，阈值化类型。</p><p>返回值：int类型，返回0表示处理成功，返回其他值表示处理失败。</p><p>void Detect(BYTE* inData, BYTE* outData, int height<em>, int width</em>, int channel_)</p><p>函数名称：Detect</p><p>函数说明：用于检测二维码并在图像上标出检测结果。</p><p>参数说明：</p><p>inData：输入图像数据指针，类型为BYTE*。</p><p>outData：输出图像数据指针，类型为BYTE*。</p><p>height_：输入图像高度，类型为int。</p><p>width_：输入图像宽度，类型为int。</p><p>channel_：输入图像通道数，类型为int。</p><p>返回值：无</p><p> void GarbInit()</p><p>函数名称：GarbInit</p><p>函数说明：用于初始化摄像头。</p><p>参数说明：无</p><p>返回值：无</p><p> void GarbImg(BYTE* outData, int width, int height, int channel)</p><p>函数名称：GarbImg</p><p>函数说明：用于从摄像头获取图像数据。</p><p>参数说明：</p><p>outData：输出图像数据指针，类型为BYTE*。</p><p>width：输出图像宽度，类型为int。</p><p>height：输出图像高度，类型为int。</p><p>channel：输出图像通道数，类型为int。</p><p>返回值：无</p><p> int MorphologicalOperation(BYTE* inData, BYTE* outData, int width, int height, int channel, int kernelShape, int kernelSizeX, int kernelSizeY, int option)</p><p>函数名称：MorphologicalOperation</p><p>函数说明：进行形态学操作。</p><p>参数说明：</p><p>- inData：输入图像数据指针，类型为BYTE*。</p><p>- outData：输出图像数据指针，类型为BYTE*。</p><p>- width：图像宽度，类型为int。</p><p>- height：图像高度，类型为int。</p><p>- channel：图像通道数，类型为int。</p><p>- kernelShape：内核形状（0：矩形，1：十字形，2：椭圆形），类型为int。</p><p>- kernelSizeX：内核的 X 方向尺寸，类型为int。</p><p>- kernelSizeY：内核的 Y 方向尺寸，类型为int。</p><p>- option：形态学操作选项（0：闭，1：开，2：梯度，3：顶帽，4：黑帽，5：膨胀，6：腐蚀），类型为int。</p><p>返回值：操作是否成功的标志，类型为int。如果操作成功，则返回0；否则返回其他值。</p><p> int Filter(BYTE* inData, BYTE* outData, int width, int height, int channel, int level, int option)</p><p>函数名称：Filter</p><p>函数说明：对图像进行滤波操作。</p><p>参数说明：</p><p>- inData：输入图像数据指针，类型为BYTE*。</p><p>- outData：输出图像数据指针，类型为BYTE*。</p><p>- width：图像宽度，类型为int。</p><p>- height：图像高度，类型为int。</p><p>- channel：图像通道数，类型为int。</p><p>- level：滤波级别，类型为int。</p><p>- option：滤波选项（0：方框滤波，1：均值滤波，2：高斯滤波，3：中值滤波），类型为int。</p><p>返回值：操作是否成功的标志，类型为int。如果操作成功，则返回0；否则返回其他值。</p><p> int EdgeDetect(BYTE* inData, BYTE* outData, int width, int height, int channel, int low,int high, int option)</p><p>函数名称：EdgeDetect</p><p>函数说明：对图像进行边缘检测。</p><p>参数说明：</p><p>- inData：输入图像数据指针，类型为BYTE*。</p><p>- outData：输出图像数据指针，类型为BYTE*。</p><p>- width：图像宽度，类型为int。</p><p>- height：图像高度，类型为int。</p><p>- channel：图像通道数，类型为int。</p><p>- low：边缘检测的低阈值，类型为int。取值范围为0-100。</p><p>- high：边缘检测的高阈值，类型为int。取值范围为0-100。</p><p>- option：边缘检测选项（0：Canny边缘检测，1：Sobel边缘检测，2：Laplacian边缘检测），类型为int。</p><p>返回值：操作是否成功的标志，类型为int。如果操作成功，则返回0；否则返回其他值。</p><p>void Defectdetect(BYTE* inData,int width, int height, int channel,double &amp;score,double &amp;angle)</p><p>函数名称：Defectdetect</p><p>功能描述：检测缺陷并返回得分和角度。</p><p>参数列表：</p><p>-inData: BYTE 类型指针，输入图像数据存储地址。</p><p>-width: int 类型，输入图像的宽度。</p><p>-height: int 类型，输入图像的高度。</p><p>-channel: int 类型，输入图像的通道数。</p><p>-score: double 引用，输出的缺陷得分。</p><p>-angle: double 引用，输出的缺陷角度。</p><p>返回值：无。</p><p> double Detect(BYTE* inData, BYTE* outData, int width, int height, int channel, char* codedata)</p><p>函数说明：用于检测书签上的二维码并获取二维码信息及角度。</p><p>参数说明：</p><p>inData：输入图像数据指针，类型为BYTE*。</p><p>outData：输出图像数据指针，类型为BYTE*。</p><p>width：图像宽度，类型为int。</p><p>height：图像高度，类型为int。</p><p>channel：图像通道数，类型为int。</p><p>codedata：二维码信息存储指针，类型为char*。</p><p>返回值：二维码的角度，类型为double。#</p><h3 id="2识别测试"><a href="#2识别测试" class="headerlink" title="2识别测试"></a>2识别测试</h3><p>识别效果：书签识别，外壳识别</p><p><img src="https://pic1.imgdb.cn/item/67c3f639d0e0a243d409afc6.png" alt=""></p><p><img src="书签产线视觉定位.assets/image-20250302141025221.png" alt="image-20250302141025221"></p><p>代码参考：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br></pre></td><td class="code"><pre><span class="line">分类模块核心代码</span><br><span class="line"><span class="comment">// dllmain.cpp : 定义 DLL 应用程序的入口点。</span></span><br><span class="line"><span class="function"><span class="type">float</span> <span class="title">distance</span><span class="params">(Point2f a, Point2f b)</span> </span>&#123;</span><br><span class="line">    <span class="type">float</span> distances;</span><br><span class="line">    distances = <span class="built_in">sqrt</span>((a.x - b.x) * (a.x - b.x) + (a.y - b.y) * (a.y - b.y));</span><br><span class="line">    <span class="keyword">return</span> distances;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">float</span> <span class="title">xielv</span><span class="params">(Point2f a, Point2f b)</span> </span>&#123;</span><br><span class="line">    <span class="type">float</span> xie;</span><br><span class="line">    xie = (a.y - b.y) / (a.x - b.x);</span><br><span class="line">    <span class="keyword">return</span> xie;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function">string <span class="title">vs</span><span class="params">(BYTE* inBYTE, <span class="type">int</span> width, <span class="type">int</span> height, <span class="type">int</span> channel)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (inBYTE == <span class="literal">nullptr</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;-1&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> type = channel == <span class="number">1</span> ? CV_8UC1 : CV_8UC3;</span><br><span class="line">     Mat src = cv::<span class="built_in">Mat</span>(height, width, type);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 逐行拷贝像素值到 cv::Mat 对象中</span></span><br><span class="line">    <span class="type">int</span> index = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; height; ++i) &#123;</span><br><span class="line">        std::<span class="built_in">memcpy</span>(src.<span class="built_in">ptr</span>(i), inBYTE + index, width * channel);</span><br><span class="line">        index += width * channel;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">float</span> x2, y2;</span><br><span class="line">    <span class="type">float</span> ang;</span><br><span class="line">    Mat test;</span><br><span class="line">    src.<span class="built_in">copyTo</span>(test);</span><br><span class="line">    <span class="built_in">threshold</span>(src, src, <span class="number">50</span>, <span class="number">255</span>, THRESH_BINARY);</span><br><span class="line">    Point2f bookqian[<span class="number">5</span>];</span><br><span class="line">    <span class="type">int</span> lunkuo[<span class="number">5</span>];</span><br><span class="line">    <span class="type">int</span> book = <span class="number">0</span>;</span><br><span class="line">    Point2f temp;</span><br><span class="line">    vector&lt;vector&lt;Point&gt;&gt; contours;</span><br><span class="line">    vector&lt;Vec4i&gt; hierarchy;</span><br><span class="line">    vector&lt;vector&lt;Point&gt;&gt; filteredContours;</span><br><span class="line">    <span class="built_in">findContours</span>(src, contours, hierarchy, RETR_TREE, CHAIN_APPROX_NONE);</span><br><span class="line">    <span class="comment">// 检查轮廓数量</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; contours.<span class="built_in">size</span>(); i++) &#123;</span><br><span class="line">        vector&lt;Point&gt;points;</span><br><span class="line">        <span class="type">double</span> area = <span class="built_in">contourArea</span>(contours[i]);</span><br><span class="line">        <span class="comment">/*面积排除噪声*/</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (area &lt; <span class="number">180000</span> || area&gt;<span class="number">320000</span>)</span><br><span class="line"></span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        filteredContours.<span class="built_in">push_back</span>(contours[i]);</span><br><span class="line">        <span class="comment">//     std::cout &lt;&lt; &quot;area=&quot;&lt;&lt;area &lt;&lt; endl;</span></span><br><span class="line">              <span class="comment">/*找有子轮廓的*/</span></span><br><span class="line">              <span class="comment">//if (hierarchy[i][2] &lt; 0 &amp;&amp; hierarchy[i][2] &gt;= contours.size())</span></span><br><span class="line">              <span class="comment">//    continue;</span></span><br><span class="line"></span><br><span class="line">        Moments rect;</span><br><span class="line">        rect = <span class="built_in">moments</span>(contours[i], <span class="literal">false</span>);</span><br><span class="line">        bookqian[book] = <span class="built_in">Point2f</span>(rect.m10 / rect.m00, rect.m01 / rect.m00);</span><br><span class="line">        lunkuo[book] = i;</span><br><span class="line">        <span class="keyword">if</span> (book &lt; <span class="number">4</span>) &#123;</span><br><span class="line">            book++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            book = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 检查筛选后的轮廓数量</span></span><br><span class="line">    <span class="keyword">if</span> (filteredContours.<span class="built_in">empty</span>()) &#123;</span><br><span class="line">        <span class="comment">//  cout &lt;&lt; &quot;未找到符合条件的轮廓，无法继续执行程序。&quot; &lt;&lt; endl;</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 检查筛选后的轮廓数量是否为五个</span></span><br><span class="line">    <span class="keyword">if</span> (filteredContours.<span class="built_in">size</span>() != <span class="number">5</span>) &#123;</span><br><span class="line">        <span class="comment">//  cout &lt;&lt; &quot;筛选后的轮廓数量不等于五个，无法继续执行程序。&quot; &lt;&lt; endl;</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//排序法</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> o = <span class="number">1</span>; o &lt;= <span class="number">4</span>; o++)<span class="comment">//外层循环是比较的轮数，数组内有10个数，那么就应该比较10-1=9轮</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt;= <span class="number">4</span> - o; j++)<span class="comment">//内层循环比较的是当前一轮的比较次数，例如：第一轮比较9-1=8次，第二轮比较9-2=7次</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (bookqian[j].x &gt; bookqian[j + <span class="number">1</span>].x)<span class="comment">//相邻两个数如果逆序，则交换位置</span></span><br><span class="line">            &#123;</span><br><span class="line">                temp = bookqian[j];</span><br><span class="line">                bookqian[j] = bookqian[j + <span class="number">1</span>];</span><br><span class="line">                bookqian[j + <span class="number">1</span>] = temp;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">circle</span>(test, <span class="number">4</span> * bookqian[<span class="number">2</span>], <span class="number">100</span>, <span class="built_in">Scalar</span>(<span class="number">255</span>, <span class="number">0</span>, <span class="number">0</span>), <span class="number">1</span>, <span class="number">8</span>, <span class="number">2</span>);</span><br><span class="line">    <span class="comment">//     cout &lt;&lt; bookqian[2].x &lt;&lt; endl;</span></span><br><span class="line">    <span class="comment">//     cout &lt;&lt; bookqian[2].y &lt;&lt; endl;</span></span><br><span class="line">    <span class="type">float</span> x1, y1;</span><br><span class="line">    x1 = <span class="number">1202.7</span> - bookqian[<span class="number">2</span>].x;</span><br><span class="line">    y1 = <span class="number">1030.04</span> - bookqian[<span class="number">2</span>].y;</span><br><span class="line"></span><br><span class="line">    <span class="type">float</span> k1 = <span class="number">0.1233</span>, k2 = <span class="number">0.1233</span>;</span><br><span class="line">    x2 = -(k1 * x1) - <span class="number">167.17</span>;</span><br><span class="line">    y2 = k2 * y1 + <span class="number">621.442</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//  cout &lt;&lt; x2 &lt;&lt; endl;</span></span><br><span class="line">    <span class="comment">//  cout &lt;&lt; y2 &lt;&lt; endl;</span></span><br><span class="line">    vector&lt;RotatedRect&gt;<span class="built_in">minRects</span>(contours.<span class="built_in">size</span>());</span><br><span class="line">    minRects[lunkuo[book]] = <span class="built_in">minAreaRect</span>(<span class="built_in">Mat</span>(contours[lunkuo[book]]));</span><br><span class="line">    Point2f rectPoints[<span class="number">4</span>];</span><br><span class="line">    minRects[lunkuo[book]].<span class="built_in">points</span>(rectPoints);</span><br><span class="line"></span><br><span class="line">    <span class="type">float</span> a;</span><br><span class="line">    <span class="type">float</span> b;</span><br><span class="line">    <span class="type">int</span> c = <span class="number">10</span>;</span><br><span class="line">    <span class="type">float</span> ka;</span><br><span class="line">    <span class="type">float</span> kb;</span><br><span class="line">    <span class="type">float</span> tan;</span><br><span class="line">    <span class="type">float</span> arct = <span class="number">0</span>;</span><br><span class="line">    a = <span class="built_in">distance</span>(rectPoints[<span class="number">0</span>], rectPoints[<span class="number">1</span>]);</span><br><span class="line">    b = <span class="built_in">distance</span>(rectPoints[<span class="number">1</span>], rectPoints[<span class="number">2</span>]);</span><br><span class="line">    <span class="keyword">if</span> (a &gt; <span class="number">2</span> * b) &#123;</span><br><span class="line">        c = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (<span class="number">2</span> * a &lt; b) &#123;</span><br><span class="line">        c = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (c == <span class="number">0</span>) &#123;</span><br><span class="line">        kb = <span class="built_in">xielv</span>(rectPoints[<span class="number">1</span>], rectPoints[<span class="number">2</span>]);</span><br><span class="line">        tan = kb;</span><br><span class="line">        arct = <span class="built_in">atan</span>(tan);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (c == <span class="number">1</span>) &#123;</span><br><span class="line">        ka = <span class="built_in">xielv</span>(rectPoints[<span class="number">0</span>], rectPoints[<span class="number">1</span>]);</span><br><span class="line">        tan = ka;</span><br><span class="line">        arct = <span class="built_in">atan</span>(tan);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 计算角度范围</span></span><br><span class="line">    <span class="type">int</span> angleRange = <span class="number">90</span>; <span class="comment">// 设置角度范围为90度</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 计算角度</span></span><br><span class="line">    <span class="type">float</span> angle = arct * <span class="number">57.296</span>; <span class="comment">// 将弧度转换为角度</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 调整角度范围到竖直为0度、左偏-90度、右偏+90度</span></span><br><span class="line">    <span class="keyword">if</span> (angle &lt; -angleRange) &#123;</span><br><span class="line">        angle += <span class="number">180</span>; <span class="comment">// 右偏，加180度</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (angle &gt; angleRange) &#123;</span><br><span class="line">        angle -= <span class="number">180</span>; <span class="comment">// 左偏，减180度</span></span><br><span class="line">    &#125;</span><br><span class="line">    ang = -angle - <span class="number">45</span>;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">abs</span>(x2) &lt;= <span class="number">60</span> &amp;&amp; <span class="built_in">abs</span>(y2) &lt;= <span class="number">60</span>) &#123;</span><br><span class="line">        string X = <span class="built_in">to_string</span>(x2);</span><br><span class="line">        string Y = <span class="built_in">to_string</span>(y2);</span><br><span class="line">        string A = <span class="built_in">to_string</span>(ang);</span><br><span class="line">   </span><br><span class="line">        string str = X + <span class="string">&#x27;,&#x27;</span> + Y + <span class="string">&#x27;,&#x27;</span> + <span class="string">&quot;0,&quot;</span> + <span class="string">&quot;180,&quot;</span> + <span class="string">&quot;0,&quot;</span> + A;</span><br><span class="line">        <span class="type">const</span> <span class="type">char</span>* X1 = str.<span class="built_in">c_str</span>();</span><br><span class="line">        <span class="keyword">return</span> X1;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// cout &lt;&lt; angle &lt;&lt; endl;</span></span><br><span class="line">    <span class="comment">//  cout &lt;&lt; bookqian[2] &lt;&lt; endl;</span></span><br><span class="line">    <span class="built_in">resize</span>(test, test, <span class="built_in">Size</span>(<span class="number">0</span>, <span class="number">0</span>), <span class="number">0.5</span>, <span class="number">0.5</span>, <span class="number">1</span>);</span><br><span class="line"> <span class="comment">//   line(test, Point(2000, 0), Point(2000, 1500), Scalar(255, 0, 0), 2, 8, 0);</span></span><br><span class="line">  <span class="comment">//  line(test, Point(0, 1500), Point(4000, 1500), Scalar(255, 0, 0), 2, 8, 0);</span></span><br><span class="line">  <span class="comment">//  imshow(&quot;test&quot;, test);</span></span><br><span class="line">    <span class="comment">//  return 0;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2025/03/03/opencv/"/>
      <url>/2025/03/03/opencv/</url>
      
        <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#安装cmake</span></span><br><span class="line"><span class="built_in">sudo</span> apt-get install cmake</span><br><span class="line"><span class="comment">#安装build-essential libgtk2.0-dev libavcodec-dev libavformat-dev libjpeg-dev libswscale-dev libtiff5-dev，可能需要换镜像源</span></span><br><span class="line"><span class="built_in">sudo</span> apt-get install build-essential libgtk2.0-dev libavcodec-dev libavformat-dev libjpeg-dev libswscale-dev libtiff5-dev</span><br><span class="line"><span class="built_in">sudo</span> apt-get install libgtk2.0-dev</span><br><span class="line"><span class="built_in">sudo</span> apt-get install pkg-config</span><br><span class="line"><span class="built_in">sudo</span> apt-get update</span><br><span class="line"></span><br><span class="line"><span class="comment">#安装包打开终端</span></span><br><span class="line"><span class="built_in">mkdir</span> build</span><br><span class="line"><span class="built_in">cd</span> ./build</span><br><span class="line"><span class="comment">#cmakeopencv</span></span><br><span class="line">cmake -D CMAKE_BUILD_TYPE=Release -D OPENCV_GENERATE_PKGCONFIG=ON -D CMAKE_INSTALL_PREFIX=/usr/local ..</span><br><span class="line"><span class="comment">#安装编译内核4</span></span><br><span class="line"><span class="built_in">sudo</span> make -j4</span><br><span class="line"><span class="comment">#安装</span></span><br><span class="line"><span class="built_in">sudo</span> make install</span><br><span class="line"></span><br><span class="line"><span class="built_in">sudo</span> gedit /etc/ld.so.conf</span><br><span class="line"></span><br><span class="line">用gedit打开/etc/ld.so.conf</span><br><span class="line"><span class="comment">#在文件中加上一行 </span></span><br><span class="line">include /usr/local/lib</span><br><span class="line"><span class="comment">#/user/local是opencv安装路径</span></span><br><span class="line"><span class="built_in">sudo</span> ldconfig,</span><br><span class="line"><span class="comment">#修改bash.bashrc 文件</span></span><br><span class="line"><span class="built_in">sudo</span> gedit /etc/bash.bashrc </span><br><span class="line"></span><br><span class="line">在文件末尾加入：</span><br><span class="line">PKG_CONFIG_PATH=<span class="variable">$PKG_CONFIG_PATH</span>:/usr/local/lib/pkgconfig</span><br><span class="line"><span class="built_in">export</span> PKG_CONFIG_PATH</span><br><span class="line"></span><br><span class="line"><span class="built_in">source</span> /etc/bash.bashrc</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2025/03/03/YOLO%E9%85%8D%E7%BD%AE/"/>
      <url>/2025/03/03/YOLO%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="YOLO训练最终版"><a href="#YOLO训练最终版" class="headerlink" title="YOLO训练最终版"></a>YOLO训练最终版</h1><p><a href="https://blog.csdn.net/qq_44697805/article/details/107702939">史上最详细yolov5环境配置搭建+配置所需文件_yolov5环境搭建-CSDN博客</a></p><p><a href="https://blog.csdn.net/qq_45945548/article/details/121701492?ops_request_misc=%7B%22request%5Fid%22%3A%22170407628416800222814164%22%2C%22scm%22%3A%2220140713.130102334..%22%7D&amp;request_id=170407628416800222814164&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-1-121701492-null-null.142^v99^pc_search_result_base1&amp;utm_term=yolov5训练自己的数据集&amp;spm=1018.2226.3001.4187">Yolov5训练自己的数据集（详细完整版）_yolov5缔宇-CSDN博客</a></p><p>1.yolov5的源码下载</p><p>Yolov5 github官网：<a href="https://github.com/ultralytics/yolov5">https://github.com/ultralytics/yolov5</a></p><p>将其解压到一个<strong>不带中文字符</strong>的文件夹下</p><p>2.下载预训练模型</p><p>一般使用YOLOv5s</p><p>3.安装anaconda与pycharm</p><p><img src="https://pic1.imgdb.cn/item/67c403bbd0e0a243d409cf2b.png" alt=""></p><p>从官网下载pycharm，解压安装完成后创建工程，<strong>路径选择到之前解压源码的无中文字符路径</strong>，注意！！！！，创建完成后此处有红框标记的文件即为路径正确（也可先创建再解压到工程文件中）</p><p>之后进入pycharm中选择工程所需的interpreter</p><p><img src="https://pic1.imgdb.cn/item/67c40421d0e0a243d409cfcb.png" alt=""></p><p>4.安装cuda11.6和cudnn</p><p>5.安装pytorch</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># CUDA 11.7</span><br><span class="line">pip install torch==1.13.1+cu117 torchvision==0.14.1+cu117 torchaudio==0.13.1 --extra-index-url https://download.pytorch.org/whl/cu117</span><br></pre></td></tr></table></figure><p>其他库的安装建议根据requirement.txt文件逐个安装。。。清华源太容易崩了<br>下面给出requirement.txt的内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"># 这个# pip install -U -r requirements.txt==</span><br><span class="line">Cython</span><br><span class="line">numpy&gt;=1.18.5</span><br><span class="line">opencv-python</span><br><span class="line">torch&gt;=1.5.1</span><br><span class="line">matplotlib</span><br><span class="line">pillow</span><br><span class="line">tensorboard</span><br><span class="line">PyYAML&gt;=5.3</span><br><span class="line">torchvision&gt;=0.6</span><br><span class="line">scipy</span><br><span class="line">tqdm</span><br><span class="line"># pycocotools&gt;=2.0</span><br><span class="line"></span><br><span class="line"># Nvidia Apex (optional) for mixed precision training --------------------------</span><br><span class="line"># git clone https://github.com/NVIDIA/apex &amp;&amp; cd apex &amp;&amp; pip install -v --no-cache-dir --global-option=&quot;--cpp_ext&quot; --global-option=&quot;--cuda_ext&quot; . --user &amp;&amp; cd .. &amp;&amp; rm -rf apex</span><br><span class="line"></span><br><span class="line"># Conda commands (in place of pip) ---------------------------------------------</span><br><span class="line"># conda update -yn base -c defaults conda</span><br><span class="line"># conda install -yc anaconda numpy opencv matplotlib tqdm pillow ipython</span><br><span class="line"># conda install -yc conda-forge scikit-image pycocotools tensorboard</span><br><span class="line"># conda install -yc spyder-ide spyder-line-profiler</span><br><span class="line"># conda install -yc pytorch pytorch torchvision</span><br><span class="line"># conda install -yc conda-forge protobuf numpy &amp;&amp; pip install onnx==1.6.0  # https://github.com/onnx/onnx#linux-and-macos</span><br><span class="line"></span><br><span class="line">可以根据下面的指令，依次输入以下命令安装相应的库：</span><br><span class="line">pip install Cython</span><br><span class="line">pip install numpy</span><br><span class="line">pip install opencv-python</span><br><span class="line">pip install matplotlib</span><br><span class="line">pip install pillow</span><br><span class="line">pip install tensorboard</span><br><span class="line">pip install PyYAML</span><br><span class="line">pip install torchvision</span><br><span class="line">pip install scipy</span><br><span class="line">pip install tqdm</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>6.模型训练</p><p><img src="https://pic1.imgdb.cn/item/67c4047fd0e0a243d409d0ba.png" alt=""></p><p>打标，labelimg-master，在虚拟环境中进行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pip install SIP</span><br><span class="line">pip install pyqt5</span><br><span class="line">pip install lxml</span><br></pre></td></tr></table></figure><p><img src="https://pic1.imgdb.cn/item/67c40498d0e0a243d409d0ef.png" alt=""></p><p>python train.py —weights weights/yolov5s.pt  —cfg models/yolov5s.yaml  —data data/myvoc.yaml —epoch 200 —batch-size 8 —img 640   —device 0</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">import torch</span><br><span class="line"></span><br><span class="line"># 检查是否有可用的 GPU</span><br><span class="line">if torch.cuda.is_available():</span><br><span class="line">    # 打印 GPU 设备数量</span><br><span class="line">    print(f&quot;Number of GPUs available: &#123;torch.cuda.device_count()&#125;&quot;)</span><br><span class="line">    </span><br><span class="line">    # 打印当前使用的 GPU 设备的索引</span><br><span class="line">    current_device_index = torch.cuda.current_device()</span><br><span class="line">    print(f&quot;Current GPU device index: &#123;current_device_index&#125;&quot;)</span><br><span class="line">    </span><br><span class="line">    # 打印当前使用的 GPU 设备的名称</span><br><span class="line">    current_device_name = torch.cuda.get_device_name(current_device_index)</span><br><span class="line">    print(f&quot;Current GPU device name: &#123;current_device_name&#125;&quot;)</span><br><span class="line">else:</span><br><span class="line">    print(&quot;No GPU available, using CPU.&quot;)</span><br></pre></td></tr></table></figure><p>测试：python detect.py —weights runs/train/exp2/weights/best.pt —source 0</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2025/03/03/%E6%89%AB%E7%A0%81%E5%87%BA%E5%85%A5%E5%BA%93%E5%87%BD%E6%95%B0%E6%8E%A5%E5%8F%A3/"/>
      <url>/2025/03/03/%E6%89%AB%E7%A0%81%E5%87%BA%E5%85%A5%E5%BA%93%E5%87%BD%E6%95%B0%E6%8E%A5%E5%8F%A3/</url>
      
        <content type="html"><![CDATA[<h1 id="扫码出入库——函数接口"><a href="#扫码出入库——函数接口" class="headerlink" title="扫码出入库——函数接口"></a>扫码出入库——函数接口</h1><h2 id="一-接口函数定义"><a href="#一-接口函数定义" class="headerlink" title="一.接口函数定义"></a>一.接口函数定义</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">FUNCTION <span class="built_in">int</span> <span class="title">login</span>(<span class="params"><span class="built_in">string</span> userID, <span class="built_in">string</span> password</span>) <span class="comment">//登录操作</span></span></span><br><span class="line"><span class="function">FUNCTION <span class="built_in">int</span> <span class="title">register</span>(<span class="params"><span class="built_in">string</span> username, <span class="built_in">string</span> userID, <span class="built_in">string</span> password, <span class="built_in">string</span> password_retype, <span class="built_in">string</span> email, <span class="built_in">string</span> phone</span>)<span class="comment">//注册操作</span></span></span><br><span class="line"><span class="function">FUNCTION <span class="built_in">int</span> <span class="title">forgetpassword_check</span> (<span class="params"><span class="built_in">string</span> userID, <span class="built_in">string</span> email</span>)  <span class="comment">//忘记密码核验操作</span></span></span><br><span class="line"><span class="function">FUNCTION <span class="built_in">int</span> <span class="title">forgetpassword_reset</span> (<span class="params"><span class="built_in">string</span> userID, <span class="built_in">string</span> password, <span class="built_in">string</span> password_retype</span>)  <span class="comment">//忘记密码重设操作</span></span></span><br><span class="line"><span class="function">FUNCTION <span class="built_in">int</span> <span class="title">object_add</span> (<span class="params"><span class="built_in">int</span> objectID, <span class="built_in">string</span> objectname, <span class="built_in">string</span> addtime,<span class="built_in">string</span> userID</span>) <span class="comment">//新增物品</span></span></span><br><span class="line"><span class="function">FUNCTION <span class="built_in">int</span> <span class="title">object_del</span> (<span class="params"><span class="built_in">int</span> objectID, <span class="built_in">string</span> deltime, <span class="built_in">string</span> userID</span>) <span class="comment">//删除物品</span></span></span><br><span class="line"><span class="function">FUNCTION <span class="built_in">int</span> <span class="title">object_in</span>(<span class="params"><span class="built_in">int</span> objectID, <span class="built_in">string</span> intime, <span class="built_in">string</span> userID</span>) <span class="comment">//入库</span></span></span><br><span class="line"><span class="function">FUNCTION <span class="built_in">int</span> <span class="title">object_out</span>(<span class="params"><span class="built_in">int</span> objectID, <span class="built_in">string</span> outtime, <span class="built_in">string</span> userID</span>) <span class="comment">//出库</span></span></span><br><span class="line"><span class="function">FUNCTION <span class="built_in">int</span> <span class="title">user_del</span>(<span class="params"><span class="built_in">string</span> userID</span>) <span class="comment">//删除用户</span></span></span><br><span class="line"><span class="function">FUNCTION <span class="built_in">double</span> <span class="title">cameraparams_add</span> (<span class="params"><span class="built_in">double</span> currentvalue</span>) <span class="comment">//相机参数加</span></span></span><br><span class="line"><span class="function">FUNCTION <span class="built_in">double</span> <span class="title">cameraparams_subtract</span> (<span class="params"><span class="built_in">double</span> currentvalue</span>) <span class="comment">//相机参数减</span></span></span><br><span class="line"><span class="function">FUNCTION <span class="built_in">int</span> object_ <span class="title">position</span> (<span class="params"><span class="built_in">int</span> objectID</span>) <span class="comment">//查找物体位置</span></span></span><br><span class="line"><span class="function">FUNCTION <span class="built_in">int</span> <span class="title">userinformation_read</span> (<span class="params"><span class="built_in">string</span> *username, <span class="built_in">string</span> *userID, <span class="built_in">string</span> *password, <span class="built_in">string</span> *email, <span class="built_in">string</span> *phone，<span class="built_in">int</span> *privilege</span>) <span class="comment">//读取用户信息</span></span></span><br></pre></td></tr></table></figure><h2 id="二-接口函数说明"><a href="#二-接口函数说明" class="headerlink" title="二.接口函数说明"></a>二.接口函数说明</h2><p> 1.login (): 登录操作</p><p>   用  法: code= login (<expC1>, <expC2>)</p><p>   参  数: <expC1> : 用户ID</p><p>​      <expC2> : 用户密码</p><p>   返回值: 返回值为0表示操作员登陆成功,为1表示管理员登陆成功,为2表示工程师登陆成功,为-1表示用户不存在，为-2表示密码错误。</p><p>   说  明: 此函数用来登录,参数<exp C1>为11位数字，参数<exp C2>是用户密码，长度20位以内。</p><p>　　 举  例: code= login (01234567890，123456)，如果code=0表示操作员登录成功。</p><ol><li><p>register (): 注册操作</p><p>用  法: code= register (<expC1>，<expC2>，<expC3>，<expC4>，<expC5>, &lt; expC6&gt;)</p><p>参  数: <expC1> : 用户名</p></li></ol><p><expC2> : 用户ID</p><p>  <expC3> : 用户首次密码</p><p>  <expC4> : 用户确认密码</p><p>  <expC5> : 用户邮箱</p><p>  <expC6> : 用户手机</p><p>   返回值: 返回值为0,表示注册成功，返回值为-1表示用户名为空，返回值为-2表示用户ID不合规，返回值为-3表示密码不合规，返回值为-4表示两次密码不一致，返回值为-5表示邮箱为空，返回值为-6表示手机号码为空。</p><p>   说  明: 此函数用来注册，参数<expC1> 为用户名，10字符以内，参数<expC2>为用户ID，唯一且不重复,推荐使用手机号创建，参数<expC3>为用户密码，长度20字符以内，参数<expC4>为用户再次输入密码，要和<expC3>一样，参数<expC5>为用户邮箱，<expC6>为用户手机。</p><p>   举  例: code= register (laopaoer，01234567890，123456，123456，laopaoer@qq.com，01234567890)，若code=0表示注册成功。</p><p>   参  见: login ()</p><ol><li><p>forgetpassword_check(): 核验用户身份</p><p>用  法: code= forgetpassword_check(<expC1>, <expC2>)</p><p>参  数: <expC1> : 用户ID</p></li></ol><p><expC2> : 用户邮箱</p><p>   返回值: 返回值为0,表示验证成功，为-1表示无该用户,为-2表示邮箱验证失败。</p><p>   说  明: 此函数用来核验忘记密码的用户身份。</p><p>   举  例: code= forgetpassword_check(01234567890,laopaoer@qq.com),如果code=0,表示用户身份验证成功。</p><ol><li><p>forgetpassword_reset(): 重设密码</p><p>用  法: code= forgetpassword_ reset (<expC1>,<expC2>,<expC3>)</p><p>参  数: <expC1> : 为用户ID</p></li></ol><p>​      <expC2> : 为要重设密码</p><p>  <expC3> : 为再次输入的密码</p><p>   返回值: 返回值为0,表示操作正确,-1表示密码不合规，-2表示两次密码不一致。</p><p>   说  明: 此函数将用户密码重设。</p><p>   举  例: code= forgetpassword_ reset (01234567890,123456,123456),code=0表示成功。</p><ol><li><p>object_add(): 新增物品</p><p>用  法: code= int object_add (<expN>, <expC1>, <expC2>, <expC3>)</p><p>参  数: <expN>物品ID</p><p><expC1>物品名称</p><p><expC2>新增时间</p><p><expC3>用户ID</p><p>返回值: 返回值为0,表示新增成功。</p><p>说  明: 此函数使可以增加数据库中物品。<expN>为4位整型数据，参数<expC1>为字符类型，10字符以内。</p><p>举  例: code= object_add (0001, “plc”,2022/10/10, 01234567890)，若code=0表示ID为01234567890的用户于2022/10/10成功添加ID为0001，名称为plc的物品。</p></li></ol><ol><li><p>object_del(): 删除物品</p><p>用  法: code= object_del (<expN>,<expC1>,<expC2>)</p><p>参  数: <expN> : 物品ID</p></li></ol><p>​     <expC1> : 操作时间</p><p>​     <expC2> : 用户ID</p><p>   返回值: 返回值为0,表示操作正确。 </p><p>   说  明: 此函数使可以删除数据库中物品，<expN>为4位整型数据。</p><p>   举 例: code= object_del(0001,2022/10/10,01234567890)，若code=0表示ID为01234567890的用户于2022/10/10成功删除ID为0001的物品。</p><p>   参  见: object_add()</p><ol><li><p>object_in(): 入库物品</p><p>用  法: code= object_in (<expN>,<expC1>,<expC2>)</p><p>参  数: <expN> : 物品ID</p></li></ol><p>​     <expC1> : 入库时间</p><p>​     <expC2> : 用户ID</p><p>   返回值: 返回值为0,表示操正确。 </p><p>   说  明: 此函数可以入库物品，<expN>为4位整型数据，参数由函数获得。</p><p>   举 例: code= object_in (0001,2022/10/10,01234567890)，若code=0表示用户01234567890在2022/10/10成功入库物品0001。</p><ol><li><p>object_out(): 出库物品</p><p>用  法: code= object_in (<expN>,<expC1>,<expC2>)</p><p>参  数: <expN> : 物品ID</p></li></ol><p>​     <expC1> : 出库时间</p><p>​     <expC2> : 用户ID</p><p>   返回值: 返回值为0,表示操正确。 </p><p>   说  明: 此函数可以出库物品，<expN>为4位整型数据，参数由函数获得。</p><p>   举 例: code= object_out (0001,2022/10/10,01234567890)，若code=0表示用户01234567890在2022/10/10成功出库物品0001。</p><p>   参  见: object_in()</p><ol><li><p>user_del(): 删除用户</p><p>用  法: code= user_del (<expC>)</p><p>参  数: <expC> : 要删除的用户ID</p><p>返回值: 返回值为0,表示操正确。 </p><p>说  明: 此函数可以删除用户，<expC>为要删除的用户ID。</p><p>举  例: code= user_del(01234567890),若code=0表示成功删除ID为01234567890的用户。</p></li></ol><ol><li><p>cameraparams_add (): 相机参数增加</p><p>用  法: code= cameraparams_add (<expD>)</p><p>参  数: <expD> : 相机参数原始值</p><p>返回值: 返回值原始值加0.5。 </p><p>说  明: 此函数可以增加相机参数值，<expD>为浮点类型，参数由函数获得。</p><p>举  例: code= cameraparams_add (<expD>)，可使相机参数加0.5。</p></li></ol><ol><li><p>cameraparams_subtract (): 相机参数减少</p><p>用  法: code= cameraparams_ subtract (<expD>)</p><p>参  数: <expD> : 相机参数原始值</p><p>返回值: 返回值原始减少0.5。 </p><p>说  明: 此函数可以减少相机参数值，<expD>为浮点类型，参数由函数获得。</p><p>举  例: code= cameraparams_add (<expD>)，可使相机参数减0.5。</p><p>参  见: cameraparams_add ()</p></li></ol><ol><li><p>object_ position (): 查寻物体位置</p><p>用  法: code= object_ position (<expN>)</p><p>参  数: <expN> : 物品ID</p><p>返回值: 返回物体仓库标号。 </p><p>说  明: 此函数可以查找物体位置，<expN>为物体ID，返回位置参数。</p><p>举  例: code= object_ position(0001)，若code=10，代表0001在10号位。</p></li></ol><ol><li><p>int userinformation_read (): 读取用户信息</p><p>用  法: code= userinformation_read (<expP1>，<expP2>，<expP3>，<expP4>，<expP5>, <expP6>)</p><p>参  数: <expP1> : 用户名</p></li></ol><p><expP2> : 用户ID</p><p>  <expP3> : 用户密码</p><p>  <expP4> : 用户邮箱</p><p>  <expP5> : 用户手机</p><p>  <expP6> : 用户权限</p><p>  返回值: 返回值为0,表示读取成功，返回值为-1表示用户名为空，返回值为-2表示用户ID为空，返回值为-3表示密码不合规，返回值为-4表示邮箱为空，返回值为-5表示手机为空，返回值为-6表示权限为空。</p><p>  说  明: 此函数用来读取用户信息，参数<expP1> 为用户名，该函数将读取的参数赋值给 <expP1>~<expP6>，以供程序使用。</p><p>  举  例: code= userinformation_read (<em>username, </em>userID, <em>password, </em>email, <em>phone </em>privilege)，若code=0表示读取成功。</p><p>  参  见: regist ()</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2025/03/03/%E6%89%AB%E7%A0%81%E5%87%BA%E5%85%A5%E5%BA%93UI/"/>
      <url>/2025/03/03/%E6%89%AB%E7%A0%81%E5%87%BA%E5%85%A5%E5%BA%93UI/</url>
      
        <content type="html"><![CDATA[<h1 id="扫码出入库系统——UI设计"><a href="#扫码出入库系统——UI设计" class="headerlink" title="扫码出入库系统——UI设计"></a>扫码出入库系统——UI设计</h1><h2 id="一、项目简介"><a href="#一、项目简介" class="headerlink" title="一、项目简介"></a>一、项目简介</h2><p>本次项目为扫码出入库开发上位机控制系统，功能包括扫码、信息管理、与PLC数据交互等功能</p><p>前端部分通过C#——winform实现工业软件前端开发</p><p>项目使用外接控件sunnyUI基于.NET Framework4.0-4.8</p><h2 id="二、UI设计"><a href="#二、UI设计" class="headerlink" title="二、UI设计"></a>二、UI设计</h2><h3 id="2-1-登录界面设计"><a href="#2-1-登录界面设计" class="headerlink" title="2.1 登录界面设计"></a>2.1 登录界面设计</h3><h5 id="效果展示"><a href="#效果展示" class="headerlink" title="效果展示"></a>效果展示</h5><p>登录界面</p><p><img src="https://pic1.imgdb.cn/item/67c2cc4bd0e0a243d408ffca.png" alt=""></p><p>注册界面</p><p><img src="https://pic1.imgdb.cn/item/67c2ccedd0e0a243d40901ac.png" alt=""></p><p>找回密码界面</p><p><img src="https://pic1.imgdb.cn/item/67c2cd13d0e0a243d4090245.png" alt=""></p><p>登录界面通过txtName_TextChanged输入框控件与MySQL数据库交互匹配登录用户信息</p><h3 id="2-1系统界面"><a href="#2-1系统界面" class="headerlink" title="2.1系统界面"></a>2.1系统界面</h3><h4 id="1-出入库界面"><a href="#1-出入库界面" class="headerlink" title="1.出入库界面"></a>1.出入库界面</h4><p>效果展示</p><p><img src="https://pic1.imgdb.cn/item/67c2d1b4d0e0a243d4090a25.png" alt=""></p><p>重要控件部分代码</p><p>相机调用接口</p><p>调用 AForge.Video.DirectShow</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">uiComboBox2_SelectedIndexChanged</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            videodevice = <span class="keyword">new</span> VideoCaptureDevice(videodevices[uiComboBox2.SelectedIndex].MonikerString);</span><br><span class="line"></span><br><span class="line">            videoSourcePlayer1.VideoSource = videodevice;</span><br><span class="line">            videoSourcePlayer1.SignalToStop();</span><br><span class="line">            videoSourcePlayer1.WaitForStop();</span><br><span class="line">            videoSourcePlayer1.Start();</span><br><span class="line">        &#125;       </span><br><span class="line"><span class="comment">//打开相机</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">videoSourcePlayer1_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            videodevices = <span class="keyword">new</span> FilterInfoCollection(FilterCategory.VideoInputDevice);<span class="comment">//得到所有接入的摄像设备</span></span><br><span class="line">          </span><br><span class="line">            <span class="keyword">if</span> (videodevices.Count != <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">foreach</span> (FilterInfo device <span class="keyword">in</span> videodevices)</span><br><span class="line">                &#123;</span><br><span class="line">                   </span><br><span class="line">                    uiComboBox2.Items.Add(device.Name);<span class="comment">//把摄像设备添加到摄像列表中          </span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                MessageBox.Show(<span class="string">&quot;没有找到摄像头！&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"><span class="comment">//关闭相机</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">uiSymbolButton2_Click_1</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            videoSourcePlayer1.Stop();</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h4 id="2资源管理"><a href="#2资源管理" class="headerlink" title="2资源管理"></a>2资源管理</h4><p>效果展示</p><p><img src="https://pic1.imgdb.cn/item/67c2e103d0e0a243d4091d7c.png" alt=""></p><p>调用数据库，后端处理</p><h4 id="3用户管理"><a href="#3用户管理" class="headerlink" title="3用户管理"></a>3用户管理</h4><p>效果展示</p><p><img src="https://pic1.imgdb.cn/item/67c2e162d0e0a243d4091d95.png" alt=""></p><p>调用数据库后端处理</p><p>通过使用NavMenu菜单导航页面将系统页面进行展示</p><p>代码部分：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">CreateTreeNode</span>()</span></span><br><span class="line"> &#123;</span><br><span class="line">     <span class="built_in">int</span> pageIndex = <span class="number">1000</span>;</span><br><span class="line">     <span class="comment">//一级节点</span></span><br><span class="line">    </span><br><span class="line">     TreeNode parent2 = Aside.CreateNode(<span class="string">&quot;出库&amp;入库&quot;</span>, <span class="number">62094</span>, <span class="number">22</span>, pageIndex);</span><br><span class="line">     Aside.CreateChildNode(parent2, <span class="string">&quot;出库&amp;入库&quot;</span>, ++pageIndex);</span><br><span class="line">     Aside.CreateChildNode(parent2, <span class="string">&quot;物资管理&quot;</span>, ++pageIndex);</span><br><span class="line">     Aside.CreateChildNode(parent2, <span class="string">&quot;用户管理&quot;</span>, ++pageIndex);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> &#125;</span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">LoadForm</span>(<span class="params">TabControl mainTabControl, <span class="built_in">string</span> menuText, Type fromType</span>)</span></span><br><span class="line"> &#123;</span><br><span class="line">     Form frm = (Form)Activator.CreateInstance(fromType);</span><br><span class="line">     frm.Text = menuText;</span><br><span class="line">     frm.FormBorderStyle = FormBorderStyle.None;</span><br><span class="line">     frm.TopLevel = <span class="literal">false</span>;</span><br><span class="line">     frm.Dock = DockStyle.Fill;</span><br><span class="line"></span><br><span class="line">     TabPage StabPage = <span class="keyword">new</span> TabPage(menuText);</span><br><span class="line">     StabPage.Font = <span class="keyword">new</span> Font(<span class="string">&quot;宋体&quot;</span>, <span class="number">9F</span>);</span><br><span class="line">     StabPage.Controls.Add(frm);</span><br><span class="line"></span><br><span class="line">     mainTabControl.Controls.Add(StabPage);</span><br><span class="line">     mainTabControl.SelectedTab = StabPage;</span><br><span class="line"></span><br><span class="line">     frm.Show();</span><br><span class="line"></span><br><span class="line"> &#125;</span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">uiNavMenu1_MenuItemClick</span>(<span class="params">TreeNode node, Sunny.UI.NavMenuItem item, <span class="built_in">int</span> pageIndex</span>)</span></span><br><span class="line"> &#123;</span><br><span class="line">     <span class="keyword">if</span> (item != <span class="literal">null</span>)</span><br><span class="line">     &#123;</span><br><span class="line">         <span class="built_in">string</span> menuText = item.Text;</span><br><span class="line">         <span class="keyword">foreach</span> (TabPage tab <span class="keyword">in</span> MainTabControl2.TabPages)</span><br><span class="line">         &#123;</span><br><span class="line">             <span class="keyword">if</span> (tab.Text == menuText)</span><br><span class="line">             &#123;</span><br><span class="line">                 MainTabControl2.SelectedTab = tab;</span><br><span class="line">                 <span class="keyword">return</span>;</span><br><span class="line">             &#125;</span><br><span class="line">         &#125;</span><br><span class="line">         <span class="keyword">switch</span> (menuText)</span><br><span class="line">         &#123;</span><br><span class="line"></span><br><span class="line">             <span class="keyword">case</span> <span class="string">&quot;出库&amp;入库&quot;</span>:</span><br><span class="line">                 LoadForm(MainTabControl2, menuText, <span class="keyword">typeof</span>(Forms.Form4));</span><br><span class="line">                 <span class="keyword">break</span>;</span><br><span class="line">             <span class="keyword">case</span> <span class="string">&quot;物资管理&quot;</span>:</span><br><span class="line">                 LoadForm(MainTabControl2, menuText, <span class="keyword">typeof</span>(Forms.Form6));</span><br><span class="line">                 <span class="keyword">break</span>;</span><br><span class="line">             <span class="keyword">case</span> <span class="string">&quot;用户管理&quot;</span>:</span><br><span class="line">                 LoadForm(MainTabControl2, menuText, <span class="keyword">typeof</span>(Forms.Form7));</span><br><span class="line">                 <span class="keyword">break</span>;</span><br><span class="line">          </span><br><span class="line">             <span class="literal">default</span>:</span><br><span class="line">                 <span class="keyword">break</span>;</span><br><span class="line">         &#125;</span><br><span class="line"></span><br><span class="line">     &#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h4 id="4相机设置界面"><a href="#4相机设置界面" class="headerlink" title="4相机设置界面"></a>4相机设置界面</h4><p><img src="https://pic1.imgdb.cn/item/67c341abd0e0a243d4094ebd.png" alt=""></p><h4 id="5通讯设置界面"><a href="#5通讯设置界面" class="headerlink" title="5通讯设置界面"></a>5通讯设置界面</h4><p><img src="C:\Users\86136\AppData\Roaming\Typora\typora-user-images\image-20250302012008747.png" alt="image-20250302012008747"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2025/03/03/%E6%89%AB%E7%A0%81%E5%87%BA%E5%85%A5%E5%BA%93%E5%90%8E%E7%AB%AF/"/>
      <url>/2025/03/03/%E6%89%AB%E7%A0%81%E5%87%BA%E5%85%A5%E5%BA%93%E5%90%8E%E7%AB%AF/</url>
      
        <content type="html"><![CDATA[<h1 id="扫码出入库系统——后端设计"><a href="#扫码出入库系统——后端设计" class="headerlink" title="扫码出入库系统——后端设计"></a>扫码出入库系统——后端设计</h1><h2 id="一、设计思路"><a href="#一、设计思路" class="headerlink" title="一、设计思路"></a>一、设计思路</h2><p>将用户等级设置三个等级，①操作员②管理员③工程师</p><p>操作员只有扫码识别的功能，管理员可以进行扫码操作，资源管理，工程师完成前面的工作的同时，还可以看到后端的用户信息，以及相机配置和通讯信息设置</p><p>通过数据库与前端进行交互，对物资信息以及用户信息进行管理</p><p>后端内容通过c++封装动态链接库dll加入到winform中</p><h3 id="1登录界面"><a href="#1登录界面" class="headerlink" title="1登录界面"></a>1登录界面</h3><p><img src="https://pic1.imgdb.cn/item/67c340d1d0e0a243d4094d44.png" alt=""></p><p>账号为11位数字组合，推荐使用手机号注册，软件初始内置三个测试账号，操作员账号：11111111111密码：123456，管理员账号：22222222222密码：123456，工程师账号：33333333333密码：123456。</p><p>用户名长度为3-20的任意字符，账号推荐使用11位手机号，密码为长度在8~18之间,大写或小写字母+数字+字符，邮箱是找回密码的唯一途径，需牢记。</p><h3 id="2出入库"><a href="#2出入库" class="headerlink" title="2出入库"></a>2出入库</h3><p><img src="https://pic1.imgdb.cn/item/67c33f7ed0e0a243d4094bc9.png" alt=""></p><p>该界面主要负责出入库功能，使用扫码功能要打开相机，上位机端支持同时出入库多件物品，会根据操作顺序向下位机发送信息。</p><h3 id="3资源管理"><a href="#3资源管理" class="headerlink" title="3资源管理"></a>3资源管理</h3><p><img src="https://pic1.imgdb.cn/item/67c33fc2d0e0a243d4094bce.png" alt=""></p><p>1、查询：选择查询方式并填写信息后点击该按钮即可筛选出所需内容。</p><p>2、添加：在最下方空白单元格填写完整信息后点击该按钮即可添加。</p><p>3、删除：单击所需删除单元格，点击该按钮。</p><p>4、修改：双击所需修改单元格，修改后单击该按钮保存。</p><p>注：种类1为大箱子，0为小箱子；在库状态1为在库，0为借出</p><h3 id="4用户管理"><a href="#4用户管理" class="headerlink" title="4用户管理"></a>4用户管理</h3><p><img src="https://pic1.imgdb.cn/item/67c33fe4d0e0a243d4094bcf.png" alt=""></p><p>1、查询：选择查询方式并填写信息后点击该按钮即可筛选出所需内容。</p><p>2、添加：在最下方空白单元格填写完整信息后点击该按钮即可添加。</p><p>3、删除：单击所需删除单元格，点击该按钮。</p><p>4、修改：双击所需修改单元格，修改后单击该按钮保存。</p><p>注：权限0为操作员，1为管理员，2为工程师</p><h3 id="5相机设置界面"><a href="#5相机设置界面" class="headerlink" title="5相机设置界面"></a>5相机设置界面</h3><p><img src="https://pic1.imgdb.cn/item/67c34610d0e0a243d4094fbc.png" alt=""></p><p>打开相机后根据要求填写参数，点击保存设置后生效。</p><h3 id="6通讯设置界面"><a href="#6通讯设置界面" class="headerlink" title="6通讯设置界面"></a>6通讯设置界面</h3><p><img src="https://pic1.imgdb.cn/item/67c34245d0e0a243d4094f19.png" alt=""></p><h2 id="二、软件使用环境配置"><a href="#二、软件使用环境配置" class="headerlink" title="二、软件使用环境配置"></a>二、软件使用环境配置</h2><h3 id="1-相机配置（以默认安装路径为例）"><a href="#1-相机配置（以默认安装路径为例）" class="headerlink" title="1.相机配置（以默认安装路径为例）"></a>1.相机配置（以默认安装路径为例）</h3><p>在<a href="https://www.hikrobotics.com/cn/machinevision/service/download?module=0">海康工业相机官网</a>下载机器视觉工业相机客户端MVS(Windows)，使用该软件导入项目三.mfs配置文件，该文件在C:\Program Files\CCZUXBOTSchool\QRWMS\configure下。</p><h3 id="2-数据库配置（以默认安装路径为例）"><a href="#2-数据库配置（以默认安装路径为例）" class="headerlink" title="2.数据库配置（以默认安装路径为例）"></a>2.数据库配置（以默认安装路径为例）</h3><p>数据库使用Mysql8.0.1及以上版本，找到安装目录C:\Program Files\CCZUXBOTSchool\QRWMS\configure\database下的laopaoer.sql文件，双击运行该文件即可自动生成数据库。</p><p>使用记事本打开C:\Program Files\CCZUXBOTSchool\QRWMS下的config.ini文件，修改这四项为安装数据库时的信息并保存。</p><p><img src="https://pic1.imgdb.cn/item/67c34319d0e0a243d4094f20.png" alt=""></p><h3 id="3-PLC配置（以默认安装路径为例）"><a href="#3-PLC配置（以默认安装路径为例）" class="headerlink" title="3.PLC配置（以默认安装路径为例）"></a>3.PLC配置（以默认安装路径为例）</h3><p>使用记事本打开C:\Program Files\CCZUXBOTSchool\QRWMS下的config.ini文件，修改这两项为PLC的IP及端口号并保存。</p><p>![img](扫码出入库后端.assets/wps2.jpg</p><p><img src="https://pic1.imgdb.cn/item/67c3432ad0e0a243d4094f37.png" alt=""></p><h2 id="三、常见问题"><a href="#三、常见问题" class="headerlink" title="三、常见问题"></a>三、常见问题</h2><h3 id="1-无法保存config-ini文件"><a href="#1-无法保存config-ini文件" class="headerlink" title="1 无法保存config.ini文件"></a>1 无法保存config.ini文件</h3><p>问题现象：保存config.ini文件时提示权限不够</p><p>问题原因：用户权限不够</p><p>解决方法：请右击该文件找到属性选项，打开安全选项卡，勾选所有权限后保存</p><p><img src="https://pic1.imgdb.cn/item/67c3436ad0e0a243d4094f42.png" alt=""></p><h3 id="2打开软件后无反应"><a href="#2打开软件后无反应" class="headerlink" title="2打开软件后无反应"></a>2打开软件后无反应</h3><p>问题现象：打开软件后无反应</p><p>问题原因：MySQL相关dll文件缺失</p><p>解决方法：重新下载Mysql8.0.1版本，安装时默认位置不要修改</p><h3 id="3数据库连接失败"><a href="#3数据库连接失败" class="headerlink" title="3数据库连接失败"></a>3数据库连接失败</h3><p>问题现象：<img src="https://pic1.imgdb.cn/item/67c3442fd0e0a243d4094f4f.png" alt=""></p><p>问题原因：数据库密码或用户错误，无法连接数据库</p><p>解决方法：根据3.2节配置数据库</p><p>问题现象：<img src="https://pic1.imgdb.cn/item/67c3446cd0e0a243d4094f57.png" alt=""></p><p>问题原因：PLC连接失败，IP或端口号错误</p><p>解决方法：此问题出现前常伴随登录后短暂卡顿，这是正常现象，请耐心等待，并根据3.3节配置PLC</p><h3 id="4相机打开后黑屏"><a href="#4相机打开后黑屏" class="headerlink" title="4相机打开后黑屏"></a>4相机打开后黑屏</h3><p>问题现象：<img src="https://pic1.imgdb.cn/item/67c3449dd0e0a243d4094f5f.png" alt=""></p><p>问题原因：相机连接失败</p><p>解决方法：根据3.1节配置相机</p><h3 id="5工业相机指示灯闪红灯"><a href="#5工业相机指示灯闪红灯" class="headerlink" title="5工业相机指示灯闪红灯"></a>5工业相机指示灯闪红灯</h3><p>问题现象：连接相机后无画面，且工业相机后端闪红灯</p><p>问题原因：1、未使用USB3.0接口2、相机驱动未安装</p><p>解决方法：1、接入USB3.0接口2、打开安装目录下C:\Program Files\CCZUXBOTSchool\QRWMS\configure的device.exe文件安装驱动</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2025/03/03/%E6%9C%BA%E6%A2%B0%E8%87%82%E4%BB%BF%E7%9C%9F/"/>
      <url>/2025/03/03/%E6%9C%BA%E6%A2%B0%E8%87%82%E4%BB%BF%E7%9C%9F/</url>
      
        <content type="html"><![CDATA[<h1 id="CoppeliaSim的机械臂仿真"><a href="#CoppeliaSim的机械臂仿真" class="headerlink" title="CoppeliaSim的机械臂仿真"></a>CoppeliaSim的机械臂仿真</h1><h2 id="一、项目简介与开发依赖"><a href="#一、项目简介与开发依赖" class="headerlink" title="一、项目简介与开发依赖"></a>一、项目简介与开发依赖</h2><p>​        本项目使用Python脚本对RealMan提供的模型进行仿真，实现物体搬运的功能。</p><p>​        项目依赖</p><p>​                Windows操作系统</p><p>​                coppeliasim4.1edu</p><p>​                Python3.9</p><p>​                官方提供开源的sim的Python库</p><p>​                REALMAN的r65带夹爪的urdf模型</p><p>代码运行：直接运行Python脚本即可</p><h2 id="二、关于机械臂的物理建模"><a href="#二、关于机械臂的物理建模" class="headerlink" title="二、关于机械臂的物理建模"></a>二、关于机械臂的物理建模</h2><h3 id="2-1关于urdf文件的导入"><a href="#2-1关于urdf文件的导入" class="headerlink" title="2.1关于urdf文件的导入"></a>2.1关于urdf文件的导入</h3><p>刚开始导入urdf文件时，出现了只导入了只导入了文件中的模型关系，而没有将模型导入，查阅之后发现导入urdf文件时，urdf中的STL文件需要修改文件路径，因为出现了路径重复的情况。最后将urdf文件导入到.ttt文件当中。</p><p><img src="https://pic.imgdb.cn/item/668235ead9c307b7e94bb3c7.png" alt="P31)ORKGZ3VM9BQSPD]D@LV.png"></p><h3 id="2-2关于RealMan机械臂urdf模型物理模型动力学参数"><a href="#2-2关于RealMan机械臂urdf模型物理模型动力学参数" class="headerlink" title="2.2关于RealMan机械臂urdf模型物理模型动力学参数"></a>2.2关于RealMan机械臂urdf模型物理模型动力学参数</h3><p>​    机械臂的动力学参数是十分重要的一点，它也是困扰我了将近一个月的时间，从仿真时出现抖动的问题的时候，查阅资料寻找原因，最后才发现了物理模型的重要指标，动力学参数，他会直接影响到仿真时出现抖动、运动时出现不合理移动的情况。在coppelliasim中可以将导入的urdf模型中，模块的控制面板中显示其重力、惯性矩等动力学指标，而不需要在urdf文件中修改其参数。</p><p>​    物理引擎使用的是ODE</p><p>(文档中文翻译)ODE属性</p><p>与Open Dynamics Engine相关的属性。 请确保还参考ODE用户手册以了解详细信息。</p><p>ODE时间步长：指定动力学计算所需的时间步长。 强烈建议将时间步长保持为5ms（默认值）结合50ms的仿真时间步长，每遍模拟将得出10个动力学计算步骤。<br>使用’quickStep’：选择后，将使用快速迭代求解方法。 QuickStep迭代属性越大，计算（通常）就越精确。 如果未选择quickStep方法，则对于小型系统，计算可以更精确，更快。 但是，较大的系统可能会非常缓慢，不稳定，并可能导致突然崩溃！<br>内部缩放：指定如何在内部处理尺寸。 如果动态场景是由较小的形状（❤️ cm）或很大的形状组成的，则可以通过调整比例因子来提高仿真稳定性。 启用“完全缩放”时，将缩放与尺寸相关的值以及与质量相关的值，否则，将仅缩放与尺寸相关的值。<br>全局ERP：全局减少错误参数，有关更多详细信息，请参阅ODE文档。<br>全局CFM：全局约束力混合，有关更多详细信息，请参考ODE文档。</p><p>接下来，说明一下本六轴机械臂中，关节以及每个关节两边的机械臂模型的处理：</p><p><img src="https://pic.imgdb.cn/item/668239c0d9c307b7e9525099.png" alt="]GBL4YXC}B69K$2}4QU3J)M.png"></p><h4 id="2-2-1关于机械臂基座的处理"><a href="#2-2-1关于机械臂基座的处理" class="headerlink" title="2.2.1关于机械臂基座的处理"></a>2.2.1关于机械臂基座的处理</h4><p>​    刚开始做模型仿真的时候，运行机械臂他会处理倒掉的情况，处理这一情况我在底座与地板之间加了一个链接器，将其与地板连接。如图所示：</p><p>（3.22.ttt）版本，realman未提供机械爪，自己组装的机械爪</p><p><img src="https://pic.imgdb.cn/item/66823bb3d9c307b7e955b3e8.png" alt="image.png" style="zoom:50%;" ></p><p><img src="https://pic.imgdb.cn/item/66823e1ed9c307b7e959cf43.png" alt="image.png" style="zoom: 50%;" ></p><p>后来接触到了动力学模型，取消其底座的动力学模型，仿真时，底座就不会出现倒地的情况。</p><p><img src="https://pic.imgdb.cn/item/66823d3ad9c307b7e95873c3.png" alt="image.png"></p><h4 id="2-2-2六个关节配置的处理"><a href="#2-2-2六个关节配置的处理" class="headerlink" title="2.2.2六个关节配置的处理"></a>2.2.2六个关节配置的处理</h4><p>因为之后要用到API库中提供的IK逆运动学模型，需要对关节运动模型修改为Inverse Kinematics mode ,混合方式操作。通过修改Upper velocity limit修改关节运动的最快速度。结合pid可以实现更精准的控制，本次仿真中没有对pid进行处理。</p><p><strong>调整比例增益 (Kp)</strong>：增大Kp可以加快响应速度，但过大会导致系统振荡。</p><p><strong>调整积分增益 (Ki)</strong>：增大Ki可以消除稳态误差，但过大会导致系统不稳定。</p><p><strong>调整微分增益 (Kd)</strong>：增大Kd可以减少振荡和超调，但过大会导致系统过度响应噪声。</p><p>PID控制器的输出计算公式如下：</p><script type="math/tex; mode=display">u(t)=Kp⋅e(t)+Ki∫0te(τ)dτ+Kdde(t)dtu(t) = K_p \cdot e(t) + K_i \int_0^t e(\tau) d\tau + K_d \frac{de(t)}{dt}u(t)=Kp⋅e(t)+Ki∫0te(τ)dτ+Kddtde(t)</script><p>其中：</p><ul><li>u(t)u(t)u(t) 是控制器的输出（电机指令）。</li><li>e(t)e(t)e(t) 是当前误差（目标位置与当前实际位置的差）。</li><li>KpK_pKp 是比例增益。</li><li>KiK_iKi 是积分增益。</li><li>KdK_dKd 是微分增益。</li></ul><p><img src="https://pic.imgdb.cn/item/66824752d9c307b7e9685041.png" alt="image.png"></p><h4 id="2-2-3关于关节两端响应模型的处理"><a href="#2-2-3关于关节两端响应模型的处理" class="headerlink" title="2.2.3关于关节两端响应模型的处理"></a>2.2.3关于关节两端响应模型的处理</h4><p>关节两端的处理对机械臂的运动十分重要，如果不做处理，仿真运动会很奇怪，同学使用别的软件进行仿真时，有专门的api来取消重力造成的影响，但是那样取消重力影响来做仿真，感觉不太合理。</p><p><img src="https://pic.imgdb.cn/item/66824d3ad9c307b7e97161a9.png" alt="image.png"></p><p>动力学参数对机械臂运动的影响</p><ul><li><p><strong>质量（Mass）</strong>：</p><ul><li>链接的质量影响惯性和加速度。质量过大会导致运动迟缓，质量过小会导致控制不稳定。</li></ul></li><li><p><strong>惯性矩（Inertia Matrix）</strong>：</p><ul><li>惯性矩决定了物体对旋转运动的抵抗程度。惯性矩设置不当会导致运动的抖动和不稳定。</li></ul></li></ul><p>常见形状的惯性矩公式</p><ol><li><p><strong>均匀长方体</strong>：</p><ul><li><p>质量 m</p></li><li><p>宽度 w，高度 h，深度 d</p></li><li><p>质心惯性矩：</p><script type="math/tex; mode=display">I x​ = 121​ m(h 2 +d 2 )𝐼𝑦=112𝑚(𝑤2+𝑑2)I y​ = 121​ m(w 2 +d 2 )𝐼𝑧=112𝑚(𝑤2+ℎ2)I z​ = 121​ m(w 2 +h 2 )</script></li></ul></li></ol><p>==urdf中的质量、惯性矩参数仿真时会出现抖动，要根据仿真具体情况调整这些参数==</p><p>我每个关节按照运动一点一点调的！根据公式，再进行微调。也可能是没有学习到真实是如何实现的。</p><h2 id="三、关于Python脚本与仿真软件的通信"><a href="#三、关于Python脚本与仿真软件的通信" class="headerlink" title="三、关于Python脚本与仿真软件的通信"></a>三、关于Python脚本与仿真软件的通信</h2><h3 id="3-1-关于coppeliasim通讯情况"><a href="#3-1-关于coppeliasim通讯情况" class="headerlink" title="3.1 关于coppeliasim通讯情况"></a>3.1 关于coppeliasim通讯情况</h3><p>​    基于B0的远程API：这表示远程API的第二个版本。 它基于BlueZero中间件及其CoppeliaSim的接口插件。 与传统的远程API相比，它更易于使用且更具灵活性，最重要的是，它易于扩展。 目前，它支持以下语言：C ++，Java，Python，Matlab和Lua。</p><p>​    旧版远程API（或简称为远程API）：这表示远程API的第一个版本。 与基于B0的远程API相比，它相对较轻并且具有更少的依赖性。 但是，它不那么直观，也不灵活，并且很难扩展。 它支持以下语言：C / C ++，Java，Python，Matlab，Octave和Lua。</p><p>​    本次项目使用的是新版的API,具体原因如下：</p><p>1 使用旧版API时，会发现sim库中不存在某些函数。例如：根据物品handle获取物品的名称的函数。在用Python脚本语言控制机械臂时，需要不断的对物体的句柄进行操作，所有相对于旧版api来说，新版的api实用性、以及契合性跟匹配这次项目。<br>2 新库有些函数能比旧库返回更多的参数，可以更加方便调试。</p><h3 id="3-2coppeliasim与Python通讯功能的实现"><a href="#3-2coppeliasim与Python通讯功能的实现" class="headerlink" title="3.2coppeliasim与Python通讯功能的实现"></a>3.2coppeliasim与Python通讯功能的实现</h3><p>关于通讯的实现：</p><p>1.在软件的机械臂的线程中，调佣api，填写端口号，作为服务端，与Python脚本进行通讯</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">simRemoteApi.start(<span class="number">19997</span>)</span><br></pre></td></tr></table></figure><p>2.在Python，作为客户端，与软件进行通讯</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">    sim.simxFinish(-<span class="number">1</span>)  <span class="comment"># 关掉之前连接</span></span><br><span class="line">    <span class="variable language_">self</span>.clientID = sim.simxStart(<span class="string">&#x27;127.0.0.1&#x27;</span>, <span class="number">19997</span>, <span class="literal">True</span>, <span class="literal">True</span>, <span class="number">5000</span>, <span class="number">5</span>)  <span class="comment"># Connect to CoppeliaSim</span></span><br><span class="line">    <span class="keyword">if</span> <span class="variable language_">self</span>.clientID != -<span class="number">1</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;connect successfully&#x27;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        sys.exit(<span class="string">&quot;Error: no se puede conectar&quot;</span>)  <span class="comment"># Terminar este script</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&#x27;Check if CoppeliaSim is open: <span class="subst">&#123;e&#125;</span>&#x27;</span>)</span><br><span class="line">    <span class="variable language_">self</span>.clientID = -<span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="variable language_">self</span>.clientID != -<span class="number">1</span>:</span><br><span class="line">    sim.simxStartSimulation(<span class="variable language_">self</span>.clientID, sim.simx_opmode_blocking)  <span class="comment"># 启动仿真</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Simulation start&quot;</span>)</span><br></pre></td></tr></table></figure><p>3.Python关闭连接</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 关闭连接</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">StopSimulation</span>(<span class="params">self</span>):</span><br><span class="line">    <span class="keyword">if</span> <span class="variable language_">self</span>.clientID != -<span class="number">1</span>:</span><br><span class="line">        sim.simxStopSimulation(<span class="variable language_">self</span>.clientID, sim.simx_opmode_blocking)  <span class="comment"># 关闭仿真</span></span><br><span class="line">        sim.simxFinish(<span class="variable language_">self</span>.clientID)</span><br></pre></td></tr></table></figure><p><img src="https://pic.imgdb.cn/item/66825f00d9c307b7e98dfbb0.png" alt="image.png"></p><h2 id="四、coppeliasim中关于机械臂仿真API的学习"><a href="#四、coppeliasim中关于机械臂仿真API的学习" class="headerlink" title="四、coppeliasim中关于机械臂仿真API的学习"></a>四、coppeliasim中关于机械臂仿真API的学习</h2><h4 id="4-1关于handle的获取"><a href="#4-1关于handle的获取" class="headerlink" title="4.1关于handle的获取"></a>4.1关于handle的获取</h4><p>​    在coppeliasim中无法在Python中导入urdf对软件的中的关节进行控制，所以需要使用它新版的通讯模块，通过handle句柄读入urdf导入软件中的关节名，以及目标物体的名字到Python中。</p><p>simxGetObjectHandle (regular API equivalent: <a href="regularApi/simGetObjectHandle.htm">sim.getObjectHandle</a>)</p><div class="table-container"><table><thead><tr><th>Description</th><th>Retrieves an object handle based on its name.</th></tr></thead><tbody><tr><td>Python synopsis</td><td>number returnCode,number handle=simxGetObjectHandle(number clientID,string objectName,number operationMode)</td></tr><tr><td>Python parameters</td><td><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.<strong>objectName</strong>: name of the object.<strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_blocking</td></tr><tr><td>Python return values</td><td><strong>returnCode</strong>: a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a><strong>handle</strong>: the handle</td></tr><tr><td>Other languages</td><td><a href="remoteApiFunctions.htm#simxGetObjectHandle">C/C++</a>, <a href="remoteApiFunctionsJava.htm#simxGetObjectHandle">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxGetObjectHandle">Matlab</a>, <a href="remoteApiFunctionsOctave.htm#simxGetObjectHandle">Octave</a>, <a href="remoteApiFunctionsLua.htm#simxGetObjectHandle">Lua</a></td></tr></tbody></table></div><h5 id="4-1-1机械臂handle的获取"><a href="#4-1-1机械臂handle的获取" class="headerlink" title="4.1.1机械臂handle的获取"></a>4.1.1机械臂handle的获取</h5><p>URDF中关节名为joint+n，基座base_link_respondable</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">   jointNum = <span class="number">6</span></span><br><span class="line">   baseName = <span class="string">&#x27;base_link_respondable&#x27;</span></span><br><span class="line">   jointName = <span class="string">&#x27;joint&#x27;</span></span><br><span class="line"><span class="variable language_">self</span>.jointNum = <span class="variable language_">self</span>.jointNum</span><br><span class="line">   <span class="variable language_">self</span>.baseName = <span class="variable language_">self</span>.baseName</span><br><span class="line">   <span class="variable language_">self</span>.jointName = <span class="variable language_">self</span>.jointName</span><br><span class="line">   <span class="comment"># 读取Base和Joint的句柄</span></span><br><span class="line">   <span class="variable language_">self</span>.jointHandle = np.zeros((<span class="variable language_">self</span>.jointNum, <span class="number">1</span>), dtype=<span class="built_in">int</span>)</span><br><span class="line">   <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="variable language_">self</span>.jointNum):</span><br><span class="line">       result, returnHandle = sim.simxGetObjectHandle(<span class="variable language_">self</span>.clientID, <span class="variable language_">self</span>.jointName + <span class="built_in">str</span>(i + <span class="number">1</span>), sim.simx_opmode_blocking)</span><br><span class="line">       <span class="keyword">if</span> result == sim.simx_return_ok:</span><br><span class="line">           <span class="variable language_">self</span>.jointHandle[i] = returnHandle</span><br><span class="line">           <span class="built_in">print</span>(<span class="string">f&quot;Joint <span class="subst">&#123;i + <span class="number">1</span>&#125;</span> handle: <span class="subst">&#123;self.jointHandle[i]&#125;</span>&quot;</span>)</span><br><span class="line">           <span class="keyword">else</span>:</span><br><span class="line">               <span class="built_in">print</span>(<span class="string">f&quot;Failed to get handle for joint <span class="subst">&#123;i + <span class="number">1</span>&#125;</span>, result: <span class="subst">&#123;result&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line">               result, <span class="variable language_">self</span>.baseHandle = sim.simxGetObjectHandle(<span class="variable language_">self</span>.clientID, <span class="variable language_">self</span>.baseName, sim.simx_opmode_blocking)</span><br><span class="line">               <span class="keyword">if</span> result != sim.simx_return_ok:</span><br><span class="line">                   <span class="built_in">print</span>(<span class="string">f&quot;Failed to get base handle, result: <span class="subst">&#123;result&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure><h5 id="4-1-2机械爪handle的获取"><a href="#4-1-2机械爪handle的获取" class="headerlink" title="4.1.2机械爪handle的获取"></a>4.1.2机械爪handle的获取</h5><p>注意handle的数据类型，整型数组，初始化为0</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 读取夹爪的句柄</span></span><br><span class="line">gripperNum = <span class="number">4</span></span><br><span class="line">gripperJoints = [<span class="string">&#x27;gripper_link1&#x27;</span>, <span class="string">&#x27;gripper_link2&#x27;</span>, <span class="string">&#x27;gripper_link3&#x27;</span>, <span class="string">&#x27;gripper_link4&#x27;</span>]</span><br><span class="line"><span class="variable language_">self</span>.gripperHandle = np.zeros((<span class="variable language_">self</span>.gripperNum,), dtype=<span class="built_in">int</span>)  </span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="variable language_">self</span>.gripperNum):</span><br><span class="line">    result, returnHandle1 = sim.simxGetObjectHandle(<span class="variable language_">self</span>.clientID, <span class="variable language_">self</span>.gripperJoints[i], sim.simx_opmode_blocking)</span><br><span class="line">    <span class="keyword">if</span> result == sim.simx_return_ok:</span><br><span class="line">        <span class="variable language_">self</span>.gripperHandle[i] = returnHandle1</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;Gripper <span class="subst">&#123;i + <span class="number">1</span>&#125;</span> handle: <span class="subst">&#123;self.gripperHandle[i]&#125;</span>&quot;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;Failed to get handle for <span class="subst">&#123;self.gripperJoints[i]&#125;</span>, result: <span class="subst">&#123;result&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure><h5 id="4-1-3物体句柄的获取"><a href="#4-1-3物体句柄的获取" class="headerlink" title="4.1.3物体句柄的获取"></a>4.1.3物体句柄的获取</h5><p>获取机械臂末端位置，杯子位置，以及目标位置，便于做逆运动学。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 读取tip和target的句柄</span></span><br><span class="line">result, <span class="variable language_">self</span>.ikTipHandle = sim.simxGetObjectHandle(<span class="variable language_">self</span>.clientID, <span class="string">&#x27;target&#x27;</span>, sim.simx_opmode_blocking)  <span class="comment">#机械臂末端位置</span></span><br><span class="line"><span class="keyword">if</span> result == sim.simx_return_ok:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;ikTipHandle:&#x27;</span>, <span class="variable language_">self</span>.ikTipHandle)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;Failed to get ikTip handle, result: <span class="subst">&#123;result&#125;</span>&quot;</span>)</span><br><span class="line">    result, <span class="variable language_">self</span>.targetPosition = sim.simxGetObjectPosition(<span class="variable language_">self</span>.clientID, <span class="variable language_">self</span>.ikTipHandle, -<span class="number">1</span>, sim.simx_opmode_blocking)</span><br><span class="line">    <span class="keyword">if</span> result == sim.simx_return_ok:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;targetPosition:&quot;</span>, <span class="variable language_">self</span>.targetPosition)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;Failed to get target position, result: <span class="subst">&#123;result&#125;</span>&quot;</span>)</span><br><span class="line"><span class="comment"># 获取杯子和目标位置的句柄</span></span><br><span class="line">result, <span class="variable language_">self</span>.targetHandle = sim.simxGetObjectHandle(<span class="variable language_">self</span>.clientID, <span class="string">&#x27;targetPos&#x27;</span>, sim.simx_opmode_blocking)  <span class="comment"># 目标位置</span></span><br><span class="line"><span class="keyword">if</span> result != sim.simx_return_ok:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;Failed to get target handle, result: <span class="subst">&#123;result&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line">result, <span class="variable language_">self</span>.CupHandle = sim.simxGetObjectHandle(<span class="variable language_">self</span>.clientID, <span class="string">&#x27;Cuboid&#x27;</span>, sim.simx_opmode_blocking)  <span class="comment"># 杯子位置</span></span><br><span class="line"><span class="keyword">if</span> result != sim.simx_return_ok:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;Failed to get cup handle, result: <span class="subst">&#123;result&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure><h4 id="4-2关于关节控制"><a href="#4-2关于关节控制" class="headerlink" title="4.2关于关节控制"></a>4.2关于关节控制</h4><p>关于关节控制，官方提供了两个函数simxSetJointPosition和simxSetJointTargetPosition。刚开始做时，没有注意区别，使用的是simxSetJointPosition，出现了问题，我在调用它对爪子关节进行控制时，它没有反应。听说被弃用了，我也不清楚，但我查到的是simxSetJointPosition 函数用于直接设置关节的位置。这通常用于仿真器在动态计算之前进行关节初始化或调整关节位置，而不是在实际控制机器人运动时使用。simxSetJointTargetPosition函数用于设置关节的目标位置。当关节使用位置控制（例如 PID 控制）时，这个函数用于设置关节要移动到的目标位置。</p><p>下面是这两个函数的官方的使用说明</p><p>simxSetJointPosition (regular API equivalent: <a href="regularApi/simSetJointPosition.htm">sim.setJointPosition</a>)</p><div class="table-container"><table><thead><tr><th>Description</th><th>Sets the intrinsic position of a joint. May have no effect depending on the joint mode. This function cannot be used with spherical joints (use <a href="#simxSetSphericalJointMatrix">simxSetSphericalJointMatrix</a> instead). If you want to set several joints that should be applied at the exact same time on the CoppeliaSim side, then use <a href="#simxPauseCommunication">simxPauseCommunication</a>. See also <a href="#simxGetJointPosition">simxGetJointPosition</a> and <a href="#simxSetJointTargetPosition">simxSetJointTargetPosition</a>.</th></tr></thead><tbody><tr><td>Python synopsis</td><td>number returnCode=simxSetJointPosition(number clientID,number jointHandle,number position,number operationMode)</td></tr><tr><td>Python parameters</td><td><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.<strong>jointHandle</strong>: handle of the joint<strong>position</strong>: position of the joint (angular or linear value depending on the joint type)<strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation modes for this function are simx_opmode_oneshot or simx_opmode_streaming</td></tr><tr><td>Python return values</td><td><strong>returnCode</strong>: a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></td></tr><tr><td>Other languages</td><td><a href="remoteApiFunctions.htm#simxSetJointPosition">C/C++</a>, <a href="remoteApiFunctionsJava.htm#simxSetJointPosition">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxSetJointPosition">Matlab</a>, <a href="remoteApiFunctionsOctave.htm#simxSetJointPosition">Octave</a>, <a href="remoteApiFunctionsLua.htm#simxSetJointPosition">Lua</a></td></tr></tbody></table></div><p>simxSetJointTargetPosition (regular API equivalent: <a href="regularApi/simSetJointTargetPosition.htm">sim.setJointTargetPosition</a>)</p><div class="table-container"><table><thead><tr><th>Description</th><th>Sets the target position of a joint if the joint is in torque/force mode (also make sure that the joint’s motor and position control are enabled). See also <a href="#simxSetJointPosition">simxSetJointPosition</a>.</th></tr></thead><tbody><tr><td>Python synopsis</td><td>number returnCode=simxSetJointTargetPosition(number clientID,number jointHandle,number targetPosition,number operationMode)</td></tr><tr><td>Python parameters</td><td><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.<strong>jointHandle</strong>: handle of the joint<strong>targetPosition</strong>: target position of the joint (angular or linear value depending on the joint type)<strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation modes for this function are simx_opmode_oneshot or simx_opmode_streaming</td></tr><tr><td>Python return values</td><td><strong>returnCode</strong>: a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></td></tr><tr><td>Other languages</td><td><a href="remoteApiFunctions.htm#simxSetJointTargetPosition">C/C++</a>, <a href="remoteApiFunctionsJava.htm#simxSetJointTargetPosition">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxSetJointTargetPosition">Matlab</a>, <a href="remoteApiFunctionsOctave.htm#simxSetJointTargetPosition">Octave</a>, <a href="remoteApiFunctionsLua.htm#simxSetJointTargetPosition">Lua</a></td></tr></tbody></table></div><p>下面是机械爪调用api使用方法，具体使用在五中说明，机械爪控制也是仿真控制上的一个难点。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">control_gripper</span>(<span class="params">self, close_gripper=<span class="literal">True</span></span>):</span><br><span class="line">    <span class="keyword">if</span> close_gripper:</span><br><span class="line">        positions = [<span class="number">25</span>/<span class="number">180</span>*<span class="number">3.1415</span>, -<span class="number">25</span>/<span class="number">180</span>*<span class="number">3.1415</span>, -<span class="number">25</span>/<span class="number">180</span>*<span class="number">3.1415</span>, <span class="number">25</span>/<span class="number">180</span>*<span class="number">3.1415</span>]</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        positions = [-<span class="number">10</span>/<span class="number">180</span>*<span class="number">3.1415</span>, <span class="number">10</span>/<span class="number">180</span>*<span class="number">3.1415</span>, <span class="number">10</span>/<span class="number">180</span>*<span class="number">3.1415</span>, -<span class="number">10</span>/<span class="number">180</span>*<span class="number">3.1415</span>]</span><br><span class="line">        <span class="comment"># positions = [30 if close_gripper else 0.0, -30 if close_gripper else 0.0]  # 设置夹爪的目标位置，确保角度值在合理范围内</span></span><br><span class="line">    <span class="keyword">for</span> i, handle <span class="keyword">in</span> <span class="built_in">enumerate</span>(<span class="variable language_">self</span>.gripperHandle[<span class="number">0</span>:<span class="number">2</span>]):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;Setting gripper <span class="subst">&#123;i + <span class="number">1</span>&#125;</span> position to <span class="subst">&#123;positions[<span class="number">0</span>]&#125;</span>&quot;</span>)</span><br><span class="line">        result = sim.simxSetJointTargetPosition(<span class="variable language_">self</span>.clientID, <span class="built_in">int</span>(handle), positions[i], sim.simx_opmode_blocking)</span><br><span class="line">        <span class="keyword">if</span> result == sim.simx_return_ok:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;Successfully set position for gripper <span class="subst">&#123;i + <span class="number">1</span>&#125;</span>&quot;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;Failed to set position for gripper <span class="subst">&#123;i + <span class="number">1</span>&#125;</span>, result: <span class="subst">&#123;result&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i, handle <span class="keyword">in</span> <span class="built_in">enumerate</span>(<span class="variable language_">self</span>.gripperHandle[<span class="number">2</span>:<span class="number">4</span>]):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;Setting gripper <span class="subst">&#123;i + <span class="number">3</span>&#125;</span> position to <span class="subst">&#123;positions[<span class="number">1</span>]&#125;</span>&quot;</span>)</span><br><span class="line">        result = sim.simxSetJointTargetPosition(<span class="variable language_">self</span>.clientID, <span class="built_in">int</span>(handle), positions[i+<span class="number">2</span>],sim.simx_opmode_blocking)</span><br><span class="line">        <span class="comment"># print(result)</span></span><br><span class="line">        <span class="keyword">if</span> result == sim.simx_return_ok:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;Successfully set position for gripper <span class="subst">&#123;i + <span class="number">3</span>&#125;</span>&quot;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;Failed to set position for gripper <span class="subst">&#123;i + <span class="number">3</span>&#125;</span>, result: <span class="subst">&#123;result&#125;</span>&quot;</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> close_gripper:</span><br><span class="line">        result=sim.simxSetIntegerSignal(<span class="variable language_">self</span>.clientID,<span class="string">&quot;close&quot;</span>,<span class="number">1</span>,sim.simx_opmode_blocking)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        result=sim.simxSetIntegerSignal(<span class="variable language_">self</span>.clientID,<span class="string">&quot;close&quot;</span>,<span class="number">0</span>,sim.simx_opmode_blocking)        </span><br></pre></td></tr></table></figure><h4 id="4-3关于图像处理"><a href="#4-3关于图像处理" class="headerlink" title="4.3关于图像处理"></a>4.3关于图像处理</h4><p>图像处理属于我在项目要求之外自己添加的一个任务，通过在软件中调用视觉传感器，python中调用视觉句柄，使用OpenCV库进行图像识别</p><p>simxGetVisionSensorImage (regular API equivalent: <a href="regularApi/simGetVisionSensorImage.htm">sim.getVisionSensorImage</a>)</p><div class="table-container"><table><thead><tr><th>Description</th><th>Retrieves the image of a vision sensor. The returned data doesn’t make sense if <a href="regularApi/simHandleVisionSensor.htm">sim.handleVisionSensor</a> wasn’t called previously (sim.handleVisionSensor is called by default in the main script if the vision sensor is not tagged as explicit handling). Use the <a href="#simxGetLastCmdTime">simxGetLastCmdTime</a> function to verify the “freshness” of the retrieved data. See also <a href="#simxSetVisionSensorImage">simxSetVisionSensorImage</a>, <a href="#simxGetVisionSensorDepthBuffer">simxGetVisionSensorDepthBuffer</a> and <a href="#simxReadVisionSensor">simxReadVisionSensor</a>.</th></tr></thead><tbody><tr><td>Python synopsis</td><td>number returnCode,array resolution,array image=simxGetVisionSensorImage(number clientID,number sensorHandle,number options,number operationMode)</td></tr><tr><td>Python parameters</td><td><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.<strong>sensorHandle</strong>: handle of the vision sensor<strong>options</strong>: image options, bit-coded:bit0 set: each image pixel is a byte (greyscale image), otherwise each image pixel is a rgb byte-triplet<strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation modes for this function are simx_opmode_streaming (the first call) and simx_opmode_buffer (the following calls)</td></tr><tr><td>Python return values</td><td><strong>returnCode</strong>: a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a><strong>resolution</strong>: the resolution of the image (x,y)<strong>image</strong>: the image data.</td></tr><tr><td>Other languages</td><td><a href="remoteApiFunctions.htm#simxGetVisionSensorImage">C/C++</a>, <a href="remoteApiFunctionsJava.htm#simxGetVisionSensorImage">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxGetVisionSensorImage">Matlab</a>, <a href="remoteApiFunctionsOctave.htm#simxGetVisionSensorImage">Octave</a>, <a href="remoteApiFunctionsLua.htm#simxGetVisionSensorImage">Lua</a></td></tr></tbody></table></div><p>使用案例</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 获取相机句柄</span></span><br><span class="line">result, <span class="variable language_">self</span>.cameraHandle = sim.simxGetObjectHandle(<span class="variable language_">self</span>.clientID, <span class="string">&#x27;Vision_sensor&#x27;</span>, sim.simx_opmode_blocking)</span><br><span class="line"><span class="keyword">if</span> result == sim.simx_return_ok:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;Camera handle: <span class="subst">&#123;self.cameraHandle&#125;</span>&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;Failed to get camera handle, result: <span class="subst">&#123;result&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#视觉传感器读取相机图片的使用</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">readVisionSensor</span>(<span class="params">self</span>):</span><br><span class="line">    <span class="keyword">global</span> resolution</span><br><span class="line">    result, resolution, c_image = sim.simxGetVisionSensorImage(<span class="variable language_">self</span>.clientID, <span class="variable language_">self</span>.cameraHandle, <span class="number">0</span>,sim.simx_opmode_blocking)</span><br><span class="line">    <span class="keyword">if</span> result == sim.simx_return_ok:</span><br><span class="line">        <span class="comment"># print(&quot;Image captured successfully&quot;)</span></span><br><span class="line">        <span class="comment"># print(f&quot;Resolution: &#123;resolution&#125;&quot;)</span></span><br><span class="line">        <span class="comment"># print(f&quot;Raw image data length: &#123;len(c_image)&#125;&quot;)</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(c_image) == <span class="number">0</span>:</span><br><span class="line">            <span class="comment"># print(&quot;Empty image data received&quot;)</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">        image = np.array(c_image).astype(np.uint8)  <span class="comment"># 显式转换为 uint8</span></span><br><span class="line">        <span class="comment"># print(f&quot;Image data after np.array conversion: &#123;image[:10]&#125;&quot;)  # 打印前10个像素值以作调试</span></span><br><span class="line"></span><br><span class="line">        image.resize([resolution[<span class="number">1</span>], resolution[<span class="number">0</span>], <span class="number">3</span>])  <span class="comment"># 调整图像大小</span></span><br><span class="line">        <span class="comment"># print(f&quot;Image shape after resize: &#123;image.shape&#125;&quot;)</span></span><br><span class="line"></span><br><span class="line">        image = cv2.flip(image, <span class="number">0</span>)  <span class="comment"># 图像上下翻转</span></span><br><span class="line">        <span class="keyword">return</span> image</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;Failed to capture image&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"><span class="comment">#读取相机图像</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">process_image</span>(<span class="params">self, image</span>):</span><br><span class="line">        <span class="keyword">if</span> image <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">            <span class="comment"># print(f&quot;Processing image with shape: &#123;image.shape&#125;&quot;)</span></span><br><span class="line">            <span class="variable language_">self</span>.detect_object(image)</span><br><span class="line">            cv2.imshow(<span class="string">&#x27;Processed Image&#x27;</span>, image)</span><br><span class="line">            cv2.waitKey(<span class="number">1</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&quot;No image to process&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#使用线程调用</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">capture_and_process</span>(<span class="params">robot</span>):</span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            image = robot.readVisionSensor()</span><br><span class="line">            robot.process_image(image)</span><br><span class="line">thread1 = threading.Thread(target=capture_and_process, args=(robot,))</span><br></pre></td></tr></table></figure><h2 id="五、机械爪的抓取与放下的仿真"><a href="#五、机械爪的抓取与放下的仿真" class="headerlink" title="五、机械爪的抓取与放下的仿真"></a>五、机械爪的抓取与放下的仿真</h2><h3 id="5-1通过摩擦力进行目标物体的抓取"><a href="#5-1通过摩擦力进行目标物体的抓取" class="headerlink" title="5.1通过摩擦力进行目标物体的抓取"></a>5.1通过摩擦力进行目标物体的抓取</h3><p>​    关于机械臂的抓取与放下，是最困扰我的一部分内容，处理这个问题，花费了大概一个月的时间，T-T。刚开始的时候我的想想法是运动到目标位置前方，通过前伸闭合机械爪关节进行抓取，但是在正式做的时候先是遇到了机械爪闭合不了的问题，然后遇到了闭合之后抓取物体时出现的抖动，以及在运动时出现的加速度，使得机械爪乱动的情况，物体掉落。做了一段时间后感觉这样做对于动力学参数调整的过程太过于复杂。放弃了这个方法。</p><p><img src="https://pic.imgdb.cn/item/66829f9fd9c307b7e9f5cbe2.png" alt="image.png" style="zoom:80%;" ></p><p>这是当时写的控制部分。。。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 移动到杯子上方</span></span><br><span class="line">above_cup_position = <span class="built_in">list</span>(cup_position)</span><br><span class="line">above_cup_position[<span class="number">2</span>] += <span class="number">0.1</span>  <span class="comment"># 移动到杯子上方10cm</span></span><br><span class="line"><span class="variable language_">self</span>.move_to_position(above_cup_position)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 移动到抓取位置</span></span><br><span class="line"><span class="variable language_">self</span>.move_to_position(cup_position)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 模拟抓取动作</span></span><br><span class="line"><span class="comment"># 闭合夹爪抓取杯子</span></span><br><span class="line"><span class="variable language_">self</span>.control_gripper(open_gripper=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">time.sleep(<span class="number">3</span>)  <span class="comment"># 假设抓取需要1秒</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 抬起杯子</span></span><br><span class="line"><span class="variable language_">self</span>.move_to_position(above_cup_position)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 移动到目标上方</span></span><br><span class="line">above_target_position = <span class="built_in">list</span>(target_position)</span><br><span class="line">above_target_position[<span class="number">2</span>] += <span class="number">0.1</span>  <span class="comment"># 移动到目标上方10cm</span></span><br><span class="line"><span class="variable language_">self</span>.move_to_position(above_target_position)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 移动到放置位置</span></span><br><span class="line"><span class="variable language_">self</span>.move_to_position(target_position)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 模拟释放动作</span></span><br><span class="line"><span class="comment"># 打开夹爪释放杯子</span></span><br><span class="line"></span><br><span class="line"><span class="variable language_">self</span>.control_gripper(open_gripper=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line">time.sleep(<span class="number">3</span>)  <span class="comment"># 假设释放需要1秒</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 抬起夹爪</span></span><br><span class="line"><span class="variable language_">self</span>.move_to_position(above_target_position)</span><br></pre></td></tr></table></figure><h3 id="5-2通过机械臂末端与物体的父子关系建立连接仿真抓取动作"><a href="#5-2通过机械臂末端与物体的父子关系建立连接仿真抓取动作" class="headerlink" title="5.2通过机械臂末端与物体的父子关系建立连接仿真抓取动作"></a>5.2通过机械臂末端与物体的父子关系建立连接仿真抓取动作</h3><p>​        最后想到了这个办法，通过使用链接器，在机械臂末端加入一个链接器，在夹爪到达目标物体时，通过链接器将物体与末端进行连接，这个想法是我想到，我刚开始做这个项目时，使用的是基座与地板通过链接器，也就是力传感器进行连接，这样的话我想到了，抓取的时候也可以这样做，抓取只是一个做一个动作，做完之后可以直接通过力传感器将两物体进行连接，到达目标位置时，再取消连接关系，这样我就可以完成这样的抓取放下的一个动作。接下来的一周，实践了这个想法。</p><h4 id="5-2-1抓取方式的改变"><a href="#5-2-1抓取方式的改变" class="headerlink" title="5.2.1抓取方式的改变"></a>5.2.1抓取方式的改变</h4><p>将之前的前抓，还为了下抓，这样比起前抓，有几处好处：</p><ol><li>提高稳定性</li></ol><p>向下抓取通常可以提供更稳定的抓取，因为重力有助于将物体固定在抓手中。这可以减少物体在抓取过程中滑动或掉落的风险。</p><ol><li>增强力的利用</li></ol><p>向下抓取可以更好地利用抓手的力，因为抓手可以更直接地施加垂直力。</p><ol><li>简化抓取控制</li></ol><p>向下抓取通常比镶嵌抓取更容易控制，因为它减少了对抓手姿态的精确调整要求。这样可以简化控制算法，并提高抓取成功率。</p><p>  4.减少干涉</p><p>在某些情况下，镶嵌抓取可能会遇到周围物体的干涉，导致抓取困难。向下抓取可以减少这种干涉，因为抓手可以从上方直接进入抓取区域。</p><p>  5.适应不同形状的物体</p><p>向下抓取对于不同形状的物体通常具有更好的适应性，特别是对于表面不规则或形状复杂的物体，向下抓取可以更容易地找到合适的抓取点。</p><p>  6.方便之后添加功能，做视觉定位</p><h4 id="5-2-2抓取动作的实现"><a href="#5-2-2抓取动作的实现" class="headerlink" title="5.2.2抓取动作的实现"></a>5.2.2抓取动作的实现</h4><p>​        之前我在抓取时调用的函数为simxSetJointPosition，使用时他没有做出相应的动作，网上说可能被弃用等等，但最主要的是我之前没有区别出simxSetJointTargetPosition的不同之处。这一点我在4.1.2中已经写出原因，不过多赘述。</p><p>​        第二点就是我在改变角度时，以为他是角度制，但是我错了，它应该是用的弧度制。</p><p>​        第三点就是关节运动时，它不像别的软件那样设置目标点，可以缓慢运动到目标位置，他需要通过差值运动将其慢慢运动到目标位置。</p><p>具体实现代码如下所示：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">control_gripper</span>(<span class="params">self, close_gripper=<span class="literal">True</span></span>):</span><br><span class="line">    <span class="keyword">if</span> close_gripper:</span><br><span class="line">        positions = [<span class="number">25</span>/<span class="number">180</span>*<span class="number">3.1415</span>, -<span class="number">25</span>/<span class="number">180</span>*<span class="number">3.1415</span>, -<span class="number">25</span>/<span class="number">180</span>*<span class="number">3.1415</span>, <span class="number">25</span>/<span class="number">180</span>*<span class="number">3.1415</span>]</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        positions = [-<span class="number">10</span>/<span class="number">180</span>*<span class="number">3.1415</span>, <span class="number">10</span>/<span class="number">180</span>*<span class="number">3.1415</span>, <span class="number">10</span>/<span class="number">180</span>*<span class="number">3.1415</span>, -<span class="number">10</span>/<span class="number">180</span>*<span class="number">3.1415</span>]</span><br><span class="line">        <span class="comment"># positions = [30 if close_gripper else 0.0, -30 if close_gripper else 0.0]  # 设置夹爪的目标位置，确保角度值在合理范围内</span></span><br><span class="line">    <span class="keyword">for</span> i, handle <span class="keyword">in</span> <span class="built_in">enumerate</span>(<span class="variable language_">self</span>.gripperHandle[<span class="number">0</span>:<span class="number">2</span>]):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;Setting gripper <span class="subst">&#123;i + <span class="number">1</span>&#125;</span> position to <span class="subst">&#123;positions[<span class="number">0</span>]&#125;</span>&quot;</span>)</span><br><span class="line">        result = sim.simxSetJointTargetPosition(<span class="variable language_">self</span>.clientID, <span class="built_in">int</span>(handle), positions[i], sim.simx_opmode_blocking)</span><br><span class="line">        <span class="keyword">if</span> result == sim.simx_return_ok:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;Successfully set position for gripper <span class="subst">&#123;i + <span class="number">1</span>&#125;</span>&quot;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;Failed to set position for gripper <span class="subst">&#123;i + <span class="number">1</span>&#125;</span>, result: <span class="subst">&#123;result&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i, handle <span class="keyword">in</span> <span class="built_in">enumerate</span>(<span class="variable language_">self</span>.gripperHandle[<span class="number">2</span>:<span class="number">4</span>]):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;Setting gripper <span class="subst">&#123;i + <span class="number">3</span>&#125;</span> position to <span class="subst">&#123;positions[<span class="number">1</span>]&#125;</span>&quot;</span>)</span><br><span class="line">        result = sim.simxSetJointTargetPosition(<span class="variable language_">self</span>.clientID, <span class="built_in">int</span>(handle), positions[i+<span class="number">2</span>],sim.simx_opmode_blocking)</span><br><span class="line">        <span class="comment"># print(result)</span></span><br><span class="line">        <span class="keyword">if</span> result == sim.simx_return_ok:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;Successfully set position for gripper <span class="subst">&#123;i + <span class="number">3</span>&#125;</span>&quot;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;Failed to set position for gripper <span class="subst">&#123;i + <span class="number">3</span>&#125;</span>, result: <span class="subst">&#123;result&#125;</span>&quot;</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> close_gripper:</span><br><span class="line">        result=sim.simxSetIntegerSignal(<span class="variable language_">self</span>.clientID,<span class="string">&quot;close&quot;</span>,<span class="number">1</span>,sim.simx_opmode_blocking)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        result=sim.simxSetIntegerSignal(<span class="variable language_">self</span>.clientID,<span class="string">&quot;close&quot;</span>,<span class="number">0</span>,sim.simx_opmode_blocking)  </span><br></pre></td></tr></table></figure><p>realman提供给我的夹爪的handle中夹爪关节的名字为1,11,2,22。我将其改为了1,2,3,4，方便对爪子的每一方向进行控制逻辑的写法。</p><p><img src="https://pic.imgdb.cn/item/6682a73dd9c307b7e902d80d.png" alt="image.png"></p><h4 id="5-2-3-链接器（力传感器）功能的实现"><a href="#5-2-3-链接器（力传感器）功能的实现" class="headerlink" title="5.2.3  链接器（力传感器）功能的实现"></a>5.2.3  链接器（力传感器）功能的实现</h4><p>最后是抓取动作的实现，对于抓取动作，我调用了simxSetIntegerSignal，它是用来给软件信号的。整形的信号，我用0/1控制。</p><p>下面是官方给的接口</p><p>simxSetIntegerSignal (regular API equivalent: <a href="regularApi/simSetIntegerSignal.htm">sim.setIntegerSignal</a>)</p><div class="table-container"><table><thead><tr><th>Description</th><th>Sets the value of an integer signal. If that signal is not yet present, it is added. See also <a href="#simxGetIntegerSignal">simxGetIntegerSignal</a>, <a href="#simxClearIntegerSignal">simxClearIntegerSignal</a>, <a href="#simxSetFloatSignal">simxSetFloatSignal</a> and <a href="#simxSetStringSignal">simxSetStringSignal</a>.</th></tr></thead><tbody><tr><td>Python synopsis</td><td>number returnCode=simxSetIntegerSignal(number clientID,string signalName,number signalValue,number operationMode)</td></tr><tr><td>Python parameters</td><td><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.<strong>signalName</strong>: name of the signal<strong>signalValue</strong>: value of the signal<strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_oneshot</td></tr><tr><td>Python return values</td><td><strong>returnCode</strong>: a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></td></tr><tr><td>Other languages</td><td><a href="remoteApiFunctions.htm#simxSetIntegerSignal">C/C++</a>, <a href="remoteApiFunctionsJava.htm#simxSetIntegerSignal">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxSetIntegerSignal">Matlab</a>, <a href="remoteApiFunctionsOctave.htm#simxSetIntegerSignal">Octave</a>, <a href="remoteApiFunctionsLua.htm#simxSetIntegerSignal">Lua</a></td></tr></tbody></table></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> close_gripper:</span><br><span class="line">    result=sim.simxSetIntegerSignal(<span class="variable language_">self</span>.clientID,<span class="string">&quot;close&quot;</span>,<span class="number">1</span>,sim.simx_opmode_blocking)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    result=sim.simxSetIntegerSignal(<span class="variable language_">self</span>.clientID,<span class="string">&quot;close&quot;</span>,<span class="number">0</span>,sim.simx_opmode_blocking) </span><br></pre></td></tr></table></figure><p>在软件的末端要添加lua脚本，响应。</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sysCall_init</span><span class="params">()</span></span></span><br><span class="line">    <span class="comment">-- do some initialization here</span></span><br><span class="line">    sim.clearIntegerSignal(<span class="string">&quot;close&quot;</span>)</span><br><span class="line">    attachedShape=sim.getObjectHandle(<span class="string">&quot;Cuboid&quot;</span>)</span><br><span class="line">    conenctor=sim.getObjectHandle(<span class="string">&quot;gripper_attach&quot;</span>)</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sysCall_actuation</span><span class="params">()</span></span></span><br><span class="line">    <span class="comment">-- put your actuation code here</span></span><br><span class="line">    <span class="keyword">local</span> data=sim.getIntegerSignal(<span class="string">&#x27;close&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> data <span class="keyword">and</span> data~=<span class="number">0</span> <span class="keyword">then</span></span><br><span class="line">        sim.setObjectParent(attachedShape,conenctor,<span class="literal">true</span>)</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        sim.setObjectParent(attachedShape,<span class="number">-1</span>,<span class="literal">true</span>)</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>链接器放置如图所示：</p><p><img src="https://pic.imgdb.cn/item/6682a8f1d9c307b7e906d0be.png" alt="image.png"></p><p>这样完成了抓取的动作。</p><h2 id="六、机械臂仿真运动整体逻辑"><a href="#六、机械臂仿真运动整体逻辑" class="headerlink" title="六、机械臂仿真运动整体逻辑"></a>六、机械臂仿真运动整体逻辑</h2><p>​        接下来是运动逻辑。</p><h3 id="6-1关于逆运动学"><a href="#6-1关于逆运动学" class="headerlink" title="6.1关于逆运动学"></a>6.1关于逆运动学</h3><p>1.自己写逆运动学解算，通过机器人学逆运动学相关知识，封装一个逆运动学库，但在Python脚本中写一个逆运动学库，再通过通讯实现数据的传递不现实，我们在进行逆运动学仿真时，对于实时性的要求很大，在运动过程中，它是通过插值运动，一步步的运动到目标位置，每一个时间片都需要处理一次逆运动学，在coppeliasim中，需要通过通讯才能实现数据的传递，这样逆解的传递效果会很差。</p><p>2.通过coppeliasim内置的仿真环境中的逆运动学。实现功能。</p><p>具体实现如下所示：</p><p>1、配置tip与target，末端tip为初始位置，target为目标位置，通过逆运动关系将其连接。</p><p><img src="https://pic.imgdb.cn/item/6682b42fd9c307b7e91c574e.png" alt="image.png"></p><p>2.设置内置逆运动学参数</p><p><img src="https://pic.imgdb.cn/item/6682b530d9c307b7e91e328a.png" alt="image.png"></p><p>3.实现对target的跟踪。</p><p>读取target句柄。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 读取tip和target的句柄</span></span><br><span class="line">result, <span class="variable language_">self</span>.ikTipHandle = sim.simxGetObjectHandle(<span class="variable language_">self</span>.clientID, <span class="string">&#x27;target&#x27;</span>, sim.simx_opmode_blocking) </span><br><span class="line"><span class="keyword">if</span> result == sim.simx_return_ok:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;ikTipHandle:&#x27;</span>, <span class="variable language_">self</span>.ikTipHandle)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;Failed to get ikTip handle, result: <span class="subst">&#123;result&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line">result, <span class="variable language_">self</span>.targetPosition = sim.simxGetObjectPosition(<span class="variable language_">self</span>.clientID, <span class="variable language_">self</span>.ikTipHandle, -<span class="number">1</span>, sim.simx_opmode_blocking)</span><br><span class="line"><span class="keyword">if</span> result == sim.simx_return_ok:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;targetPosition:&quot;</span>, <span class="variable language_">self</span>.targetPosition)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;Failed to get target position, result: <span class="subst">&#123;result&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure><h3 id="6-2关于运动路线"><a href="#6-2关于运动路线" class="headerlink" title="6.2关于运动路线"></a>6.2关于运动路线</h3><p>关于运动路线的实现，通过插值运动，实现target差值运动到目标物体正上方。插值运动为直线的路径设置。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">dp = [ position[<span class="number">0</span>]-current_position[<span class="number">0</span>], position[<span class="number">1</span>]-current_position[<span class="number">1</span>], position[<span class="number">2</span>]-current_position[<span class="number">2</span>] ]</span><br><span class="line">dis = math.sqrt(dp[<span class="number">0</span>]*dp[<span class="number">0</span>] + dp[<span class="number">1</span>]*dp[<span class="number">1</span>] + dp[<span class="number">2</span>]*dp[<span class="number">2</span>])</span><br><span class="line">steps = <span class="built_in">round</span>(dis / <span class="number">0.005</span>)</span><br><span class="line"><span class="keyword">if</span> steps &lt;= <span class="number">10</span>:</span><br><span class="line">    steps = <span class="number">10</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dp = [ position[<span class="number">0</span>]-current_position[<span class="number">0</span>], position[<span class="number">1</span>]-current_position[<span class="number">1</span>], position[<span class="number">2</span>]-current_position[<span class="number">2</span>] ]</span><br></pre></td></tr></table></figure><p>​        计算目标位置 <code>position</code> 与当前机械臂位置 <code>current_position</code> 之间的差异向量 <code>dp</code>。具体来说，它分别计算了目标位置和当前机械臂位置在 x、y、z 三个方向上的差异。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dis = math.sqrt(dp[<span class="number">0</span>]*dp[<span class="number">0</span>] + dp[<span class="number">1</span>]*dp[<span class="number">1</span>] + dp[<span class="number">2</span>]*dp[<span class="number">2</span>])</span><br></pre></td></tr></table></figure><p>​        使用欧几里得距离公式计算目标位置与当前机械臂位置之间的直线距离 <code>dis</code>。：</p><script type="math/tex; mode=display">\text{distance} = \sqrt{(x_2 - x_1)^2 + (y_2 - y_1)^2 + (z_2 - z_1)^2}</script><p>在代码中，这个公式被具体实现为：</p><script type="math/tex; mode=display">dis=dp[0]2+dp[1]2+dp[2]2\text{dis} = \sqrt{dp[0]^2 + dp[1]^2 + dp[2]^2}dis=dp[0]2+dp[1]2+dp[2]2</script><p> <code>dp[0]</code>、<code>dp[1]</code>、<code>dp[2]</code> 分别是目标位置与当前机械臂位置在 x、y、z 三个方向上的差异。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">steps = <span class="built_in">round</span>(dis / <span class="number">0.005</span>)</span><br></pre></td></tr></table></figure><p>计算插值移动的步数 <code>steps</code>。具体来说，它根据目标位置与当前机械臂位置之间的直线距离 <code>dis</code>，除以一个固定步长（这里是 0.005 米），来确定插值的步数。这个步长值可以调整，以控制移动的平滑度和精度。</p><ul><li><p>如果距离较大，步数较多，移动更平滑。</p></li><li><p>如果距离较小，步数较少，移动更快速。</p><p>限制最小步长</p></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> steps &lt;= <span class="number">10</span>:    steps = <span class="number">10</span></span><br></pre></td></tr></table></figure><p>​        确保插值步数 <code>steps</code> 的最小值为 10。如果计算得到的步数 <code>steps</code> 小于或等于 10，则将步数设置为 10，以避免步数过少导致的移动不平滑。</p><p>通过插值运动移动到物体位置，以及目标位置。</p><p>完成整体代码的实现</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">move_cup_to_target</span>(<span class="params">self</span>):</span><br><span class="line">    <span class="comment"># 获取杯子和目标位置</span></span><br><span class="line">    result, cup_position = sim.simxGetObjectPosition(<span class="variable language_">self</span>.clientID, <span class="variable language_">self</span>.CupHandle, -<span class="number">1</span>, sim.simx_opmode_blocking)</span><br><span class="line">    <span class="keyword">if</span> result != sim.simx_return_ok:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;Failed to get cup position, result: <span class="subst">&#123;result&#125;</span>&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    </span><br><span class="line">    result, target_position = sim.simxGetObjectPosition(<span class="variable language_">self</span>.clientID, <span class="variable language_">self</span>.targetHandle, -<span class="number">1</span>, sim.simx_opmode_blocking)</span><br><span class="line">    <span class="keyword">if</span> result != sim.simx_return_ok:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;Failed to get target position, result: <span class="subst">&#123;result&#125;</span>&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 移动到杯子上方</span></span><br><span class="line">    above_cup_position = <span class="built_in">list</span>(cup_position)</span><br><span class="line">    above_cup_position[<span class="number">2</span>] += <span class="number">0.1</span>  <span class="comment"># 移动到杯子上方10cm</span></span><br><span class="line">    <span class="variable language_">self</span>.move_to_position(above_cup_position)</span><br><span class="line">    time.sleep(<span class="number">5.0</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 移动到抓取位置</span></span><br><span class="line">    <span class="variable language_">self</span>.move_to_position(cup_position)</span><br><span class="line">    time.sleep(<span class="number">2.0</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 闭合夹爪抓取杯子</span></span><br><span class="line">    <span class="variable language_">self</span>.control_gripper(close_gripper=<span class="literal">True</span>)</span><br><span class="line">    time.sleep(<span class="number">2.0</span>)  <span class="comment"># 假设抓取需要1秒</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 抬起杯子</span></span><br><span class="line">    <span class="variable language_">self</span>.move_to_position(above_cup_position)</span><br><span class="line">    time.sleep(<span class="number">2.0</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 移动到目标上方</span></span><br><span class="line">    above_target_position = <span class="built_in">list</span>(target_position)</span><br><span class="line">    above_target_position[<span class="number">2</span>] += <span class="number">0.1</span>  <span class="comment"># 移动到目标上方10cm</span></span><br><span class="line">    <span class="variable language_">self</span>.move_to_position(above_target_position)</span><br><span class="line">    time.sleep(<span class="number">5.0</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 移动到放置位置</span></span><br><span class="line">    drop_target_position = <span class="built_in">list</span>(target_position)</span><br><span class="line">    drop_target_position[<span class="number">2</span>] += <span class="number">0.01</span>  <span class="comment"># 移动到目标上方10cm</span></span><br><span class="line">    <span class="variable language_">self</span>.move_to_position(drop_target_position)</span><br><span class="line">    time.sleep(<span class="number">2.0</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 打开夹爪释放杯子</span></span><br><span class="line">    <span class="variable language_">self</span>.control_gripper(close_gripper=<span class="literal">False</span>)</span><br><span class="line">    time.sleep(<span class="number">1.0</span>)  <span class="comment"># 假设抓取需要1秒</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 抬起夹爪</span></span><br><span class="line">    <span class="variable language_">self</span>.move_to_position(above_target_position)</span><br><span class="line">    time.sleep(<span class="number">1.0</span>)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2025/03/03/%E4%BA%92%E8%81%94%E7%BD%91+%E9%A1%B9%E7%9B%AE%E4%B8%AD%E7%9A%84%E5%8A%9F%E8%83%BD%E2%80%94%E2%80%94AR%E7%A0%81%E7%9A%84%E5%AE%9A%E4%BD%8D/"/>
      <url>/2025/03/03/%E4%BA%92%E8%81%94%E7%BD%91+%E9%A1%B9%E7%9B%AE%E4%B8%AD%E7%9A%84%E5%8A%9F%E8%83%BD%E2%80%94%E2%80%94AR%E7%A0%81%E7%9A%84%E5%AE%9A%E4%BD%8D/</url>
      
        <content type="html"><![CDATA[<h1 id="互联网-项目中的功能——AR码的定位"><a href="#互联网-项目中的功能——AR码的定位" class="headerlink" title="互联网+项目中的功能——AR码的定位"></a>互联网+项目中的功能——AR码的定位</h1><h2 id="一、项目简要"><a href="#一、项目简要" class="headerlink" title="一、项目简要"></a>一、项目简要</h2><p>拿下！互联网＋国金</p><p><img src="https://pic1.imgdb.cn/item/67c46364d0e0a243d40a2c8e.png" alt=""></p><p>本次比赛因涉及一下协议内容，我在这里只能将一些我在项目中所做的东西，嘻嘻。</p><h2 id="二、项目功能简介"><a href="#二、项目功能简介" class="headerlink" title="二、项目功能简介"></a>二、项目功能简介</h2><p>①做了一个底部AGV定位的功能，基于AR码的定位，可以使AGV能精准进入箱体底部</p><p>②做了一个基于巡回的相关软件后台可控，类似于我之前做的一些c#+视觉相关的内容</p><h2 id="三，二维码码定位相关"><a href="#三，二维码码定位相关" class="headerlink" title="三，二维码码定位相关"></a>三，二维码码定位相关</h2><h3 id="1、zbar码定位"><a href="#1、zbar码定位" class="headerlink" title="1、zbar码定位"></a>1、zbar码定位</h3><p>刚开始使用zbar二维码做的定位，相机标定+视觉处理+深度以及xy轴的偏差值，使其一直存在于相机中心，下面代码为简易版的demo </p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;/home/dl/InternetPlus/lib/zbarcode.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Zbarcode::prProcess</span><span class="params">(Mat gray)</span></span>&#123;</span><br><span class="line">      <span class="type">int</span> threadvlaue = <span class="number">255</span>;</span><br><span class="line">   Mat enhancedImage;</span><br><span class="line">   <span class="built_in">equalizeHist</span>(gray, enhancedImage);</span><br><span class="line">   Mat binary;</span><br><span class="line"> <span class="built_in">threshold</span>( enhancedImage, binary,<span class="number">152</span>, threadvlaue,THRESH_BINARY ); <span class="comment">//二值化</span></span><br><span class="line">   Mat morphedImage;</span><br><span class="line">   Mat kernel = <span class="built_in">getStructuringElement</span>(MORPH_RECT, <span class="built_in">Size</span>(<span class="number">3</span>, <span class="number">3</span>));</span><br><span class="line">   <span class="built_in">morphologyEx</span>(binary, morphedImage, MORPH_OPEN, kernel);</span><br><span class="line">   <span class="built_in">imshow</span>(<span class="string">&quot;3&quot;</span>,morphedImage);</span><br><span class="line"> </span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Zbarcode::QrcodeSearch</span><span class="params">(Mat src)</span></span>&#123;</span><br><span class="line">ImageScanner scanner;</span><br><span class="line">scanner.<span class="built_in">set_config</span>(ZBAR_QRCODE, ZBAR_CFG_ENABLE, <span class="number">1</span>);</span><br><span class="line">Mat gray;</span><br><span class="line"><span class="built_in">cvtColor</span>(src, gray, COLOR_BGR2GRAY);</span><br><span class="line"><span class="built_in">prProcess</span>(gray);</span><br><span class="line"><span class="type">int</span> width =gray.cols;</span><br><span class="line"><span class="type">int</span> height = gray.rows;</span><br><span class="line">uchar *raw = gray.data;</span><br><span class="line"><span class="function">Image <span class="title">zbarImage</span><span class="params">(width, height, <span class="string">&quot;Y800&quot;</span>, raw, width * height)</span></span>;</span><br><span class="line">scanner.<span class="built_in">scan</span>(zbarImage);</span><br><span class="line"></span><br><span class="line"> <span class="keyword">if</span> (zbarImage.<span class="built_in">symbol_begin</span>() != zbarImage.<span class="built_in">symbol_end</span>()) &#123;</span><br><span class="line"><span class="keyword">for</span> (Image::SymbolIterator symbol = zbarImage.<span class="built_in">symbol_begin</span>(); symbol != zbarImage.<span class="built_in">symbol_end</span>(); ++symbol) &#123;</span><br><span class="line">    vector&lt;Point&gt; points;</span><br><span class="line">    vector&lt;Point2f&gt; imagePoints;</span><br><span class="line">    <span class="comment">// 获取二维码的角点</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; symbol-&gt;<span class="built_in">get_location_size</span>(); ++i) &#123;</span><br><span class="line">        points.<span class="built_in">push_back</span>(<span class="built_in">Point</span>(symbol-&gt;<span class="built_in">get_location_x</span>(i), symbol-&gt;<span class="built_in">get_location_y</span>(i)));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; ++i) &#123;</span><br><span class="line">        <span class="built_in">line</span>(src, points[i], points[(i + <span class="number">1</span>) % <span class="number">4</span>], <span class="built_in">Scalar</span>(<span class="number">0</span>, <span class="number">255</span>, <span class="number">0</span>), <span class="number">2</span>);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">for</span> (; symbol != zbarImage.<span class="built_in">symbol_end</span>(); ++symbol)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;类型：&quot;</span> &lt;&lt; endl &lt;&lt; symbol-&gt;<span class="built_in">get_type_name</span>() &lt;&lt; endl &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;条码：&quot;</span> &lt;&lt; endl &lt;&lt; symbol-&gt;<span class="built_in">get_data</span>() &lt;&lt; endl &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; symbol-&gt;<span class="built_in">get_location_size</span>(); ++i) &#123;</span><br><span class="line">    imagePoints.<span class="built_in">push_back</span>(<span class="built_in">Point2f</span>(symbol-&gt;<span class="built_in">get_location_x</span>(i), symbol-&gt;<span class="built_in">get_location_y</span>(i)));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;查询二维码失败！&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="built_in">imshow</span>(<span class="string">&quot;4&quot;</span>,src);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Zbarcode::QrcodeSearch</span><span class="params">(Mat src)</span></span>&#123;</span><br><span class="line">           ImageScanner scanner;</span><br><span class="line">          scanner.<span class="built_in">set_config</span>(ZBAR_QRCODE, ZBAR_CFG_ENABLE, <span class="number">1</span>);</span><br><span class="line">          Mat gray;</span><br><span class="line">          <span class="built_in">cvtColor</span>(src, gray, COLOR_BGR2GRAY);</span><br><span class="line">          <span class="built_in">prProcess</span>(gray);</span><br><span class="line">          <span class="type">int</span> width =gray.cols;</span><br><span class="line"><span class="type">int</span> height = gray.rows;</span><br><span class="line">uchar *raw = gray.data;</span><br><span class="line"><span class="function">Image <span class="title">zbarImage</span><span class="params">(width, height, <span class="string">&quot;Y800&quot;</span>, raw, width * height)</span></span>;</span><br><span class="line">scanner.<span class="built_in">scan</span>(zbarImage);</span><br><span class="line"></span><br><span class="line"> <span class="keyword">if</span> (zbarImage.<span class="built_in">symbol_begin</span>() != zbarImage.<span class="built_in">symbol_end</span>()) &#123;</span><br><span class="line"><span class="keyword">for</span> (Image::SymbolIterator symbol = zbarImage.<span class="built_in">symbol_begin</span>(); symbol != zbarImage.<span class="built_in">symbol_end</span>(); ++symbol) &#123;</span><br><span class="line">    vector&lt;Point&gt; points;</span><br><span class="line">    vector&lt;Point2f&gt; imagePoints;</span><br><span class="line">    <span class="comment">// 获取二维码的角点</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; symbol-&gt;<span class="built_in">get_location_size</span>(); ++i) &#123;</span><br><span class="line">        points.<span class="built_in">push_back</span>(<span class="built_in">Point</span>(symbol-&gt;<span class="built_in">get_location_x</span>(i), symbol-&gt;<span class="built_in">get_location_y</span>(i)));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 在图像上绘制二维码的角点</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; ++i) &#123;</span><br><span class="line">        <span class="built_in">line</span>(src, points[i], points[(i + <span class="number">1</span>) % <span class="number">4</span>], <span class="built_in">Scalar</span>(<span class="number">0</span>, <span class="number">255</span>, <span class="number">0</span>), <span class="number">2</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"> <span class="comment">// 二维码角点坐标</span></span><br><span class="line">vector&lt;Point3f&gt; objectPoints;</span><br><span class="line">objectPoints.<span class="built_in">push_back</span>(<span class="built_in">Point3f</span>(<span class="number">-1.5</span>, <span class="number">3</span>, <span class="number">0</span>));  <span class="comment">// 左上角</span></span><br><span class="line">objectPoints.<span class="built_in">push_back</span>(<span class="built_in">Point3f</span>(<span class="number">1.5</span>, <span class="number">3</span>, <span class="number">0</span>));   <span class="comment">// 右上角</span></span><br><span class="line">objectPoints.<span class="built_in">push_back</span>(<span class="built_in">Point3f</span>(<span class="number">1.5</span>,<span class="number">0</span>, <span class="number">0</span>));    <span class="comment">// 右下角</span></span><br><span class="line">objectPoints.<span class="built_in">push_back</span>(<span class="built_in">Point3f</span>(<span class="number">-1.5</span>,<span class="number">0</span>, <span class="number">0</span>));   <span class="comment">// 左下角</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 图像中的角点坐标</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; symbol-&gt;<span class="built_in">get_location_size</span>(); ++i) &#123;</span><br><span class="line">    imagePoints.<span class="built_in">push_back</span>(<span class="built_in">Point2f</span>(symbol-&gt;<span class="built_in">get_location_x</span>(i), symbol-&gt;<span class="built_in">get_location_y</span>(i)));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">    cv::Mat cameraMatrix, distCoeffs;</span><br><span class="line">    std::vector&lt;<span class="type">double</span>&gt; camera = &#123;                         </span><br><span class="line">                             <span class="number">968.4681</span>, </span><br><span class="line">                             <span class="number">0</span>,</span><br><span class="line">                             <span class="number">988.8516</span>,</span><br><span class="line">                             <span class="number">0</span>,</span><br><span class="line">                             <span class="number">968.1535</span>,</span><br><span class="line">                             <span class="number">549.3471</span>, </span><br><span class="line">                             <span class="number">0</span>,</span><br><span class="line">                             <span class="number">0</span>,</span><br><span class="line">                            <span class="number">1</span> &#125;;</span><br><span class="line">    cameraMatrix = cv::<span class="built_in">Mat</span>(camera);</span><br><span class="line">    cameraMatrix = cameraMatrix.<span class="built_in">reshape</span>(<span class="number">1</span>, <span class="number">3</span>);</span><br><span class="line">    std::vector&lt;<span class="type">double</span>&gt; dist = &#123;</span><br><span class="line">                              <span class="number">0.1869</span>,</span><br><span class="line">                            <span class="number">-0.2228</span>,</span><br><span class="line">                              <span class="number">0</span>,</span><br><span class="line">                              <span class="number">0</span>,</span><br><span class="line">                              <span class="number">0</span>&#125;;</span><br><span class="line">    distCoeffs = cv::<span class="built_in">Mat</span>(dist);</span><br><span class="line">    distCoeffs = distCoeffs.<span class="built_in">reshape</span>(<span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line"><span class="comment">// 位姿估计</span></span><br><span class="line">        Mat rvecs ;</span><br><span class="line">Mat tvecs ;</span><br><span class="line"><span class="built_in">solvePnP</span>(objectPoints, imagePoints, cameraMatrix, distCoeffs, rvecs, tvecs);</span><br><span class="line"><span class="comment">//创建旋转矩阵和平移矩阵</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 输出旋转矩阵和平移向量</span></span><br><span class="line">Mat rotM = Mat::<span class="built_in">eye</span>(<span class="number">3</span>, <span class="number">3</span>, CV_64F);</span><br><span class="line">Mat rotT = Mat::<span class="built_in">eye</span>(<span class="number">3</span>, <span class="number">3</span>, CV_64F);</span><br><span class="line"><span class="built_in">Rodrigues</span>(rvecs, rotM);  <span class="comment">//将旋转向量变换成旋转矩阵</span></span><br><span class="line"><span class="built_in">Rodrigues</span>(tvecs, rotT);</span><br><span class="line"><span class="comment">//计算角度</span></span><br><span class="line">Mat adjustTvecs;</span><br><span class="line">Mat rot_camera2ptz = cv::Mat::<span class="built_in">eye</span>(<span class="number">3</span>, <span class="number">3</span>, CV_64FC1);</span><br><span class="line">Mat trans_camera2ptz = cv::Mat::<span class="built_in">zeros</span>(<span class="number">3</span>, <span class="number">1</span>, CV_64FC1);</span><br><span class="line">adjustTvecs = rot_camera2ptz * tvecs - trans_camera2ptz;</span><br><span class="line"><span class="built_in">adjustAngle</span>(adjustTvecs,angle_x,angle_y,<span class="number">1</span>,<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//计算深度</span></span><br><span class="line">Mat distance=Mat::<span class="built_in">zeros</span>(<span class="built_in">Size</span>(<span class="number">3</span>,<span class="number">3</span>), CV_64F);</span><br><span class="line">distance = rotM.<span class="built_in">t</span>() * tvecs;</span><br><span class="line"> <span class="built_in">imshow</span>(<span class="string">&quot;4&quot;</span>,src);</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;angle_x:%.4lf ,angle_y:%.4lf\n,distance: %.2lf\n&quot;</span>, angle_x,angle_y,<span class="built_in">abs</span>(distance.<span class="built_in">at</span>&lt;<span class="type">double</span>&gt;(<span class="number">2</span>)));</span><br><span class="line">&#125;&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;error&quot;</span>&lt;&lt;endl;</span><br><span class="line"><span class="built_in">imshow</span>(<span class="string">&quot;4&quot;</span>,src);</span><br><span class="line">&#125;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="comment">/*----------include------------*/</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;opencv2/opencv.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;/home/dl/InternetPlus/lib/zbarcode.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;/home/dl/InternetPlus/lib/ArUcode.h&gt;</span></span></span><br><span class="line"><span class="comment">//#include &lt;/home/dl/InternetPlus/lib/ArUco.h&gt;</span></span><br><span class="line"><span class="comment">/*-----------------------------*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*----------namespace----------*/</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> cv;</span><br><span class="line"><span class="comment">/*-----------------------------*/</span></span><br><span class="line"><span class="comment">/***************************************************************************************************</span></span><br><span class="line"><span class="comment">文件名：main.cpp</span></span><br><span class="line"><span class="comment">介绍:程序启动入口</span></span><br><span class="line"><span class="comment">***************************************************************************************************/</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  Zbarcode cam;</span><br><span class="line"><span class="function">VideoCapture <span class="title">cap</span><span class="params">(<span class="number">0</span>)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">Mat src;</span><br><span class="line">cap &gt;&gt; src;</span><br><span class="line">     cam.<span class="built_in">QrcodeSearch</span>(src);</span><br><span class="line"><span class="comment">//imshow(&quot;相机&quot;,src);//显示当前帧图像</span></span><br><span class="line"><span class="built_in">waitKey</span>(<span class="number">1</span>);<span class="comment">//延时30秒</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2、AR码定位"><a href="#2、AR码定位" class="headerlink" title="2、AR码定位"></a>2、AR码定位</h3><p>很厉害方便的做定位的码</p><p>首先需要一个AR码的生成器</p><p>推荐生成器<a href="https://chev.me/arucogen/">https://chev.me/arucogen/</a></p><p><img src="https://pic1.imgdb.cn/item/67c4708ed0e0a243d40a32ff.png" alt=""></p><h4 id="1-AR码的基本概念"><a href="#1-AR码的基本概念" class="headerlink" title="1.AR码的基本概念"></a>1.AR码的基本概念</h4><p>AR码是一种特殊的二维图像（如二维码或AprilTag），具有以下特点：</p><ul><li><strong>高对比度</strong>：黑白相间，便于图像处理算法识别。</li><li><strong>唯一性</strong>：每个AR码有唯一的ID，用于区分不同的标记。</li><li><strong>几何特征</strong>：具有明显的角点和边缘，便于计算位姿。</li></ul><h4 id="2-AR码三维定位的核心步骤"><a href="#2-AR码三维定位的核心步骤" class="headerlink" title="2. AR码三维定位的核心步骤"></a>2. AR码三维定位的核心步骤</h4><h5 id="1-图像采集"><a href="#1-图像采集" class="headerlink" title="(1) 图像采集"></a>(1) 图像采集</h5><ul><li>使用摄像头或深度相机采集包含AR码的图像。</li><li>如果是深度相机，还可以获取深度信息（即每个像素点到相机的距离）。</li><li>本次使用的是免驱相机。自己进行标定做深度。</li></ul><h5 id="2-图像预处理"><a href="#2-图像预处理" class="headerlink" title="(2) 图像预处理"></a>(2) 图像预处理</h5><ul><li><strong>灰度化</strong>：将彩色图像转换为灰度图像，简化计算。</li><li><strong>二值化</strong>：通过阈值处理，将图像转换为黑白二值图像。</li><li><strong>去噪</strong>：使用滤波算法（如高斯滤波）去除噪声。</li></ul><h5 id="3-AR码检测"><a href="#3-AR码检测" class="headerlink" title="(3) AR码检测"></a>(3) AR码检测</h5><ul><li><strong>轮廓检测</strong>：使用边缘检测算法（如Canny）找到图像中的轮廓。</li><li><strong>四边形拟合</strong>：从轮廓中筛选出四边形（AR码通常是矩形）。</li><li><strong>解码</strong>：识别AR码内部的编码信息，获取其唯一ID。</li><li>本次项目调用opencv-aruco</li></ul><h5 id="4-角点检测"><a href="#4-角点检测" class="headerlink" title="(4) 角点检测"></a>(4) 角点检测</h5><ul><li>提取AR码的四个角点（即四个顶点）。</li><li>这些角点将用于计算AR码的三维位姿。</li></ul><h5 id="5-相机参数"><a href="#5-相机参数" class="headerlink" title="(5) 相机参数"></a>(5) 相机参数</h5><ul><li><strong>内参矩阵</strong>：描述相机的焦距、主点等参数。</li><li><strong>畸变系数</strong>：描述镜头的畸变情况。</li><li>这些参数通过相机标定获得。</li></ul><h5 id="6-三维位姿计算"><a href="#6-三维位姿计算" class="headerlink" title="(6) 三维位姿计算"></a>(6) 三维位姿计算</h5><ul><li><p><strong>PnP问题</strong>：利用AR码的已知物理尺寸（如边长）和图像中的角点坐标，通过PnP（Perspective-n-Point）算法计算AR码的三维位姿。</p></li><li><p><strong>输出结果</strong>：</p><ul><li><strong>平移向量（Translation Vector）</strong>：AR码相对于相机的位置（[x,y,z][<em>x</em>,<em>y</em>,<em>z</em>]）。</li><li><strong>旋转向量（Rotation Vector）</strong>：AR码相对于相机的旋转（通常转换为旋转矩阵或四元数）。</li></ul><h3 id="3-数学原理"><a href="#3-数学原理" class="headerlink" title="3. 数学原理"></a><strong>3. 数学原理</strong></h3><h4 id="1-相机模型"><a href="#1-相机模型" class="headerlink" title="(1) 相机模型"></a><strong>(1) 相机模型</strong></h4><ul><li><p>相机将三维空间中的点投影到二维图像平面，投影公式为：</p><p>s[uv1]=K[RT][XYZ1]<em>s<strong>u</strong>v</em>1=<em>K</em>[<em>R**T</em>]<em>X<strong>Y</strong>Z</em>1</p><p>其中：</p><ul><li>(u,v)(<em>u</em>,<em>v</em>)：图像平面上的像素坐标。</li><li>(X,Y,Z)(<em>X</em>,<em>Y</em>,<em>Z</em>)：三维空间中的点坐标。</li><li>K<em>K</em>：相机内参矩阵。</li><li>R<em>R</em>：旋转矩阵。</li><li>T<em>T</em>：平移向量。</li><li>s<em>s</em>：尺度因子。</li></ul></li></ul><h4 id="2-PnP算法"><a href="#2-PnP算法" class="headerlink" title="(2) PnP算法"></a><strong>(2) PnP算法</strong></h4><ul><li>PnP算法通过已知的3D点（AR码角点）和对应的2D点（图像中的角点），求解相机的位姿（R<em>R</em>和T<em>T</em>）。</li><li>常用算法：<ul><li><strong>EPnP</strong>：高效且稳定的PnP算法。</li><li><strong>Iterative PnP</strong>：基于迭代优化的PnP算法。</li></ul></li></ul><h4 id="3-位姿表示"><a href="#3-位姿表示" class="headerlink" title="(3) 位姿表示"></a><strong>(3) 位姿表示</strong></h4><ul><li><strong>旋转矩阵</strong>：3x3矩阵，表示AR码的旋转。</li><li><strong>四元数</strong>：一种紧凑的旋转表示方法。</li><li><strong>欧拉角</strong>：将旋转分解为绕X、Y、Z轴的旋转角度。</li></ul><hr><h3 id="4-代码实现"><a href="#4-代码实现" class="headerlink" title="4. 代码实现"></a><strong>4. 代码实现</strong></h3><p>在ROS中，AR码的三维定位通常使用<code>ar_track_alvar</code>或<code>apriltag_ros</code>等包。以下是<code>ar_track_alvar</code>的工作流程：</p><h4 id="1-订阅AR码话题"><a href="#1-订阅AR码话题" class="headerlink" title="(1) 订阅AR码话题"></a><strong>(1) 订阅AR码话题</strong></h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">self</span>.ar_sub = rospy.Subscriber(<span class="string">&#x27;/ar_pose_marker&#x27;</span>, AlvarMarkers, <span class="variable language_">self</span>.ar_cb)</span><br></pre></td></tr></table></figure><ul><li>订阅<code>/ar_pose_marker</code>话题，获取AR码的位姿信息。</li></ul><h4 id="2-回调函数处理"><a href="#2-回调函数处理" class="headerlink" title="(2) 回调函数处理"></a><strong>(2) 回调函数处理</strong></h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">ar_cb</span>(<span class="params">self, data</span>):</span><br><span class="line">    <span class="keyword">for</span> marker <span class="keyword">in</span> data.markers:</span><br><span class="line">        <span class="built_in">id</span> = marker.<span class="built_in">id</span></span><br><span class="line">        pose = marker.pose.pose</span><br><span class="line">        position = pose.position  <span class="comment"># 位置 (x, y, z)</span></span><br><span class="line">        orientation = pose.orientation  <span class="comment"># 旋转 (四元数)</span></span><br></pre></td></tr></table></figure><ul><li>从消息中提取AR码的ID、位置和旋转。</li></ul><h4 id="3-位姿转换"><a href="#3-位姿转换" class="headerlink" title="(3) 位姿转换"></a><strong>(3) 位姿转换</strong></h4><ul><li>如果需要将AR码的位姿转换到其他坐标系（如地图坐标系），可以使用TF库：</li></ul></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> tf</span><br><span class="line">listener = tf.TransformListener()</span><br><span class="line">listener.waitForTransform(<span class="string">&quot;map&quot;</span>, <span class="string">&quot;camera_frame&quot;</span>, rospy.Time(), rospy.Duration(<span class="number">4.0</span>))</span><br><span class="line">(trans, rot) = listener.lookupTransform(<span class="string">&quot;map&quot;</span>, <span class="string">&quot;camera_frame&quot;</span>, rospy.Time())</span><br></pre></td></tr></table></figure><p>这是我写的c++版部分代码，</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;/home/dl/InternetPlus/lib/ArUcode.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">ArUcode::prProcess</span><span class="params">(Mat gray)</span></span>&#123;</span><br><span class="line">   <span class="type">int</span> threadvlaue = <span class="number">255</span>;</span><br><span class="line">   Mat enhancedImage;</span><br><span class="line">   <span class="built_in">equalizeHist</span>(gray, enhancedImage);</span><br><span class="line">   Mat binary;</span><br><span class="line"> <span class="built_in">threshold</span>( enhancedImage, binary,<span class="number">112</span>, threadvlaue,THRESH_BINARY ); <span class="comment">//二值化</span></span><br><span class="line">   Mat morphedImage;</span><br><span class="line">   Mat kernel = <span class="built_in">getStructuringElement</span>(MORPH_RECT, <span class="built_in">Size</span>(<span class="number">3</span>, <span class="number">3</span>));</span><br><span class="line">   <span class="built_in">morphologyEx</span>(binary, morphedImage, MORPH_OPEN, kernel);</span><br><span class="line">   <span class="built_in">imshow</span>(<span class="string">&quot;3&quot;</span>,morphedImage);</span><br><span class="line"> </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">ArUcode::QrcodeSearch</span><span class="params">(cv::Mat src)</span></span>&#123;</span><br><span class="line">    Mat gray;</span><br><span class="line">    <span class="built_in">cvtColor</span>(src, gray, COLOR_BGR2GRAY);</span><br><span class="line">    Mat morphedImage;</span><br><span class="line">    <span class="built_in">prProcess</span>(gray);</span><br><span class="line">    <span class="built_in">qrmatch</span>(src);</span><br><span class="line">&#125;</span><br><span class="line"> <span class="function"><span class="type">void</span> <span class="title">ArUcode::qrmatch</span><span class="params">( cv::Mat src)</span></span>&#123;</span><br><span class="line">    cv::Mat cameraMatrix, distCoeffs;</span><br><span class="line">    std::vector&lt;<span class="type">double</span>&gt; camera = &#123;                         </span><br><span class="line">                             <span class="number">968.4681</span>, </span><br><span class="line">                             <span class="number">0</span>,</span><br><span class="line">                             <span class="number">988.8516</span>,</span><br><span class="line">                             <span class="number">0</span>,</span><br><span class="line">                             <span class="number">968.1535</span>,</span><br><span class="line">                             <span class="number">549.3471</span>, </span><br><span class="line">                             <span class="number">0</span>,</span><br><span class="line">                             <span class="number">0</span>,</span><br><span class="line">                            <span class="number">1</span> &#125;;</span><br><span class="line">    cameraMatrix = cv::<span class="built_in">Mat</span>(camera);</span><br><span class="line">    cameraMatrix = cameraMatrix.<span class="built_in">reshape</span>(<span class="number">1</span>, <span class="number">3</span>);</span><br><span class="line">    std::vector&lt;<span class="type">double</span>&gt; dist = &#123;</span><br><span class="line">                              <span class="number">0.1869</span>,</span><br><span class="line">                            <span class="number">-0.2228</span>,</span><br><span class="line">                              <span class="number">0</span>,</span><br><span class="line">                              <span class="number">0</span>,</span><br><span class="line">                              <span class="number">0</span>&#125;;</span><br><span class="line">    distCoeffs = cv::<span class="built_in">Mat</span>(dist);</span><br><span class="line">    distCoeffs = distCoeffs.<span class="built_in">reshape</span>(<span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line">    <span class="comment">//  对标记图像都进行aruco标记的检测以及姿态估计</span></span><br><span class="line">    cv::Mat test_image;</span><br><span class="line">    cv::<span class="built_in">resize</span>(src, test_image, cv::<span class="built_in">Size</span>(<span class="number">800</span>, <span class="number">600</span>));</span><br><span class="line"> <span class="comment">//   cv::imshow(&quot;test_image&quot;, test_image);</span></span><br><span class="line">    <span class="keyword">auto</span> dictionary = cv::aruco::<span class="built_in">getPredefinedDictionary</span>(</span><br><span class="line">    cv::aruco::PREDEFINED_DICTIONARY_NAME::DICT_4X4_50);</span><br><span class="line">    std::vector&lt;std::vector&lt;cv::Point2f&gt;&gt; corners, rejectedImgPoints;</span><br><span class="line">    std::vector&lt;<span class="type">int</span>&gt; ids;</span><br><span class="line">    <span class="keyword">auto</span> parameters = cv::aruco::DetectorParameters::<span class="built_in">create</span>();</span><br><span class="line">    cv::aruco::<span class="built_in">detectMarkers</span>(test_image, dictionary, corners, ids, parameters,</span><br><span class="line">                             rejectedImgPoints);</span><br><span class="line">   <span class="comment">// cv::aruco::drawDetectedMarkers(test_image, corners, ids, cv::Scalar(0, 255, 0));</span></span><br><span class="line"></span><br><span class="line">    std::vector&lt;cv::Vec3d&gt; rvecs;</span><br><span class="line">    std::vector&lt;cv::Vec3d&gt; tvecs;</span><br><span class="line">    cv::aruco::<span class="built_in">estimatePoseSingleMarkers</span>(corners, <span class="number">0.053</span>, cameraMatrix,</span><br><span class="line">                                         distCoeffs, rvecs, tvecs);</span><br><span class="line"><span class="comment">//       // 获取图像的宽度和高度</span></span><br><span class="line"><span class="comment">// int imageWidth = test_image.cols;</span></span><br><span class="line"><span class="comment">// int imageHeight = test_image.rows;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// // 计算图像中心坐标</span></span><br><span class="line"><span class="comment">// double centerX = imageWidth / 2.0;</span></span><br><span class="line"><span class="comment">// double centerY = imageHeight / 2.0;                                   </span></span><br><span class="line"> <span class="comment">// 计算偏移的长度</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; rvecs.<span class="built_in">size</span>(); i++) &#123;</span><br><span class="line">    cv::Mat rotM;</span><br><span class="line">    cv::<span class="built_in">Rodrigues</span>(rvecs[i], rotM);  <span class="comment">// 将旋转向量转换为旋转矩阵</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 计算 x 和 y 偏移的长度</span></span><br><span class="line">  <span class="type">double</span> xLength = rotM.<span class="built_in">at</span>&lt;<span class="type">double</span>&gt;(<span class="number">0</span>, <span class="number">2</span>) ;</span><br><span class="line">    <span class="type">double</span> yLength = rotM.<span class="built_in">at</span>&lt;<span class="type">double</span>&gt;(<span class="number">1</span>, <span class="number">2</span>) ;</span><br><span class="line">    <span class="type">double</span> depth = cv::<span class="built_in">norm</span>(rotM.<span class="built_in">t</span>() * cv::<span class="built_in">Mat</span>(tvecs[i]));</span><br><span class="line">   cout &lt;&lt; <span class="string">&quot;Marker Position - X: &quot;</span> &lt;&lt;xLength*<span class="number">100</span> &lt;&lt; <span class="string">&quot; Y: &quot;</span> &lt;&lt;yLength*<span class="number">100</span>&lt;&lt; <span class="string">&quot; Z: &quot;</span> &lt;&lt;depth*<span class="number">100</span>&lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">    <span class="comment">// step 3: 绘制坐标轴并进行可视化显示</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; rvecs.<span class="built_in">size</span>(); i++) &#123;</span><br><span class="line">         <span class="comment">// 在图像上绘制标记的边界框</span></span><br><span class="line">        cv::aruco::<span class="built_in">drawDetectedMarkers</span>(test_image, corners,ids);</span><br><span class="line">        cv::aruco::<span class="built_in">drawAxis</span>(test_image, cameraMatrix, distCoeffs, rvecs[i],</span><br><span class="line">                            tvecs[i], <span class="number">0.02</span>);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    cv::<span class="built_in">imshow</span>(<span class="string">&quot;pose&quot;</span>, test_image);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2025/03/03/RM%E8%A3%85%E7%94%B2%E6%9D%BF%E8%AF%86%E5%88%AB/"/>
      <url>/2025/03/03/RM%E8%A3%85%E7%94%B2%E6%9D%BF%E8%AF%86%E5%88%AB/</url>
      
        <content type="html"><![CDATA[<h1 id="RM装甲板追踪"><a href="#RM装甲板追踪" class="headerlink" title="RM装甲板追踪"></a>RM装甲板追踪</h1><h2 id="一、RM项目历程"><a href="#一、RM项目历程" class="headerlink" title="一、RM项目历程"></a>一、RM项目历程</h2><p>大二干了一年RM，在视觉算法组，负责对装甲板进行识别追踪，以及英雄机器人小组的通讯联调，以及后期换更换深度视觉通过YOLOv5+加速进行配置的工作</p><p>这个比赛自我认为是对我大二一整年帮助最大的比赛，去南理工的对抗赛以及在常州大学区域赛的比赛中，认识了很多厉害的学校的很厉害的同学，认识到了自己</p><p>很大的不足，让我对之后的学习有了很大的帮助。</p><h2 id="二、装甲板追踪"><a href="#二、装甲板追踪" class="headerlink" title="二、装甲板追踪"></a>二、装甲板追踪</h2><p>装甲板追踪主要分为几个部分，一装甲板识别，二灯条匹配，三计算偏移角。</p><h3 id="1、装甲板识别"><a href="#1、装甲板识别" class="headerlink" title="1、装甲板识别"></a>1、装甲板识别</h3><p>预处理之后通过轮廓检测加上一些限制条件，选出符合灯条条件的边框，为之后的灯条匹配以及计算偏移角做准备。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">Solution::armorPlateSearch</span><span class="params">(cv::Mat src)</span></span>&#123;</span><br><span class="line">std::vector&lt;lightBar&gt; Light_Bar;</span><br><span class="line">cv::Mat srcHsv,srcThread;</span><br><span class="line">cv::Mat dst;</span><br><span class="line"><span class="type">static</span> <span class="type">int</span> threadvlaue = <span class="number">75</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//cv::cvtColor(src, src, cv::COLOR_BayerRG2RGB);</span></span><br><span class="line"><span class="comment">//cv::cvtColor(src, srcHsv, cv::COLOR_RGB2HSV);</span></span><br><span class="line"></span><br><span class="line">std::vector&lt;cv::Mat&gt; channels;</span><br><span class="line">cv::<span class="built_in">split</span>(src, channels);</span><br><span class="line"><span class="keyword">if</span> (color==RED)&#123;</span><br><span class="line">dst = channels[<span class="number">2</span>] - channels[<span class="number">0</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(color==BLUE)&#123;</span><br><span class="line">dst = channels[<span class="number">0</span>] - channels[<span class="number">2</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//cv::blur(dst, dst, cv::Size(1, 3));</span></span><br><span class="line">cv::<span class="built_in">threshold</span>(dst, srcThread, threadvlaue, <span class="number">255</span>, cv::THRESH_BINARY);</span><br><span class="line"><span class="comment">//cv::Mat kernel = cv::getStructuringElement(cv::MORPH_ELLIPSE, cv::Size(3, 3), cv::Point(-1, -1));</span></span><br><span class="line"><span class="comment">//dilate(srcThread, srcThread, kernel);</span></span><br><span class="line"></span><br><span class="line">std::vector&lt;std::vector&lt;cv::Point&gt;&gt; Light_Contour; <span class="comment">// 发现的轮廓</span></span><br><span class="line"><span class="built_in">findContours</span>(srcThread, Light_Contour, cv::RETR_EXTERNAL, cv::CHAIN_APPROX_SIMPLE); <span class="comment">// 寻找轮廓</span></span><br><span class="line"><span class="keyword">if</span> (Light_Contour.<span class="built_in">size</span>() != <span class="number">0</span>)&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; Light_Contour.<span class="built_in">size</span>(); i++) &#123;</span><br><span class="line"><span class="comment">// 求轮廓面积</span></span><br><span class="line"><span class="type">float</span> Light_Contour_Area = <span class="built_in">contourArea</span>(Light_Contour[i]);</span><br><span class="line"><span class="comment">// 去除较小轮廓&amp;fitEllipse的限制条件</span></span><br><span class="line"><span class="keyword">if</span> (Light_Contour_Area &lt; Light_Area_min || Light_Contour[i].<span class="built_in">size</span>() &lt;= <span class="number">3</span>)</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line"><span class="comment">// 用椭圆拟合区域得到外接矩形</span></span><br><span class="line">cv::RotatedRect Light_Rec = <span class="built_in">fitEllipse</span>(Light_Contour[i]);</span><br><span class="line">Light_Rec = <span class="built_in">adjustRec</span>(Light_Rec);</span><br><span class="line"><span class="keyword">if</span> (Light_Rec.angle &gt; Light_angle)</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line"><span class="comment">// 长宽比和轮廓面积比限制</span></span><br><span class="line"><span class="keyword">if</span> (Light_Rec.size.width / Light_Rec.size.height &gt; Light_Aspect_ratio</span><br><span class="line">|| Light_Contour_Area / Light_Rec.size.<span class="built_in">area</span>() &lt; Light_crown)</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line"><span class="comment">//// 扩大灯柱的面积</span></span><br><span class="line">Light_Rec.size.height *= <span class="number">1.1</span>;</span><br><span class="line">Light_Rec.size.width *= <span class="number">1.1</span>;</span><br><span class="line"><span class="comment">//保存灯条</span></span><br><span class="line">Light_Bar.<span class="built_in">push_back</span>(<span class="built_in">lightBar</span>(Light_Rec, i));</span><br><span class="line"></span><br><span class="line"><span class="comment">//cv::drawContours(src, Light_Contour, i, cv::Scalar(0, 0, 255), 2);</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//匹配灯条</span></span><br><span class="line"><span class="built_in">matchLight</span>(Light_Bar, src, Light_Contour);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//imshow(&quot;src&quot;, src);</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2、灯条匹配"><a href="#2、灯条匹配" class="headerlink" title="2、灯条匹配"></a>2、灯条匹配</h3><p>通过角度、面积以及长度来匹配相同的组别的灯条进行匹配，返回角点进行画框，找到中心点，</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">Solution::matchLight</span><span class="params">(std::vector&lt;lightBar&gt; light, cv::Mat src, std::vector&lt;std::vector&lt;cv::Point&gt;&gt; Light_Contour)</span></span>&#123;</span><br><span class="line"><span class="type">static</span> <span class="type">double</span> times = <span class="number">0</span>;</span><br><span class="line"><span class="type">static</span> <span class="type">double</span> lasttime = <span class="number">0</span>;</span><br><span class="line">Point currentCenter;</span><br><span class="line">Point forcastPositon;</span><br><span class="line">std::vector&lt;<span class="type">int</span>*&gt; reliability;</span><br><span class="line"><span class="type">double</span> dist[<span class="number">3</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"><span class="type">double</span> speed[<span class="number">3</span>]=&#123; <span class="number">0</span> &#125;;</span><br><span class="line"><span class="type">static</span> <span class="type">double</span> lastSpeed[<span class="number">3</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"><span class="type">double</span> t=<span class="number">0</span>;</span><br><span class="line"><span class="type">double</span> acc[<span class="number">3</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"><span class="keyword">if</span> (light.<span class="built_in">size</span>() &lt; <span class="number">2</span>)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;没有找到装甲板\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; light.<span class="built_in">size</span>() - <span class="number">1</span>; i++)&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = i + <span class="number">1</span>; j &lt; light.<span class="built_in">size</span>(); j++)&#123;</span><br><span class="line"><span class="type">int</span> level = <span class="number">0</span>;</span><br><span class="line"><span class="type">double</span> area[<span class="number">2</span>];</span><br><span class="line"><span class="type">int</span> temp[<span class="number">3</span>];</span><br><span class="line">lightBar leftRect = light[i];</span><br><span class="line">lightBar rightRect = light[j];</span><br><span class="line"></span><br><span class="line"><span class="comment">//角度判断</span></span><br><span class="line"><span class="keyword">if</span> (leftRect.Rect.angle == rightRect.Rect.angle) &#123;</span><br><span class="line">level += <span class="number">10</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">abs</span>(leftRect.Rect.angle - rightRect.Rect.angle) &lt; <span class="number">5</span>) &#123;</span><br><span class="line">level += <span class="number">8</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">abs</span>(leftRect.Rect.angle - rightRect.Rect.angle) &lt; <span class="number">10</span>) &#123;</span><br><span class="line">level += <span class="number">6</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">abs</span>(leftRect.Rect.angle - rightRect.Rect.angle) &lt; <span class="number">30</span>) &#123;</span><br><span class="line">level += <span class="number">4</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">abs</span>(leftRect.Rect.angle - rightRect.Rect.angle) &lt; <span class="number">90</span>) &#123;</span><br><span class="line">level += <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//面积筛选</span></span><br><span class="line">area[<span class="number">0</span>] = leftRect.Rect.size.width * leftRect.Rect.size.height;</span><br><span class="line">area[<span class="number">1</span>] = rightRect.Rect.size.width * rightRect.Rect.size.height;</span><br><span class="line"><span class="keyword">if</span> (area[<span class="number">0</span>] == area[<span class="number">1</span>]) &#123;</span><br><span class="line">level += <span class="number">10</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">min</span>(area[<span class="number">0</span>], area[<span class="number">1</span>]) * <span class="number">1.5</span> &gt; <span class="built_in">max</span>(area[<span class="number">0</span>], area[<span class="number">1</span>])) &#123;</span><br><span class="line">level += <span class="number">8</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">min</span>(area[<span class="number">0</span>], area[<span class="number">1</span>]) * <span class="number">2</span> &gt; <span class="built_in">max</span>(area[<span class="number">0</span>], area[<span class="number">1</span>])) &#123;</span><br><span class="line">level += <span class="number">6</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">min</span>(area[<span class="number">0</span>], area[<span class="number">1</span>]) * <span class="number">3</span> &gt; <span class="built_in">max</span>(area[<span class="number">0</span>], area[<span class="number">1</span>])) &#123;</span><br><span class="line">level += <span class="number">4</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">min</span>(area[<span class="number">0</span>], area[<span class="number">1</span>]) * <span class="number">4</span> &gt; <span class="built_in">max</span>(area[<span class="number">0</span>], area[<span class="number">1</span>])) &#123;</span><br><span class="line">level += <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//长度筛选</span></span><br><span class="line"><span class="type">double</span> half_height = (leftRect.Rect.size.height + rightRect.Rect.size.height) / <span class="number">4</span>;</span><br><span class="line"><span class="keyword">if</span> (leftRect.Rect.center.y == rightRect.Rect.center.y) &#123;</span><br><span class="line">level += <span class="number">10</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">abs</span>(leftRect.Rect.center.y - rightRect.Rect.center.y) &lt; <span class="number">0.2</span> * half_height) &#123;</span><br><span class="line">level += <span class="number">8</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">abs</span>(leftRect.Rect.center.y - rightRect.Rect.center.y) &lt; <span class="number">0.4</span> * half_height) &#123;</span><br><span class="line">level += <span class="number">6</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">abs</span>(leftRect.Rect.center.y - rightRect.Rect.center.y) &lt; <span class="number">0.8</span> * half_height) &#123;</span><br><span class="line">level += <span class="number">4</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">abs</span>(leftRect.Rect.center.y - rightRect.Rect.center.y) &lt; half_height) &#123;</span><br><span class="line">level += <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">temp[<span class="number">0</span>] = i;</span><br><span class="line">temp[<span class="number">1</span>] = j;</span><br><span class="line">temp[<span class="number">2</span>] = level;</span><br><span class="line">reliability.<span class="built_in">push_back</span>(temp);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (reliability.<span class="built_in">empty</span>())&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;没有找到装甲板\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="type">int</span> maxLevel = <span class="number">0</span>, index = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> k = <span class="number">0</span>; k &lt; reliability.<span class="built_in">size</span>(); ++k)&#123;</span><br><span class="line"><span class="keyword">if</span> (reliability[k][<span class="number">2</span>] &gt; maxLevel)&#123;</span><br><span class="line">maxLevel = reliability[k][<span class="number">2</span>];</span><br><span class="line">index = k;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">Mat mask = Mat::<span class="built_in">zeros</span>(src.<span class="built_in">size</span>(), src.<span class="built_in">type</span>());</span><br><span class="line">currentCenter.x = (light[reliability[index][<span class="number">0</span>]].Rect.center.x + </span><br><span class="line">light[reliability[index][<span class="number">1</span>]].Rect.center.x) / <span class="number">2</span>;</span><br><span class="line">currentCenter.y = (light[reliability[index][<span class="number">0</span>]].Rect.center.y + </span><br><span class="line">light[reliability[index][<span class="number">1</span>]].Rect.center.y) / <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// circle(mask, currentCenter, 7.5, Scalar(0, 0, 255), 5);</span></span><br><span class="line"><span class="comment">// //cv::drawContours(mask, Light_Contour, light[reliability[index][0]].i, cv::Scalar(0, 0, 255), 2);</span></span><br><span class="line"><span class="comment">// //cv::drawContours(mask, Light_Contour, light[reliability[index][1]].i, cv::Scalar(0, 0, 255), 2);</span></span><br><span class="line"><span class="built_in">circle</span>(src, Light_Contour[light[reliability[index][<span class="number">0</span>]].i][<span class="number">0</span>], <span class="number">2</span>, <span class="built_in">Scalar</span>(<span class="number">255</span>, <span class="number">0</span>, <span class="number">0</span>), <span class="number">5</span>);</span><br><span class="line"><span class="built_in">circle</span>(src, Light_Contour[light[reliability[index][<span class="number">1</span>]].i][<span class="number">0</span>], <span class="number">2</span>, <span class="built_in">Scalar</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">255</span>), <span class="number">5</span>);</span><br><span class="line"><span class="built_in">circle</span>(src, light[reliability[index][<span class="number">0</span>]].Rect.center, <span class="number">2</span>, <span class="built_in">Scalar</span>(<span class="number">0</span>, <span class="number">255</span>, <span class="number">0</span>), <span class="number">5</span>);</span><br><span class="line"><span class="built_in">circle</span>(src, light[reliability[index][<span class="number">1</span>]].Rect.center, <span class="number">2</span>, <span class="built_in">Scalar</span>(<span class="number">255</span>, <span class="number">0</span>, <span class="number">255</span>), <span class="number">5</span>);</span><br><span class="line"><span class="comment">//cv::imshow(&quot;mask&quot;, mask);</span></span><br></pre></td></tr></table></figure><h3 id="3、计算深度、角度"><a href="#3、计算深度、角度" class="headerlink" title="3、计算深度、角度"></a>3、计算深度、角度</h3><p>将相机进行标定，相机内参矩阵与外参矩阵，这边推荐用MATLAB+标定板</p><p>求解pnp，最后计算角度，以及深度</p><p>通过加速度和速度进行预测追踪</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//已经匹配完成，开始计算</span></span><br><span class="line"></span><br><span class="line">std::vector&lt;Point2f&gt; P;<span class="comment">//图像上的点</span></span><br><span class="line">P.<span class="built_in">clear</span>();</span><br><span class="line">P.<span class="built_in">push_back</span>((Point2f)Light_Contour[light[reliability[index][<span class="number">0</span>]].i][<span class="number">0</span>]);</span><br><span class="line">P.<span class="built_in">push_back</span>((Point2f)Light_Contour[light[reliability[index][<span class="number">1</span>]].i][<span class="number">0</span>]);</span><br><span class="line">P.<span class="built_in">push_back</span>((Point2f)light[reliability[index][<span class="number">0</span>]].Rect.center);</span><br><span class="line">P.<span class="built_in">push_back</span>((Point2f)light[reliability[index][<span class="number">1</span>]].Rect.center);</span><br><span class="line"></span><br><span class="line"><span class="comment">//将控制点在世界坐标系的坐标压入容器</span></span><br><span class="line">std::vector&lt;cv::Point3f&gt; objP;</span><br><span class="line">objP.<span class="built_in">clear</span>();</span><br><span class="line">objP.<span class="built_in">push_back</span>(cv::<span class="built_in">Point3f</span>(<span class="number">-7.5</span>, <span class="number">3.0</span>, <span class="number">0</span>));</span><br><span class="line">objP.<span class="built_in">push_back</span>(cv::<span class="built_in">Point3f</span>(<span class="number">7.5</span>, <span class="number">3.0</span>, <span class="number">0</span>));</span><br><span class="line">objP.<span class="built_in">push_back</span>(cv::<span class="built_in">Point3f</span>(<span class="number">-7.5</span>, <span class="number">0</span>, <span class="number">0</span>));</span><br><span class="line">objP.<span class="built_in">push_back</span>(cv::<span class="built_in">Point3f</span>(<span class="number">7.5</span>, <span class="number">0</span>, <span class="number">0</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建旋转矩阵和平移矩阵</span></span><br><span class="line">Mat rvecs ;</span><br><span class="line">Mat tvecs ;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//相机内参矩阵与外参矩阵(需要标定)</span></span><br><span class="line">Mat cameraMatrix = Mat::<span class="built_in">eye</span>(<span class="number">3</span>, <span class="number">3</span>, CV_64F);<span class="comment">//单位矩阵函数</span></span><br><span class="line">cameraMatrix.<span class="built_in">at</span>&lt;<span class="type">double</span>&gt;(<span class="number">0</span>, <span class="number">0</span>) = <span class="number">3636.201</span>;</span><br><span class="line">cameraMatrix.<span class="built_in">at</span>&lt;<span class="type">double</span>&gt;(<span class="number">0</span>, <span class="number">1</span>) = <span class="number">0</span>;</span><br><span class="line">cameraMatrix.<span class="built_in">at</span>&lt;<span class="type">double</span>&gt;(<span class="number">0</span>, <span class="number">2</span>) = <span class="number">744.9806</span>;</span><br><span class="line">cameraMatrix.<span class="built_in">at</span>&lt;<span class="type">double</span>&gt;(<span class="number">1</span>, <span class="number">0</span>) = <span class="number">0</span>;</span><br><span class="line">cameraMatrix.<span class="built_in">at</span>&lt;<span class="type">double</span>&gt;(<span class="number">1</span>, <span class="number">1</span>) =<span class="number">3642.7002</span>;</span><br><span class="line">cameraMatrix.<span class="built_in">at</span>&lt;<span class="type">double</span>&gt;(<span class="number">1</span>, <span class="number">2</span>) = <span class="number">574.7465</span>;</span><br><span class="line">cameraMatrix.<span class="built_in">at</span>&lt;<span class="type">double</span>&gt;(<span class="number">2</span>, <span class="number">0</span>) = <span class="number">0</span>;</span><br><span class="line">cameraMatrix.<span class="built_in">at</span>&lt;<span class="type">double</span>&gt;(<span class="number">2</span>, <span class="number">1</span>) = <span class="number">0</span>;</span><br><span class="line">cameraMatrix.<span class="built_in">at</span>&lt;<span class="type">double</span>&gt;(<span class="number">2</span>, <span class="number">2</span>) = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">Mat distCoeffs = Mat::<span class="built_in">zeros</span>(<span class="number">5</span>, <span class="number">1</span>, CV_64F);</span><br><span class="line">distCoeffs.<span class="built_in">at</span>&lt;<span class="type">double</span>&gt;(<span class="number">0</span>, <span class="number">0</span>) = <span class="number">-0.0681</span>;</span><br><span class="line">distCoeffs.<span class="built_in">at</span>&lt;<span class="type">double</span>&gt;(<span class="number">1</span>, <span class="number">0</span>) = <span class="number">0.4122</span>;</span><br><span class="line">distCoeffs.<span class="built_in">at</span>&lt;<span class="type">double</span>&gt;(<span class="number">2</span>, <span class="number">0</span>) = <span class="number">0</span>;</span><br><span class="line">distCoeffs.<span class="built_in">at</span>&lt;<span class="type">double</span>&gt;(<span class="number">3</span>, <span class="number">0</span>) = <span class="number">0</span>;</span><br><span class="line">distCoeffs.<span class="built_in">at</span>&lt;<span class="type">double</span>&gt;(<span class="number">4</span>, <span class="number">0</span>) = <span class="number">0</span>;</span><br><span class="line"><span class="comment">//求解pnp</span></span><br><span class="line"><span class="type">static</span> Mat lasttvecs = Mat::<span class="built_in">zeros</span>(<span class="built_in">Size</span>(<span class="number">1</span>, <span class="number">3</span>), CV_64F);</span><br><span class="line"><span class="built_in">solvePnP</span>(objP, P, cameraMatrix, distCoeffs, rvecs, tvecs);</span><br><span class="line">Mat rotM = Mat::<span class="built_in">eye</span>(<span class="number">3</span>, <span class="number">3</span>, CV_64F);</span><br><span class="line">Mat rotT = Mat::<span class="built_in">eye</span>(<span class="number">3</span>, <span class="number">3</span>, CV_64F);</span><br><span class="line"><span class="built_in">Rodrigues</span>(rvecs, rotM);  <span class="comment">//将旋转向量变换成旋转矩阵</span></span><br><span class="line"><span class="built_in">Rodrigues</span>(tvecs, rotT);</span><br><span class="line"></span><br><span class="line"><span class="comment">// //计算相机旋转角</span></span><br><span class="line"><span class="comment">// double theta_x, theta_y, theta_z;</span></span><br><span class="line"><span class="comment">// double PI = 3.14159;</span></span><br><span class="line"><span class="comment">// theta_x = atan2(rotM.at&lt;double&gt;(2, 1), rotM.at&lt;double&gt;(2, 2));</span></span><br><span class="line"><span class="comment">// theta_y = atan2(-rotM.at&lt;double&gt;(2, 0),</span></span><br><span class="line"><span class="comment">// sqrt(rotM.at&lt;double&gt;(2, 1) * rotM.at&lt;double&gt;(2, 1) + rotM.at&lt;double&gt;(2, 2) * rotM.at&lt;double&gt;(2, 2)));</span></span><br><span class="line"><span class="comment">// theta_z = atan2(rotM.at&lt;double&gt;(1, 0), rotM.at&lt;double&gt;(0, 0));</span></span><br><span class="line"><span class="comment">// theta_x = theta_x * (180 / PI);</span></span><br><span class="line"><span class="comment">// theta_y = theta_y * (180 / PI);</span></span><br><span class="line"><span class="comment">// theta_z = theta_z * (180 / PI);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//计算角度</span></span><br><span class="line">Mat adjustTvecs;</span><br><span class="line">Mat rot_camera2ptz = cv::Mat::<span class="built_in">eye</span>(<span class="number">3</span>, <span class="number">3</span>, CV_64FC1);</span><br><span class="line">Mat trans_camera2ptz = cv::Mat::<span class="built_in">zeros</span>(<span class="number">3</span>, <span class="number">1</span>, CV_64FC1);</span><br><span class="line">adjustTvecs = rot_camera2ptz * tvecs - trans_camera2ptz;</span><br><span class="line"><span class="built_in">adjustAngle</span>(adjustTvecs,angle_x,angle_y,<span class="number">1</span>,<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//计算深度</span></span><br><span class="line">Mat distance=Mat::<span class="built_in">zeros</span>(<span class="built_in">Size</span>(<span class="number">3</span>,<span class="number">3</span>), CV_64F);</span><br><span class="line">distance = rotM.<span class="built_in">t</span>() * tvecs;</span><br><span class="line"></span><br><span class="line"><span class="comment">//输出</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;距离： %.2lf\n&quot;</span>, <span class="built_in">abs</span>(distance.<span class="built_in">at</span>&lt;<span class="type">double</span>&gt;(<span class="number">2</span>)));</span><br><span class="line"><span class="comment">//printf(&quot;角度： theta_x:%.4lf ,theta_y:%.4lf ,theta_z:%.4lf\n&quot;, theta_x, theta_y, theta_z);</span></span><br><span class="line"><span class="comment">//printf(&quot;angle_x:%.4lf ,angle_y:%.4lf\n&quot;, angle_x,angle_y);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//计算速度和加速度</span></span><br><span class="line"></span><br><span class="line">t = ((times - lasttime)*<span class="number">1000</span>) / CLOCKS_PER_SEC;</span><br><span class="line"></span><br><span class="line">dist[<span class="number">0</span>] = (tvecs.<span class="built_in">at</span>&lt;<span class="type">double</span>&gt;(<span class="number">0</span>) - lasttvecs.<span class="built_in">at</span>&lt;<span class="type">double</span>&gt;(<span class="number">0</span>))*<span class="number">10</span>; <span class="comment">//单位mm</span></span><br><span class="line">speed[<span class="number">0</span>] = dist[<span class="number">0</span>] / t;</span><br><span class="line"></span><br><span class="line">dist[<span class="number">1</span>] = (tvecs.<span class="built_in">at</span>&lt;<span class="type">double</span>&gt;(<span class="number">1</span>) - lasttvecs.<span class="built_in">at</span>&lt;<span class="type">double</span>&gt;(<span class="number">1</span>))*<span class="number">10</span>;</span><br><span class="line">speed[<span class="number">1</span>] = dist[<span class="number">1</span>] / t;</span><br><span class="line"></span><br><span class="line">dist[<span class="number">2</span>] = (tvecs.<span class="built_in">at</span>&lt;<span class="type">double</span>&gt;(<span class="number">2</span>) - lasttvecs.<span class="built_in">at</span>&lt;<span class="type">double</span>&gt;(<span class="number">2</span>))*<span class="number">10</span>;</span><br><span class="line">speed[<span class="number">2</span>] = dist[<span class="number">2</span>] / t;</span><br><span class="line"></span><br><span class="line">acc[<span class="number">0</span>] = (speed[<span class="number">0</span>] - lastSpeed[<span class="number">0</span>]) / t;</span><br><span class="line">acc[<span class="number">1</span>] = (speed[<span class="number">1</span>] - lastSpeed[<span class="number">1</span>]) / t;</span><br><span class="line">acc[<span class="number">2</span>] = (speed[<span class="number">2</span>] - lastSpeed[<span class="number">2</span>]) / t;</span><br><span class="line"><span class="comment">//printf(&quot;速度：  speedx:%.4lf m/s,speedy:%.4lf m/s,speedz:%.4lf m/s\n&quot;, speed[0], speed[1], speed[2]);</span></span><br><span class="line"><span class="comment">//printf(&quot;加速度：accx:%.4lf m/s^2,accy:%.4lf m/s^2,accz:%.4lf m/s^2\n&quot;, acc[0], acc[1], acc[2]);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//计算预测点位置</span></span><br><span class="line">forcastPositon.x = currentCenter.x + speed[<span class="number">0</span>] * t + <span class="number">1</span> / <span class="number">2</span> * acc[<span class="number">0</span>] * t * t;</span><br><span class="line">forcastPositon.y = currentCenter.y + speed[<span class="number">1</span>] * t + <span class="number">1</span> / <span class="number">2</span> * acc[<span class="number">1</span>] * t * t;</span><br><span class="line"></span><br><span class="line">lasttvecs = tvecs;</span><br><span class="line">lastSpeed[<span class="number">0</span>] = speed[<span class="number">0</span>];</span><br><span class="line">lastSpeed[<span class="number">1</span>] = speed[<span class="number">1</span>];</span><br><span class="line">lastSpeed[<span class="number">2</span>] = speed[<span class="number">2</span>];</span><br><span class="line">&#125;</span><br><span class="line">lasttime = times;</span><br><span class="line">times = <span class="built_in">clock</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">cv::RotatedRect <span class="title">Solution::adjustRec</span><span class="params">(cv::RotatedRect Light_Rec)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (Light_Rec.angle &gt; <span class="number">90</span>)</span><br><span class="line">Light_Rec.angle = <span class="number">180</span> - Light_Rec.angle;</span><br><span class="line"><span class="keyword">return</span> Light_Rec;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Solution::adjustAngle</span><span class="params">(<span class="type">const</span> cv::Mat &amp; pos_in_ptz, <span class="type">double</span> &amp; angle_x, <span class="type">double</span> &amp; angle_y, <span class="type">double</span> bullet_speed, <span class="type">double</span> current_ptz_angle)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">const</span> <span class="type">double</span> *_xyz = (<span class="type">const</span> <span class="type">double</span> *)pos_in_ptz.data;</span><br><span class="line"><span class="type">double</span> <span class="type">down_t</span> = <span class="number">0.0</span>;</span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;pos_in_ptz &quot; &lt;&lt; pos_in_ptz &lt;&lt; endl;</span></span><br><span class="line"><span class="keyword">if</span> (bullet_speed &gt; <span class="number">10e-3</span>)</span><br><span class="line"><span class="type">down_t</span> = _xyz[<span class="number">2</span>] / <span class="number">100.0</span> / bullet_speed;</span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;**********************************  &quot;&lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;bullet_speed  &quot; &lt;&lt; bullet_speed &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;down_t  &quot; &lt;&lt; down_t;</span></span><br><span class="line"><span class="type">double</span> offset_gravity = <span class="number">0.5</span> * <span class="number">9.8</span> * <span class="type">down_t</span> * <span class="type">down_t</span> * <span class="number">100</span>;</span><br><span class="line">offset_gravity=<span class="number">0</span>;</span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;offset_gravity  &quot; &lt;&lt; offset_gravity &lt;&lt; endl;</span></span><br><span class="line"><span class="type">double</span> xyz[<span class="number">3</span>] = &#123; _xyz[<span class="number">0</span>], _xyz[<span class="number">1</span>] - offset_gravity, _xyz[<span class="number">2</span>] &#125;;</span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;xyz[3]  &quot; &lt;&lt; xyz[0] &lt;&lt; xyz[1] &lt;&lt; xyz[2] &lt;&lt; endl;</span></span><br><span class="line"><span class="type">double</span> alpha = <span class="number">0.0</span>, theta = <span class="number">0.0</span>;</span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;offset_y_barrel_ptz  &quot; &lt;&lt; offset_y_barrel_ptz &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;sqrt(xyz[1] * xyz[1] + xyz[2] * xyz[2])  &quot; &lt;&lt; sqrt(xyz[1] * xyz[1] + xyz[2] * xyz[2]) &lt;&lt; endl;</span></span><br><span class="line">    <span class="type">double</span> offset_y_barrel_ptz=<span class="number">0</span>;</span><br><span class="line">alpha = <span class="built_in">asin</span>(offset_y_barrel_ptz / <span class="built_in">sqrt</span>(xyz[<span class="number">1</span>] * xyz[<span class="number">1</span>] + xyz[<span class="number">2</span>] * xyz[<span class="number">2</span>]));</span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;alpha  &quot; &lt;&lt; alpha &lt;&lt; endl;</span></span><br><span class="line"><span class="keyword">if</span> (xyz[<span class="number">1</span>] &lt; <span class="number">0</span>)&#123;</span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;1&quot; &lt;&lt; endl;</span></span><br><span class="line">theta = <span class="built_in">atan</span>(-xyz[<span class="number">1</span>] / xyz[<span class="number">2</span>]);</span><br><span class="line">angle_y = -(alpha + theta);  <span class="comment">// camera coordinate</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (xyz[<span class="number">1</span>] &lt; offset_y_barrel_ptz)&#123;</span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;2&quot; &lt;&lt; endl;</span></span><br><span class="line">theta = <span class="built_in">atan</span>(xyz[<span class="number">1</span>] / xyz[<span class="number">2</span>]);</span><br><span class="line">angle_y = -(alpha - theta);  <span class="comment">// camera coordinate</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;3  &quot;&lt;&lt;endl;</span></span><br><span class="line">theta = <span class="built_in">atan</span>(xyz[<span class="number">1</span>] / xyz[<span class="number">2</span>]);</span><br><span class="line">angle_y = (theta - alpha);   <span class="comment">// camera coordinate</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;theta  &quot; &lt;&lt; theta &lt;&lt; endl;</span></span><br><span class="line">angle_x = <span class="built_in">atan2</span>(xyz[<span class="number">0</span>], xyz[<span class="number">2</span>]);</span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;angle_x: &quot; &lt;&lt; angle_x &lt;&lt; &quot;\tangle_y: &quot; &lt;&lt; angle_y &lt;&lt;  &quot;\talpha: &quot; &lt;&lt; alpha &lt;&lt; &quot;\ttheta: &quot; &lt;&lt; theta &lt;&lt; endl;</span></span><br><span class="line">angle_x = -angle_x * (<span class="number">180</span> / PI);</span><br><span class="line">angle_y = angle_y * (<span class="number">180</span> / PI);</span><br><span class="line">angle_x=<span class="number">90</span>-angle_x;</span><br><span class="line">angle_y=<span class="number">90</span>-angle_y;</span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;angle_x=  &quot; &lt;&lt; 90-angle_x&lt;&lt; &quot;angle_y=  &quot; &lt;&lt; 90-angle_y&lt;&lt; endl;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id=""><a href="#" class="headerlink" title=" "></a> </h2>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>无人机识别</title>
      <link href="/2023/12/05/yolofly/"/>
      <url>/2023/12/05/yolofly/</url>
      
        <content type="html"><![CDATA[无人机]]></content>
      
      
      <categories>
          
          <category> 项目 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 加油 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
